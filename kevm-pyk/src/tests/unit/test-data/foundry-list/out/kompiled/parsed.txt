module ARRAY-SYNTAX [digest(��-U��Q�Ťx�k��*V7��Ԍ]yy�-), org.kframework.attributes.Location(Location(73,1,136,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports LIST
  syntax KItem ::= Array "[" Int "]" [function, hook(ARRAY.lookup)]
  syntax Bool ::= Int "in_keys" "(" Array ")" [function, hook(ARRAY.in_keys), total]
  syntax Array [element(_[_<-_]), hook(ARRAY.Array), org.kframework.attributes.Location(Location(76,3,76,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), unit(arrayCtor)]
  syntax Array ::= Array "[" key:Int "<-" value:KItem "]" [function, hook(ARRAY.update), klabel(_[_<-_]), symbol]
  syntax Array ::= Array "[" Int "<-" "undef" "]" [function, hook(ARRAY.remove)]
  syntax Array ::= "updateArray" "(" Array "," index:Int "," List ")" [function, hook(ARRAY.updateAll), klabel(updateArray)]
  syntax Array ::= "fillArray" "(" Array "," index:Int "," length:Int "," value:KItem ")" [function, hook(ARRAY.fill), klabel(fillArray)]
endmodule


module ASSERTTEST-CONTRACT [digest(4+��)���E ��At�uf�DfmJ�q^��A), org.kframework.attributes.Location(Location(40,1,146,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k))]
  imports FOUNDRY
  syntax Field ::= AssertTestField
  syntax Contract ::= AssertTestContract
  syntax Bytes ::= AssertTestContract "." AssertTestMethod [function, klabel(method_AssertTest), symbol]
  syntax AssertTestMethod ::= "vm" "(" ")" [klabel(method_AssertTest_vm_), symbol]
  syntax AssertTestMethod ::= "test_assert_true" "(" ")" [klabel(method_AssertTest_test_assert_true_), symbol]
  syntax AssertTestMethod ::= "test_assert_false" "(" ")" [klabel(method_AssertTest_test_assert_false_), symbol]
  syntax AssertTestMethod ::= "testFail_assert_true" "(" ")" [klabel(method_AssertTest_testFail_assert_true_), symbol]
  syntax AssertTestMethod ::= "testFail_assert_false" "(" ")" [klabel(method_AssertTest_testFail_assert_false_), symbol]
  syntax AssertTestMethod ::= "setUp" "(" ")" [klabel(method_AssertTest_setUp_), symbol]
  syntax AssertTestMethod ::= "failed" "(" ")" [klabel(method_AssertTest_failed_), symbol]
  syntax AssertTestMethod ::= "IS_TEST" "(" ")" [klabel(method_AssertTest_IS_TEST_), symbol]
  syntax AssertTestMethod ::= "IS_SCRIPT" "(" ")" [klabel(method_AssertTest_IS_SCRIPT_), symbol]
  syntax AssertTestField ::= "stdstore" [klabel(field_AssertTest_stdstore), symbol]
  syntax AssertTestField ::= "_failed" [klabel(field_AssertTest__failed), symbol]
  syntax AssertTestField ::= "IS_TEST" [klabel(field_AssertTest_IS_TEST), symbol]
  syntax AssertTestField ::= "IS_SCRIPT" [klabel(field_AssertTest_IS_SCRIPT), symbol]
  syntax AssertTestContract ::= "AssertTest" [klabel(contract_AssertTest), symbol]
  rule binRuntime(`contract_AssertTest`(.KList))=>`#parseByteStack(_)_SERIALIZATION_Bytes_String`(#token("\"0x608060405234801561001057600080fd5b50600436106100935760003560e01c80635ddecbfd116100665780635ddecbfd146100d25780637aa9ccae146100d2578063ba414fa6146100da578063f8ccbf47146100f2578063fa7626d41461010557600080fd5b80630a9254e41461009857806318675d4214610098578063360da4d2146100985780633a7684631461009a575b600080fd5b005b6100b5737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b610098610114565b6100e261011c565b60405190151581526020016100c9565b6000546100e29062010000900460ff1681565b6000546100e29060ff1681565b565b610112610247565b60008054610100900460ff161561013c5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156102425760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916101ca917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610298565b60408051601f19818403018152908290526101e4916102bc565b6000604051808303816000865af19150503d8060008114610221576040519150601f19603f3d011682016040523d82523d6000602084013e610226565b606091505b509150508080602001905181019061023e91906102cf565b9150505b919050565b634e487b7160e01b600052600160045260246000fd5b6000815160005b8181101561027e5760208185018101518683015201610264565b8181111561028d576000828601525b509290920192915050565b6001600160e01b03198316815260006102b4600483018461025d565b949350505050565b60006102c8828461025d565b9392505050565b6000602082840312156102e157600080fd5b815180151581146102c857600080fdfea264697066735822122078ea62940a85bea935ede718a69828832fdeb95b944ce2c3cd542711dab96ab964736f6c634300080d0033\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(47,11,47,1683)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_AssertTest`(`contract_AssertTest`(.KList),`method_AssertTest_vm_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"vm\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(116,11,116,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_AssertTest`(`contract_AssertTest`(.KList),`method_AssertTest_test_assert_true_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"test_assert_true\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(113,11,113,100)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_AssertTest`(`contract_AssertTest`(.KList),`method_AssertTest_test_assert_false_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"test_assert_false\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(110,11,110,102)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_AssertTest`(`contract_AssertTest`(.KList),`method_AssertTest_testFail_assert_true_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"testFail_assert_true\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(107,11,107,108)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_AssertTest`(`contract_AssertTest`(.KList),`method_AssertTest_testFail_assert_false_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"testFail_assert_false\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(104,11,104,110)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_AssertTest`(`contract_AssertTest`(.KList),`method_AssertTest_setUp_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"setUp\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(101,11,101,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_AssertTest`(`contract_AssertTest`(.KList),`method_AssertTest_failed_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"failed\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(98,11,98,80)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_AssertTest`(`contract_AssertTest`(.KList),`method_AssertTest_IS_TEST_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"IS_TEST\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(95,11,95,82)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_AssertTest`(`contract_AssertTest`(.KList),`method_AssertTest_IS_SCRIPT_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"IS_SCRIPT\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(92,11,92,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `contract_access_loc`(`contract_access_field`(`contract_AssertTest`(.KList),`field_AssertTest_stdstore`(.KList)))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(69,11,69,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `contract_access_loc`(`contract_access_field`(`contract_AssertTest`(.KList),`field_AssertTest__failed`(.KList)))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(63,11,63,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `contract_access_loc`(`contract_access_field`(`contract_AssertTest`(.KList),`field_AssertTest_IS_TEST`(.KList)))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(60,11,60,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `contract_access_loc`(`contract_access_field`(`contract_AssertTest`(.KList),`field_AssertTest_IS_SCRIPT`(.KList)))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(66,11,66,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"vm()\"","String"))=>#token("980845667","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(143,11,143,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"test_assert_true()\"","String"))=>#token("906863826","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(140,11,140,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"test_assert_false()\"","String"))=>#token("1574882301","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(137,11,137,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"testFail_assert_true()\"","String"))=>#token("409427266","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(134,11,134,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"testFail_assert_false()\"","String"))=>#token("2057948334","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(131,11,131,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"setUp()\"","String"))=>#token("177362148","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(128,11,128,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"failed()\"","String"))=>#token("3124842406","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(125,11,125,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"IS_TEST()\"","String"))=>#token("4202047188","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(122,11,122,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"IS_SCRIPT()\"","String"))=>#token("4174167879","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(119,11,119,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module ASSERTTEST-VERIFICATION [digest(>�8ʧ��D�@�Ju5v��y�H��<�]q���), org.kframework.attributes.Location(Location(26,1,31,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/foundry.k))]
  imports ASSERTTEST-CONTRACT
endmodule


module AUTO-CASTS [digest(��u�L�~H�_`�t���+yYe�l0e�I�<�9), org.kframework.attributes.Location(Location(385,1,393,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
endmodule


module AUTO-FOLLOW [digest(�\%\A圚د��L/����2�	��t��-�), org.kframework.attributes.Location(Location(395,1,406,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
endmodule


module BASIC-K [digest(�cᷧ�ȸ8�l�����=ʡK82r���j), org.kframework.attributes.Location(Location(35,1,42,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports SORT-BOOL
  imports ML-SYNTAX
  syntax KItem [hook(K.KItem), org.kframework.attributes.Location(Location(38,3,38,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  syntax KItem ::= KConfigVar
  syntax KConfigVar [org.kframework.attributes.Location(Location(40,3,40,28)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md)), token]
  syntax K ::= KItem
endmodule


module BIN-RUNTIME [digest(c�ړ!�2��������l.����^;�^&�[�), org.kframework.attributes.Location(Location(26,1,33,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md))]
  imports EVM-ABI
  syntax Contract [org.kframework.attributes.Location(Location(29,5,29,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md))]
  syntax Bytes ::= "#binRuntime" "(" Contract ")" [alias, function, klabel(binRuntime), no-evaluators, symbol]
endmodule


module BITWISE-SIMPLIFICATION [digest(xk��$"�ݛe���b����;��YAZ�Q�fLa), org.kframework.attributes.Location(Location(3,1,55,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), symbolic]
  imports WORD
  imports INT-SYMBOLIC
  rule `chop(_)_WORD_Int_Int`(`_*Int_`(`_&Int_`(`maxUInt48_WORD_Int`(.KList),#SemanticCastToInt(X)),#SemanticCastToInt(Y)))=>`_*Int_`(`_&Int_`(`maxUInt48_WORD_Int`(.KList),#SemanticCastToInt(X)),#SemanticCastToInt(Y)) requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(X)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(Y))),`_<=Int_`(#SemanticCastToInt(Y),`pow208_WORD_Int`(.KList))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(23,10,24,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_|Int_`(#token("0","Int"),#SemanticCastToInt(A))=>#SemanticCastToInt(A) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(11,10,11,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_|Int_`(#SemanticCastToInt(A),#token("0","Int"))=>#SemanticCastToInt(A) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(12,10,12,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_|Int_`(#SemanticCastToInt(A),#SemanticCastToInt(A))=>#SemanticCastToInt(A) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(13,10,13,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_>Int_`(`_+Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(X)),#token("32","Int")),`_&Int_`(`notMaxUInt5_WORD_Int`(.KList),`_+Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(X)),#token("31","Int"))))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [label(BITWISE-SIMPLIFICATION.lengthBytes-upInt-32-upper-bound), org.kframework.attributes.Location(Location(52,7,52,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, smt-lemma]
  rule `_<Int_`(`_|Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),`pow256_WORD_Int`(.KList))=>#token("true","Bool") requires `_andBool_`(`_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(X)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(Y))),`_<Int_`(#SemanticCastToInt(X),`pow256_WORD_Int`(.KList))),`_<Int_`(#SemanticCastToInt(Y),`pow256_WORD_Int`(.KList))) ensures #token("true","Bool") [label(BITWISE-SIMPLIFICATION.bitwise-or-lt-pow256), org.kframework.attributes.Location(Location(41,34,41,145)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(`_&Int_`(`maxUInt8_WORD_Int`(.KList),#SemanticCastToInt(X)),#token("256","Int"))=>#token("true","Bool") requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(26,10,26,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification, smt-lemma]
  rule `_<Int_`(`_&Int_`(`maxUInt48_WORD_Int`(.KList),#SemanticCastToInt(X)),`pow48_WORD_Int`(.KList))=>#token("true","Bool") requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(27,10,27,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification, smt-lemma]
  rule `_<Int_`(`_&Int_`(`maxUInt160_WORD_Int`(.KList),#SemanticCastToInt(X)),`pow160_WORD_Int`(.KList))=>#token("true","Bool") requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(28,10,28,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification, smt-lemma]
  rule `_<Int_`(`_&Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Z))=>#token("true","Bool") requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(X)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(Y))),`_orBool_`(`_<Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Z)),`_<Int_`(#SemanticCastToInt(Y),#SemanticCastToInt(Z)))) ensures #token("true","Bool") [label(BITWISE-SIMPLIFICATION.bitwise-and-lt), org.kframework.attributes.Location(Location(40,34,40,136)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(X)),`_&Int_`(`notMaxUInt5_WORD_Int`(.KList),`_+Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(X)),#token("31","Int"))))=>#token("true","Bool") requires `_<Int_`(`_+Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(X)),#token("31","Int")),`pow256_WORD_Int`(.KList)) ensures #token("true","Bool") [label(BITWISE-SIMPLIFICATION.lengthBytes-upInt-32-lower-bound), org.kframework.attributes.Location(Location(47,7,48,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification, smt-lemma]
  rule `_<=Int_`(#token("0","Int"),`_|Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)))=>#token("true","Bool") requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(X)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(Y))) ensures #token("true","Bool") [label(BITWISE-SIMPLIFICATION.bitwise-or-geq-zero), org.kframework.attributes.Location(Location(37,34,37,97)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`_&Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)))=>#token("true","Bool") requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(X)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(Y))) ensures #token("true","Bool") [label(BITWISE-SIMPLIFICATION.bitwise-and-geq-zero), org.kframework.attributes.Location(Location(38,34,38,97)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_&Int_`(`notMaxUInt160_WORD_Int`(.KList),#SemanticCastToInt(X))=>#token("0","Int") requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("160","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(43,10,43,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_&Int_`(`maxUInt160_WORD_Int`(.KList),`_|Int_`(#SemanticCastToInt(X),`_&Int_`(`notMaxUInt160_WORD_Int`(.KList),#SemanticCastToInt(Y))))=>#SemanticCastToInt(X) requires `_andBool_`(`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("160","Int"),#SemanticCastToInt(X)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(Y))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(44,10,44,112)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_&Int_`(#token("0","Int"),#SemanticCastToInt(_))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(19,10,19,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_&Int_`(#SemanticCastToInt(_),#token("0","Int"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(20,10,20,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_&Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Y))=>#SemanticCastToInt(Y) requires `_andBool_`(`_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(X)),`_==Int_`(`_+Int_`(#SemanticCastToInt(X),#token("1","Int")),`_^Int_`(#token("2","Int"),`log2Int(_)_INT-COMMON_Int_Int`(`_+Int_`(#SemanticCastToInt(X),#token("1","Int")))))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(Y))),`_<Int_`(#SemanticCastToInt(Y),`_^Int_`(#token("2","Int"),`log2Int(_)_INT-COMMON_Int_Int`(`_+Int_`(#SemanticCastToInt(X),#token("1","Int")))))) ensures #token("true","Bool") [comm, concrete(X), label(BITWISE-SIMPLIFICATION.bitwise-and-identity), org.kframework.attributes.Location(Location(31,7,34,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_&Int_`(#SemanticCastToInt(A),#SemanticCastToInt(A))=>#SemanticCastToInt(A) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(21,10,21,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bitwise-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
endmodule


module BOOL [digest(E� LVe��D�qV�D�L,��:��:n
�	3)�^�), org.kframework.attributes.Location(Location(1167,1,1170,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports BOOL-KORE
  imports BOOL-COMMON
endmodule


module BOOL-COMMON [digest(ꢊ�@`9��8^�oŢ2Q�)���), org.kframework.attributes.Location(Location(1077,1,1151,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports BOOL-SYNTAX
  imports BASIC-K
  syntax priority notBool_ > _orElseBool_ _orBool_ _andThenBool_ _impliesBool_ _andBool_ _xorBool_ > _==Bool_ _=/=Bool_
  syntax associativity left _xorBool_
  syntax associativity left _orElseBool_
  syntax associativity left _orBool_
  syntax associativity left _impliesBool_
  syntax associativity left _andThenBool_
  syntax associativity left _andBool_
  syntax associativity left _==Bool_ _=/=Bool_
  syntax associativity left _==Bool_
  syntax associativity left _=/=Bool_
  syntax Bool ::= Bool "xorBool" Bool [boolOperation, function, hook(BOOL.xor), klabel(_xorBool_), left, smt-hook(xor), symbol, total]
  syntax Bool ::= Bool "orElseBool" Bool [boolOperation, function, hook(BOOL.orElse), klabel(_orElseBool_), left, smt-hook(or), symbol, total]
  syntax Bool ::= Bool "orBool" Bool [boolOperation, function, hook(BOOL.or), klabel(_orBool_), latex({#1}\vee_{\scriptstyle\it Bool}{#2}), left, smt-hook(or), symbol, total]
  syntax Bool ::= Bool "impliesBool" Bool [boolOperation, function, hook(BOOL.implies), klabel(_impliesBool_), left, smt-hook(=>), symbol, total]
  syntax Bool ::= Bool "andThenBool" Bool [boolOperation, function, hook(BOOL.andThen), klabel(_andThenBool_), left, smt-hook(and), symbol, total]
  syntax Bool ::= Bool "andBool" Bool [boolOperation, function, hook(BOOL.and), klabel(_andBool_), latex({#1}\wedge_{\scriptstyle\it Bool}{#2}), left, smt-hook(and), symbol, total]
  syntax Bool ::= Bool "==Bool" Bool [comm, function, hook(BOOL.eq), klabel(_==Bool_), left, smt-hook(=), symbol, total]
  syntax Bool ::= Bool "=/=Bool" Bool [comm, function, hook(BOOL.ne), klabel(_=/=Bool_), left, smt-hook(distinct), symbol, total]
  syntax Bool ::= "notBool" Bool [boolOperation, function, hook(BOOL.not), klabel(notBool_), latex(\neg_{\scriptstyle\it Bool}{#1}), smt-hook(not), symbol, total]
  rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1118,8,1118,29)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1119,8,1119,29)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_xorBool_`(#token("false","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1131,8,1131,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_xorBool_`(#SemanticCastToBool(B),#token("false","Bool"))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1132,8,1132,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_xorBool_`(#SemanticCastToBool(B),#SemanticCastToBool(B))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1133,8,1133,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orElseBool_`(#token("true","Bool"),#SemanticCastToBool(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1140,8,1140,33)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orElseBool_`(#token("false","Bool"),#SemanticCastToBool(K))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1142,8,1142,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orElseBool_`(#SemanticCastToBool(_),#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1141,8,1141,33)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orElseBool_`(#SemanticCastToBool(K),#token("false","Bool"))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1143,8,1143,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orBool_`(#token("true","Bool"),#SemanticCastToBool(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1135,8,1135,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orBool_`(#token("false","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1137,8,1137,32)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orBool_`(#SemanticCastToBool(_),#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1136,8,1136,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orBool_`(#SemanticCastToBool(B),#token("false","Bool"))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1138,8,1138,32)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_impliesBool_`(#token("true","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1145,8,1145,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_impliesBool_`(#token("false","Bool"),#SemanticCastToBool(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1146,8,1146,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_impliesBool_`(#SemanticCastToBool(_),#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1147,8,1147,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_impliesBool_`(#SemanticCastToBool(B),#token("false","Bool"))=>`notBool_`(#SemanticCastToBool(B)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1148,8,1148,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andThenBool_`(#token("true","Bool"),#SemanticCastToBool(K))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1126,8,1126,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andThenBool_`(#token("false","Bool"),#SemanticCastToBool(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1128,8,1128,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andThenBool_`(#SemanticCastToBool(_),#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1129,8,1129,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andThenBool_`(#SemanticCastToBool(K),#token("true","Bool"))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1127,8,1127,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andBool_`(#token("true","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1121,8,1121,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andBool_`(#token("false","Bool"),#SemanticCastToBool(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1123,8,1123,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andBool_`(#SemanticCastToBool(_),#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1124,8,1124,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andBool_`(#SemanticCastToBool(B),#token("true","Bool"))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1122,8,1122,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_=/=Bool_`(#SemanticCastToBool(B1),#SemanticCastToBool(B2))=>`notBool_`(`_==Bool_`(#SemanticCastToBool(B1),#SemanticCastToBool(B2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1150,8,1150,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module BOOL-KORE [digest(�8x�ð��8qs¼���{�S,*�X^(�p��E), kore, org.kframework.attributes.Location(Location(1153,1,1165,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), symbolic]
  imports BOOL-COMMON
  rule #Equals(`notBool_`(#SemanticCastToBool(@B)),#token("true","Bool"))=>#Equals(#SemanticCastToBool(@B),#token("false","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1157,8,1157,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(`notBool_`(#SemanticCastToBool(@B)),#token("false","Bool"))=>#Equals(#SemanticCastToBool(@B),#token("true","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1159,8,1159,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(`_orBool_`(#SemanticCastToBool(@B1),#SemanticCastToBool(@B2)),#token("false","Bool"))=>#And(#Equals(#SemanticCastToBool(@B1),#token("false","Bool")),#Equals(#SemanticCastToBool(@B2),#token("false","Bool"))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1164,8,1164,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(`_andBool_`(#SemanticCastToBool(@B1),#SemanticCastToBool(@B2)),#token("true","Bool"))=>#And(#Equals(#SemanticCastToBool(@B1),#token("true","Bool")),#Equals(#SemanticCastToBool(@B2),#token("true","Bool"))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1162,8,1162,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(#token("true","Bool"),`notBool_`(#SemanticCastToBool(@B)))=>#Equals(#token("false","Bool"),#SemanticCastToBool(@B)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1156,8,1156,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(#token("true","Bool"),`_andBool_`(#SemanticCastToBool(@B1),#SemanticCastToBool(@B2)))=>#And(#Equals(#token("true","Bool"),#SemanticCastToBool(@B1)),#Equals(#token("true","Bool"),#SemanticCastToBool(@B2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1161,8,1161,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(#token("false","Bool"),`notBool_`(#SemanticCastToBool(@B)))=>#Equals(#token("true","Bool"),#SemanticCastToBool(@B)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1158,8,1158,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(#token("false","Bool"),`_orBool_`(#SemanticCastToBool(@B1),#SemanticCastToBool(@B2)))=>#And(#Equals(#token("false","Bool"),#SemanticCastToBool(@B1)),#Equals(#token("false","Bool"),#SemanticCastToBool(@B2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1163,8,1163,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
endmodule


module BOOL-SYNTAX [digest(7%�ݑ6�)�=z�¥RA��	�Y��a�"��I� ), org.kframework.attributes.Location(Location(1071,1,1075,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports SORT-BOOL
  syntax Bool ::= "true" [token]
  syntax Bool ::= "false" [token]
endmodule


module BUF [digest(R���|)F5\~᠒�6� kF������Ӎn), org.kframework.attributes.Location(Location(34,1,53,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md))]
  imports BUF-SYNTAX
  syntax Int ::= "#powByteLen" "(" Int ")" [function, klabel(#powByteLen), no-evaluators]
  rule `_^Int_`(#token("2","Int"),`_*Int_`(#SemanticCastToInt(SIZE),#token("8","Int")))=>`#powByteLen(_)_BUF_Int_Int`(#SemanticCastToInt(SIZE)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(40,10,40,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(SIZE)]
  rule `_<Int_`(#token("0","Int"),`#powByteLen(_)_BUF_Int_Int`(#SemanticCastToInt(SIZE)))=>#token("true","Bool") requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(SIZE)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(42,10,42,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(#SemanticCastToInt(SIZE),`#powByteLen(_)_BUF_Int_Int`(#SemanticCastToInt(SIZE)))=>#token("true","Bool") requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(SIZE)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(43,10,43,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(SIZE),#SemanticCastToInt(DATA))=>`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(SIZE),#SemanticCastToInt(DATA)) requires `#range(_<=_<_)_WORD_Bool_Int_Int_Int`(#token("0","Int"),#SemanticCastToInt(DATA),`_^Int_`(#token("2","Int"),`_*Int_`(#SemanticCastToInt(SIZE),#token("8","Int")))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(45,10,46,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(_SIZE),#SemanticCastToInt(_))=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(51,10,51,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(SIZE),#SemanticCastToInt(DATA))=>`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#SemanticCastToInt(SIZE),`#asByteStack(_)_EVM-TYPES_Bytes_Int`(`_%Int_`(#SemanticCastToInt(DATA),`_^Int_`(#token("2","Int"),`_*Int_`(#SemanticCastToInt(SIZE),#token("8","Int")))))) requires `_<Int_`(#token("0","Int"),#SemanticCastToInt(SIZE)) ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(48,10,49,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
endmodule


module BUF-SYNTAX [digest(�֭ʦ�1���M���:u$>�W���[�	�F�), org.kframework.attributes.Location(Location(7,1,32,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md))]
  imports EVM
  syntax Int ::= "#ceil32" "(" Int ")" [klabel(#ceil32), macro]
  syntax Bytes ::= "#bufStrict" "(" Int "," Int ")" [function, klabel(#bufStrict)]
  syntax Bytes ::= "#buf" "(" Int "," Int ")" [function, klabel(#buf), smtlib(buf), total]
  rule `#ceil32(_)_BUF-SYNTAX_Int_Int`(#SemanticCastToInt(N))=>`_*Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(N),#token("32","Int")),#token("32","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(30,10,30,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module BUILTIN-ID-TOKENS [digest(��Gތ��)��9��ڵE���rr�}�ƒIE), org.kframework.attributes.Location(Location(63,1,66,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  syntax #UpperId ::= r"[A-Z][a-zA-Z0-9]*" [prec(2), token]
  syntax #LowerId ::= r"[a-z][a-zA-Z0-9]*" [prec(2), token]
endmodule


module BYTES [digest(�h�iiP�-2<��s�5�����/�S�y��), org.kframework.attributes.Location(Location(2181,1,2194,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports INT
  imports BYTES-KORE
  rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(#token("0","Int"),#SemanticCastToEndianness(_),#SemanticCastToSignedness(_))=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2188,8,2188,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(#token("-1","Int"),#SemanticCastToEndianness(E),signedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(#token("1","Int"),#token("-1","Int"),#SemanticCastToEndianness(E)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2193,8,2193,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(#SemanticCastToInt(I),#SemanticCastToEndianness(E),unsignedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(`_/Int_`(`_+Int_`(`log2Int(_)_INT-COMMON_Int_Int`(#SemanticCastToInt(I)),#token("8","Int")),#token("8","Int")),#SemanticCastToInt(I),#SemanticCastToEndianness(E)) requires `_>Int_`(#SemanticCastToInt(I),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2186,8,2187,22)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(#SemanticCastToInt(I),#SemanticCastToEndianness(E),signedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(`_/Int_`(`_+Int_`(`log2Int(_)_INT-COMMON_Int_Int`(`~Int_`(#SemanticCastToInt(I))),#token("9","Int")),#token("8","Int")),#SemanticCastToInt(I),#SemanticCastToEndianness(E)) requires `_<Int_`(#SemanticCastToInt(I),#token("-1","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2191,8,2192,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(#SemanticCastToInt(I),#SemanticCastToEndianness(E),signedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(`_/Int_`(`_+Int_`(`log2Int(_)_INT-COMMON_Int_Int`(#SemanticCastToInt(I)),#token("9","Int")),#token("8","Int")),#SemanticCastToInt(I),#SemanticCastToEndianness(E)) requires `_>Int_`(#SemanticCastToInt(I),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2189,8,2190,22)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
endmodule


module BYTES-HOOKED [digest(�+��~cь�;nLl�v�e��X��?��`��$), org.kframework.attributes.Location(Location(1994,1,2154,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports STRING-SYNTAX
  imports BYTES-SYNTAX
  imports BYTES-STRING-ENCODE
  syntax associativity right _+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes
  syntax String ::= "Bytes2String" "(" Bytes ")" [function, hook(BYTES.bytes2string), klabel(Bytes2String), total]
  syntax Signedness ::= "Unsigned" [klabel(unsignedBytes), symbol]
  syntax Signedness ::= "Signed" [klabel(signedBytes), symbol]
  syntax Int ::= Bytes "[" Int "]" [function, hook(BYTES.get)]
  syntax Int ::= "lengthBytes" "(" Bytes ")" [function, hook(BYTES.length), klabel(lengthBytes), smtlib(lengthBytes), total]
  syntax Int ::= "Bytes2Int" "(" Bytes "," Endianness "," Signedness ")" [function, hook(BYTES.bytes2int), klabel(Bytes2Int), total]
  syntax Endianness ::= "LE" [klabel(littleEndianBytes), symbol]
  syntax Endianness ::= "BE" [klabel(bigEndianBytes), symbol]
  syntax Bytes ::= Bytes "[" index:Int "<-" value:Int "]" [function, hook(BYTES.update)]
  syntax Bytes ::= Bytes "+Bytes" Bytes [function, hook(BYTES.concat), right, total]
  syntax Bytes ::= "substrBytes" "(" Bytes "," startIndex:Int "," endIndex:Int ")" [function, hook(BYTES.substr), klabel(substrBytes)]
  syntax Bytes ::= "reverseBytes" "(" Bytes ")" [function, hook(BYTES.reverse), klabel(reverseBytes), total]
  syntax Bytes ::= "replaceAtBytes" "(" dest:Bytes "," index:Int "," src:Bytes ")" [function, hook(BYTES.replaceAt), klabel(replaceAtBytes)]
  syntax Bytes ::= "padRightBytes" "(" Bytes "," length:Int "," value:Int ")" [function, hook(BYTES.padRight), klabel(padRightBytes)]
  syntax Bytes ::= "padLeftBytes" "(" Bytes "," length:Int "," value:Int ")" [function, hook(BYTES.padLeft), klabel(padLeftBytes)]
  syntax Bytes ::= "String2Bytes" "(" String ")" [function, hook(BYTES.string2bytes), klabel(String2Bytes), total]
  syntax Bytes ::= "Int2Bytes" "(" length:Int "," Int "," Endianness ")" [function, hook(BYTES.int2bytes), klabel(Int2Bytes), total]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Endianness "," Signedness ")" [function, klabel(Int2BytesNoLen), total]
  syntax Bytes ::= ".Bytes" [function, hook(BYTES.empty), total]
endmodule


module BYTES-KORE [digest(6��_�Y�M�h�ᐊBC'�Qk��8�֥K�2), kore, org.kframework.attributes.Location(Location(2167,1,2170,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports BYTES-SYMBOLIC-CEIL
  imports BYTES-HOOKED
endmodule


module BYTES-SIMPLIFICATION [digest(e�� ���׉lL6d� ��A^�&��Rه�), org.kframework.attributes.Location(Location(1,1,241,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), symbolic]
  imports INT-SYMBOLIC
  imports EVM
  imports BUF
  rule `lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(BUF1),#SemanticCastToBytes(BUF2)))=>`_+Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(BUF1)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(BUF2))) requires #token("true","Bool") ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.lengthBytes-concat), org.kframework.attributes.Location(Location(217,34,217,123)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(_),#SemanticCastToInt(S),#SemanticCastToInt(W)))=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#token("0","Int"),#SemanticCastToInt(W)) requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(S)) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.lengthBytes-range), org.kframework.attributes.Location(Location(219,34,219,114)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(`#padRightToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#SemanticCastToInt(W),#SemanticCastToBytes(B)))=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)),#SemanticCastToInt(W)) requires #token("true","Bool") ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.lengthBytes-prtw), org.kframework.attributes.Location(Location(220,34,220,108)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(S),#SemanticCastToInt(_)))=>#SemanticCastToInt(S) requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(S)) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.lengthBytes-buf), org.kframework.attributes.Location(Location(218,34,218,103)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_s<Word__EVM-TYPES_Int_Int_Int`(`signextend(_,_)_EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(_),#SemanticCastToInt(W)),`minSInt128Word_WORD_Int`(.KList))=>#token("0","Int") requires `_<Int_`(#SemanticCastToInt(W),`pow128_WORD_Int`(.KList)) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.signextend-min), org.kframework.attributes.Location(Location(27,28,27,103)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification, symbolic(W)]
  rule `_s<Word__EVM-TYPES_Int_Int_Int`(`maxSInt128_WORD_Int`(.KList),`signextend(_,_)_EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(_),#SemanticCastToInt(W)))=>#token("0","Int") requires `_<Int_`(#SemanticCastToInt(W),`pow128_WORD_Int`(.KList)) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.signextend-max), org.kframework.attributes.Location(Location(28,28,28,99)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification, symbolic(W)]
  rule `_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(B),#SemanticCastToInt(S1),#SemanticCastToBytes(B1)),#SemanticCastToInt(S2),#SemanticCastToBytes(B2))=>`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(B),#SemanticCastToInt(S2),#SemanticCastToBytes(B2)),#SemanticCastToInt(S1),#SemanticCastToBytes(B1)) requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S2)),`_<Int_`(#SemanticCastToInt(S2),#SemanticCastToInt(S1))),`_<=Int_`(`_+Int_`(#SemanticCastToInt(S2),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B2))),#SemanticCastToInt(S1))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.memUpdate-reorder), org.kframework.attributes.Location(Location(205,7,206,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(B),#SemanticCastToInt(S1),#SemanticCastToBytes(B1)),#SemanticCastToInt(S2),#SemanticCastToBytes(B2))=>`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(B),#SemanticCastToInt(S2),#SemanticCastToBytes(B2)) requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S2)),`_<=Int_`(#SemanticCastToInt(S2),#SemanticCastToInt(S1))),`_<=Int_`(`_+Int_`(#SemanticCastToInt(S1),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B1))),`_+Int_`(#SemanticCastToInt(S2),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B2))))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.memUpdate-subsume), org.kframework.attributes.Location(Location(210,7,211,108)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(_),#SemanticCastToInt(S),#SemanticCastToBytes(_))=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires `_<Int_`(#SemanticCastToInt(S),#token("0","Int")) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.memUpdate-is-empty), org.kframework.attributes.Location(Location(189,7,190,24)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(B1),#SemanticCastToInt(S),#SemanticCastToBytes(B2))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B1),#token("0","Int"),#SemanticCastToInt(S)),`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B2),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B1),`_+Int_`(#SemanticCastToInt(S),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B2))),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B1)),`_+Int_`(#SemanticCastToInt(S),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B2))))))) requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S)),`_<Int_`(`_+Int_`(#SemanticCastToInt(S),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B2))),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B1)))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.memUpdate-as-concat-inside), org.kframework.attributes.Location(Location(194,7,196,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification(60)]
  rule `_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(B1),#SemanticCastToInt(S),#SemanticCastToBytes(B2))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B1),#token("0","Int"),#SemanticCastToInt(S)),#SemanticCastToBytes(B2)) requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S)),`_<=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B1)),`_+Int_`(#SemanticCastToInt(S),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B2))))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.memUpdate-as-concat-outside-1), org.kframework.attributes.Location(Location(200,7,201,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification(60)]
  rule `_>>Int_`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(WS)),#SemanticCastToInt(M))=>`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(WS),#token("0","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(WS)),`_/Int_`(#SemanticCastToInt(M),#token("8","Int"))))) requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(M)),`_==Int_`(`_modInt_`(#SemanticCastToInt(M),#token("8","Int")),#token("0","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(226,10,226,136)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_==K_`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(A),#SemanticCastToBytes(B)),`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(C),#SemanticCastToBytes(D)))=>`_andBool_`(`_==K_`(#SemanticCastToBytes(A),#SemanticCastToBytes(C)),`_==K_`(#SemanticCastToBytes(B),#SemanticCastToBytes(D))) requires `_orBool_`(`_==Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(A)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(C))),`_==Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(D)))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.bytes-equal-concat-split-k), org.kframework.attributes.Location(Location(16,7,18,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_==K_`(`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(W),#SemanticCastToInt(X)),`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(W),#SemanticCastToInt(Y)))=>`_==Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(X))),`_<Int_`(#SemanticCastToInt(X),`_^Int_`(#token("2","Int"),`_*Int_`(#token("8","Int"),#SemanticCastToInt(W))))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(Y))),`_<Int_`(#SemanticCastToInt(Y),`_^Int_`(#token("2","Int"),`_*Int_`(#token("8","Int"),#SemanticCastToInt(W))))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.buf-inject-k), org.kframework.attributes.Location(Location(40,7,43,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_==K_`(#SemanticCastToBytes(BA1),#SemanticCastToBytes(BA2))=>#token("false","Bool") requires `_=/=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(BA1)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(BA2))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.bytes-not-equal-length), org.kframework.attributes.Location(Location(11,7,12,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_==K_`(#SemanticCastToBytes(B),`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),#SemanticCastToInt(X)))=>`_==Int_`(#SemanticCastToInt(X),`#asInteger(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(B))) requires `_andBool_`(`_<=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)),#token("32","Int")),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(X))) ensures #token("true","Bool") [comm, concrete(B), label(BYTES-SIMPLIFICATION.buf-as-int), org.kframework.attributes.Location(Location(53,24,55,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#ecrec(_,_,_,_)_EVM_Bytes_Bytes_Bytes_Bytes_Bytes`(#SemanticCastToBytes(_),#SemanticCastToBytes(_),#SemanticCastToBytes(_),#SemanticCastToBytes(_))),`pow160_WORD_Int`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(238,10,238,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, smt-lemma]
  rule `_<=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(`#ecrec(_,_,_,_)_EVM_Bytes_Bytes_Bytes_Bytes_Bytes`(#SemanticCastToBytes(_),#SemanticCastToBytes(_),#SemanticCastToBytes(_),#SemanticCastToBytes(_))),#token("32","Int"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(235,10,235,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, smt-lemma]
  rule `_<=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)),#token("0","Int"))=>`_==K_`(#SemanticCastToBytes(B),`.Bytes_BYTES-HOOKED_Bytes`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.lengthBytes-leq-zero), org.kframework.attributes.Location(Location(222,34,222,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.lengthBytes-geq-zero), org.kframework.attributes.Location(Location(216,34,216,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, smt-lemma]
  rule `_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B1),#SemanticCastToBytes(B2)),#SemanticCastToBytes(B3))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B1),`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B2),#SemanticCastToBytes(B3))) requires #token("true","Bool") ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.bytes-concat-right-assoc-symb-r), org.kframework.attributes.Location(Location(34,45,34,115)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(B2)]
  rule `_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B1),#SemanticCastToBytes(B2)),#SemanticCastToBytes(B3))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B1),`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B2),#SemanticCastToBytes(B3))) requires #token("true","Bool") ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.bytes-concat-right-assoc-symb-l), org.kframework.attributes.Location(Location(33,45,33,115)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(B1)]
  rule `_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`.Bytes_BYTES-HOOKED_Bytes`(.KList),#SemanticCastToBytes(B))=>#SemanticCastToBytes(B) requires #token("true","Bool") ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.bytes-concat-empty-left), org.kframework.attributes.Location(Location(31,39,31,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B1),#SemanticCastToInt(S1),#SemanticCastToInt(W1)),`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B1),#SemanticCastToInt(S2),#SemanticCastToInt(W2)),#SemanticCastToBytes(B2)))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B1),#SemanticCastToInt(S1),`_+Int_`(#SemanticCastToInt(W1),#SemanticCastToInt(W2))),#SemanticCastToBytes(B2)) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_==Int_`(#SemanticCastToInt(S2),`_+Int_`(#SemanticCastToInt(S1),#SemanticCastToInt(W1))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S1))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W1))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S2))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W2))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-join-concat), org.kframework.attributes.Location(Location(127,7,129,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B1),#SemanticCastToInt(S),`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(W1),#SemanticCastToInt(W2))),`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#token("0","Int"),#SemanticCastToInt(W3)),#token("0","Int")),#SemanticCastToBytes(B2)))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B1),#SemanticCastToInt(S),#SemanticCastToInt(W1)),#SemanticCastToBytes(B2)) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_==Int_`(#SemanticCastToInt(W1),`_+Int_`(#SemanticCastToInt(W2),#SemanticCastToInt(W3))),`_==Int_`(#SemanticCastToInt(W2),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B1)),#SemanticCastToInt(S)))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W1))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W2))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-reform-concat), org.kframework.attributes.Location(Location(140,7,143,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B),#SemanticCastToInt(S1),#SemanticCastToInt(W1)),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B),#SemanticCastToInt(S2),#SemanticCastToInt(W2)))=>`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B),#SemanticCastToInt(S1),`_+Int_`(#SemanticCastToInt(W1),#SemanticCastToInt(W2))) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_==Int_`(#SemanticCastToInt(S2),`_+Int_`(#SemanticCastToInt(S1),#SemanticCastToInt(W1))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S1))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W1))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S2))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W2))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-join-base), org.kframework.attributes.Location(Location(121,7,123,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B),#SemanticCastToInt(S),`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(W1),#SemanticCastToInt(W2))),`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#token("0","Int"),#SemanticCastToInt(W3)),#token("0","Int")))=>`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B),#SemanticCastToInt(S),#SemanticCastToInt(W1)) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_==Int_`(#SemanticCastToInt(W1),`_+Int_`(#SemanticCastToInt(W2),#SemanticCastToInt(W3))),`_==Int_`(#SemanticCastToInt(W2),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)),#SemanticCastToInt(S)))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W1))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W2))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-reform-base), org.kframework.attributes.Location(Location(133,7,136,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(W1),#token("0","Int")),`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(W2),#token("0","Int")),#SemanticCastToBytes(B)))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(`_+Int_`(#SemanticCastToInt(W1),#SemanticCastToInt(W2)),#token("0","Int")),#SemanticCastToBytes(B)) requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W1)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W2))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.buf-zero-concat-conc), org.kframework.attributes.Location(Location(68,7,69,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(W1),#token("0","Int")),`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(W2),#token("0","Int")))=>`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(`_+Int_`(#SemanticCastToInt(W1),#SemanticCastToInt(W2)),#token("0","Int")) requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W1)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W2))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.buf-zero-concat-base), org.kframework.attributes.Location(Location(63,7,64,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B1),`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B2),#SemanticCastToBytes(B3)))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B1),#SemanticCastToBytes(B2)),#SemanticCastToBytes(B3)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(B1, B2), label(BYTES-SIMPLIFICATION.bytes-concat-left-assoc-conc), org.kframework.attributes.Location(Location(35,45,35,115)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(B3)]
  rule `_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B),`.Bytes_BYTES-HOOKED_Bytes`(.KList))=>#SemanticCastToBytes(B) requires #token("true","Bool") ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.bytes-concat-empty-right), org.kframework.attributes.Location(Location(30,38,30,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_&Int_`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#padRightToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("32","Int"),#SemanticCastToBytes(BUF))),`notMaxUInt224_WORD_Int`(.KList))=>`#asWord(_)_EVM-TYPES_Int_Bytes`(`#padRightToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("32","Int"),#SemanticCastToBytes(BUF))) requires `_<=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(BUF)),#token("4","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(228,10,229,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(B1),#SemanticCastToInt(S1),#SemanticCastToBytes(B2)),#SemanticCastToInt(S2),#SemanticCastToInt(W2))=>`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B1),#SemanticCastToInt(S2),#SemanticCastToInt(W2)) requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S1)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W2))),`_<=Int_`(`_+Int_`(#SemanticCastToInt(S1),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B2))),#SemanticCastToInt(S2))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-memUpdate-outside), org.kframework.attributes.Location(Location(173,7,174,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(B1),#SemanticCastToInt(S1),#SemanticCastToBytes(B2)),#SemanticCastToInt(S2),#SemanticCastToInt(W2))=>#let(#SemanticCastToInt(W),`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(W2),`_-Int_`(#SemanticCastToInt(S1),#SemanticCastToInt(S2))),`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B1),#SemanticCastToInt(S2),#SemanticCastToInt(W)),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(B1),#SemanticCastToInt(S1),#SemanticCastToBytes(B2)),#SemanticCastToInt(S1),`_-Int_`(#SemanticCastToInt(W2),#SemanticCastToInt(W))))) requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S2)),`_<Int_`(#SemanticCastToInt(S2),#SemanticCastToInt(S1))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-memUpdate-before), org.kframework.attributes.Location(Location(158,7,161,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(B1),#SemanticCastToInt(S1),#SemanticCastToBytes(B2)),#SemanticCastToInt(S2),#SemanticCastToInt(W2))=>#let(#SemanticCastToInt(S),`_-Int_`(#SemanticCastToInt(S2),#SemanticCastToInt(S1)),#let(#SemanticCastToInt(W),`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(W2),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B2)),#SemanticCastToInt(S))),`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B2),#SemanticCastToInt(S),#SemanticCastToInt(W)),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B1),`_+Int_`(#SemanticCastToInt(S1),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B2))),`_-Int_`(#SemanticCastToInt(W2),#SemanticCastToInt(W)))))) requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S1)),`_<=Int_`(#SemanticCastToInt(S1),#SemanticCastToInt(S2))),`_<=Int_`(#SemanticCastToInt(S2),`_+Int_`(#SemanticCastToInt(S1),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B2))))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-memUpdate-in-between), org.kframework.attributes.Location(Location(165,7,169,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B1),#SemanticCastToBytes(_)),#SemanticCastToInt(S),#SemanticCastToInt(W))=>`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B1),#SemanticCastToInt(S),#SemanticCastToInt(W)) requires `_<=Int_`(`_+Int_`(#SemanticCastToInt(S),#SemanticCastToInt(W)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B1))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-included-in-cHead), org.kframework.attributes.Location(Location(90,7,91,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B1),#SemanticCastToBytes(B2)),#token("0","Int"),#SemanticCastToInt(W))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B1),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B2),#token("0","Int"),`_-Int_`(#SemanticCastToInt(W),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B1))))) requires `_<=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B1)),#SemanticCastToInt(W)) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-includes-cHead), org.kframework.attributes.Location(Location(100,7,101,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B1),#SemanticCastToBytes(B2)),#SemanticCastToInt(S),#SemanticCastToInt(W))=>`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B1),#SemanticCastToInt(S),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B1)),#SemanticCastToInt(S))),#SemanticCastToBytes(B2)),#token("0","Int"),#SemanticCastToInt(W)) requires `_andBool_`(`_<Int_`(#token("0","Int"),#SemanticCastToInt(S)),`_<=Int_`(#SemanticCastToInt(S),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B1)))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-inside-cHead-concat), org.kframework.attributes.Location(Location(110,7,111,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B1),#SemanticCastToBytes(B2)),#SemanticCastToInt(S),#SemanticCastToInt(W))=>`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B2),`_-Int_`(#SemanticCastToInt(S),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B1))),#SemanticCastToInt(W)) requires `_<=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B1)),#SemanticCastToInt(S)) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-outside-cHead), org.kframework.attributes.Location(Location(95,7,96,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B),#SemanticCastToInt(S1),#SemanticCastToInt(W1)),#SemanticCastToInt(S2),#SemanticCastToInt(W2))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B),`_+Int_`(#SemanticCastToInt(S1),#SemanticCastToInt(S2)),`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(W2),`_-Int_`(#SemanticCastToInt(W1),#SemanticCastToInt(S2)))),`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#token("0","Int"),`_-Int_`(#SemanticCastToInt(W2),`_-Int_`(#SemanticCastToInt(W1),#SemanticCastToInt(S2)))),#token("0","Int"))) requires `_andBool_`(`_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S1)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W1))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S2))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W2))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-of-range), org.kframework.attributes.Location(Location(115,7,117,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`#padRightToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#SemanticCastToInt(_),#SemanticCastToBytes(BUF)),#token("0","Int"),#SemanticCastToInt(WIDTH))=>#SemanticCastToBytes(BUF) requires `_==Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(BUF)),#SemanticCastToInt(WIDTH)) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-padRightToWidth), org.kframework.attributes.Location(Location(183,7,184,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(W1),#SemanticCastToInt(X)),#SemanticCastToInt(S2),#SemanticCastToInt(W2))=>`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(W2),#token("0","Int")) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(X)),`_<Int_`(#SemanticCastToInt(X),`_^Int_`(#token("2","Int"),`_*Int_`(#token("8","Int"),`_-Int_`(#SemanticCastToInt(W1),`_+Int_`(#SemanticCastToInt(S2),#SemanticCastToInt(W2))))))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S2))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W2))),`_<=Int_`(`_+Int_`(#SemanticCastToInt(S2),#SemanticCastToInt(W2)),#SemanticCastToInt(W1))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-buf-zero), org.kframework.attributes.Location(Location(177,7,179,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(W),#token("0","Int")),#SemanticCastToInt(S1),#SemanticCastToInt(W1))=>`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(W1),#token("0","Int")) requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S1))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W1))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-buf-zero-symb), org.kframework.attributes.Location(Location(147,7,148,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(_),#SemanticCastToInt(S),#SemanticCastToInt(W))=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires `_orBool_`(`_<Int_`(#SemanticCastToInt(S),#token("0","Int")),`_<=Int_`(#SemanticCastToInt(W),#token("0","Int"))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-empty), org.kframework.attributes.Location(Location(75,7,76,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification(30)]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B),`_+Int_`(#SemanticCastToInt(S1),#SemanticCastToInt(S2)),#SemanticCastToInt(W))=>`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B),#SemanticCastToInt(S2),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)),#SemanticCastToInt(S2))),#SemanticCastToInt(S1),#SemanticCastToInt(W)) requires `_andBool_`(`_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S1)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S2))),`_<Int_`(#token("0","Int"),`_+Int_`(#SemanticCastToInt(S1),#SemanticCastToInt(S2)))),`_<=Int_`(`_+Int_`(#SemanticCastToInt(S1),#SemanticCastToInt(S2)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)))) ensures #token("true","Bool") [concrete(B, S2), label(BYTES-SIMPLIFICATION.range-inside-cHead-base-conc), org.kframework.attributes.Location(Location(105,7,106,111)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B),#token("0","Int"),#SemanticCastToInt(W))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(B),`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(`_-Int_`(#SemanticCastToInt(W),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B))),#token("0","Int"))) requires `_<=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)),#SemanticCastToInt(W)) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-full), org.kframework.attributes.Location(Location(80,7,81,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B),#SemanticCastToInt(S1),#SemanticCastToInt(W1))=>`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(W1),#token("0","Int")) requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(S1)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W1))),`_==Int_`(`#asInteger(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(B)),#token("0","Int"))) ensures #token("true","Bool") [concrete(B), label(BYTES-SIMPLIFICATION.range-buf-zero-conc), org.kframework.attributes.Location(Location(152,7,154,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("32","Int"),`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(V)))=>`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),#SemanticCastToInt(V)) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(231,10,231,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(W),`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(B)))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(`_-Int_`(#SemanticCastToInt(W),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B))),#token("0","Int")),#SemanticCastToBytes(B)) requires `_andBool_`(`_<=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)),#SemanticCastToInt(W)),`_<=Int_`(#SemanticCastToInt(W),#token("32","Int"))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.buf-asWord-invert), org.kframework.attributes.Location(Location(58,7,59,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule #Equals(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(A),#SemanticCastToBytes(B)),`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(C),#SemanticCastToBytes(D)))=>#And(#Equals(#SemanticCastToBytes(A),#SemanticCastToBytes(C)),#Equals(#SemanticCastToBytes(B),#SemanticCastToBytes(D))) requires `_orBool_`(`_==Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(A)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(C))),`_==Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(D)))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.bytes-equal-concat-split-ml), org.kframework.attributes.Location(Location(22,7,24,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule #Equals(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B1),#SemanticCastToInt(S1),#SemanticCastToInt(W1)),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B2),#SemanticCastToInt(S2),#SemanticCastToInt(W2)))=>#Top(.KList) requires `_andBool_`(`_andBool_`(`_==K_`(#SemanticCastToBytes(B1),#SemanticCastToBytes(B2)),`_==Int_`(#SemanticCastToInt(S1),#SemanticCastToInt(S2))),`_==Int_`(#SemanticCastToInt(W1),#SemanticCastToInt(W2))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.range-params-equal-ml), org.kframework.attributes.Location(Location(85,7,86,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule #Equals(`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(W),#SemanticCastToInt(X)),`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(W),#SemanticCastToInt(Y)))=>#Equals(#SemanticCastToInt(X),#SemanticCastToInt(Y)) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(X))),`_<Int_`(#SemanticCastToInt(X),`_^Int_`(#token("2","Int"),`_*Int_`(#token("8","Int"),#SemanticCastToInt(W))))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(Y))),`_<Int_`(#SemanticCastToInt(Y),`_^Int_`(#token("2","Int"),`_*Int_`(#token("8","Int"),#SemanticCastToInt(W))))) ensures #token("true","Bool") [label(BYTES-SIMPLIFICATION.buf-inject-ml), org.kframework.attributes.Location(Location(47,7,50,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/bytes-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
endmodule


module BYTES-STRING-ENCODE [digest(J����Ӳ
����"S�\�]��I�^��eV~;ƙ), kore, org.kframework.attributes.Location(Location(1980,1,1990,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), symbolic]
  imports BYTES-SYNTAX
  syntax String ::= "decodeBytes" "(" encoding:String "," contents:Bytes ")" [function, hook(BYTES.decodeBytes), klabel(decodeBytes)]
  syntax Bytes ::= "encodeBytes" "(" encoding:String "," contents:String ")" [function, hook(BYTES.encodeBytes), klabel(encodeBytes)]
endmodule


module BYTES-SYMBOLIC-CEIL [digest(�JN�%Tb��p���{�#�'B��g$�), kore, org.kframework.attributes.Location(Location(2172,1,2179,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), symbolic]
  imports INT
  imports BYTES-HOOKED
  imports BOOL
  rule #Ceil(`padRightBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(_),#SemanticCastToInt(LEN),#SemanticCastToInt(VAL)))=>#Equals(`_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(LEN)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(VAL))),`_<Int_`(#SemanticCastToInt(VAL),#token("256","Int"))),#token("true","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2177,8,2177,114)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Ceil(`padLeftBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(_),#SemanticCastToInt(LEN),#SemanticCastToInt(VAL)))=>#Equals(`_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(LEN)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(VAL))),`_<Int_`(#SemanticCastToInt(VAL),#token("256","Int"))),#token("true","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2178,8,2178,114)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
endmodule


module BYTES-SYNTAX [digest(hd�5�u��/�����R��]&�^;�yJ��}�7), org.kframework.attributes.Location(Location(1971,1,1976,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports STRING-SYNTAX
  syntax Bytes [hook(BYTES.Bytes), org.kframework.attributes.Location(Location(1974,3,1974,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  syntax Bytes ::= r"b[\\\"](([\\x20\\x21\\x23-\\x5B\\x5D-\\x7E])|([\\\\][tnfr\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2}))*[\\\"]" [token]
endmodule


module COLLECTIONS [digest(h�pO����߅��s�G	˸������`?), org.kframework.attributes.Location(Location(1044,1,1052,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports SET
  imports MAP
  imports LIST
  syntax Set ::= "List2Set" "(" List ")" [function, hook(SET.list2set), klabel(List2Set), total]
  syntax List ::= "Set2List" "(" Set ")" [function, hook(SET.set2list), klabel(Set2List), total]
endmodule


module CONFIG-CELLS [digest(2�&%��GB/V�<&�ڢ��F���/d�ze�), org.kframework.attributes.Location(Location(311,1,324,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports RULE-LISTS
  imports KCELLS
  syntax Cell ::= "<" #CellName #CellProperties ">" K "</" #CellName ">" [klabel(#configCell), symbol]
  syntax Cell ::= "<" #CellName "/>" [klabel(#externalCell), symbol]
  syntax #CellProperty ::= #CellName "=" KString [klabel(#cellProperty), symbol]
  syntax #CellProperties ::= #CellProperty #CellProperties [klabel(#cellPropertyList), symbol]
  syntax #CellProperties ::= "" [klabel(#cellPropertyListTerminator), symbol]
  syntax #CellName ::= r"[a-zA-Z][a-zA-Z0-9\\-]*" [prec(1), token]
  syntax #CellName ::= #UpperId [token]
  syntax #CellName ::= #LowerId [token]
endmodule


module CONSOLE-CONTRACT [digest(g�̢Րz���܉��B��1efQ��8g`��bI), org.kframework.attributes.Location(Location(1098,1,1108,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k))]
  imports FOUNDRY
  syntax Contract ::= ConsoleContract
  syntax ConsoleContract ::= "console" [klabel(contract_console), symbol]
  rule binRuntime(`contract_console`(.KList))=>`#parseByteStack(_)_SERIALIZATION_Bytes_String`(#token("\"0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122055cb7f21d69d5a68626bed666b69adc58fdc46d700fc111b3a1cc03e01c56ffd64736f6c634300080d0033\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1105,11,1105,238)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module CONSOLE-VERIFICATION [digest(��kL�����B�������#����V�Z�K�), org.kframework.attributes.Location(Location(68,1,73,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/foundry.k))]
  imports CONSOLE-CONTRACT
endmodule


module CONSOLE2-CONTRACT [digest(�*
��J*�ƥ��DBj�1
x�A�9�G1��S), org.kframework.attributes.Location(Location(1110,1,1120,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k))]
  imports FOUNDRY
  syntax Contract ::= Console2Contract
  syntax Console2Contract ::= "console2" [klabel(contract_console2), symbol]
  rule binRuntime(`contract_console2`(.KList))=>`#parseByteStack(_)_SERIALIZATION_Bytes_String`(#token("\"0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017af94728e4fd8592ef4392559b9c941d0bf92d7928b48a70203c5ea8bb219ad64736f6c634300080d0033\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1117,11,1117,239)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module CONSOLE2-VERIFICATION [digest(6m꧂N�i3��Fe�K�ԁ��:�&���=���), org.kframework.attributes.Location(Location(75,1,80,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/foundry.k))]
  imports CONSOLE2-CONTRACT
endmodule


module DEFAULT-LAYOUT [digest(A�V�������wD�'�҆�2�T!t�RP��n), org.kframework.attributes.Location(Location(518,1,522,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  syntax #Layout ::= r"(\\/\\/[^\\n\\r]*)"
  syntax #Layout ::= r"(\\/\\*([^\\*]|(\\*+([^\\*\\/])))*\\*+\\/)"
  syntax #Layout ::= r"([\\ \\n\\r\\t])"
endmodule


module DOMAINS-SYNTAX [digest(g�?c)�0����h?¡3[s-��WxYZb��), org.kframework.attributes.Location(Location(39,1,45,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports UNSIGNED-INT-SYNTAX
  imports STRING-SYNTAX
  imports SORT-K
  imports ID-SYNTAX
  imports BOOL-SYNTAX
endmodule


module DSTEST-CONTRACT [digest(u:�[�:�TD5#��BL������%� �u�U), org.kframework.attributes.Location(Location(1122,1,1162,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k))]
  imports FOUNDRY
  syntax Field ::= DSTestField
  syntax DSTestMethod ::= "failed" "(" ")" [klabel(method_DSTest_failed_), symbol]
  syntax DSTestMethod ::= "IS_TEST" "(" ")" [klabel(method_DSTest_IS_TEST_), symbol]
  syntax DSTestField ::= "_failed" [klabel(field_DSTest__failed), symbol]
  syntax DSTestField ::= "IS_TEST" [klabel(field_DSTest_IS_TEST), symbol]
  syntax DSTestContract ::= "DSTest" [klabel(contract_DSTest), symbol]
  syntax Contract ::= DSTestContract
  syntax Bytes ::= DSTestContract "." DSTestMethod [function, klabel(method_DSTest), symbol]
  rule binRuntime(`contract_DSTest`(.KList))=>`#parseByteStack(_)_SERIALIZATION_Bytes_String`(#token("\"0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063ba414fa61461003b578063fa7626d414610057575b600080fd5b610043610064565b604051901515815260200160405180910390f35b6000546100439060ff1681565b60008054610100900460ff16156100845750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561018a5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610112917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016101ca565b60408051601f198184030181529082905261012c916101ee565b6000604051808303816000865af19150503d8060008114610169576040519150601f19603f3d011682016040523d82523d6000602084013e61016e565b606091505b50915050808060200190518101906101869190610201565b9150505b919050565b6000815160005b818110156101b05760208185018101518683015201610196565b818111156101bf576000828601525b509290920192915050565b6001600160e01b03198316815260006101e6600483018461018f565b949350505050565b60006101fa828461018f565b9392505050565b60006020828403121561021357600080fd5b815180151581146101fa57600080fdfea2646970667358221220a4c5a2ff7302bc039072f8279bb8bf78dbe36fdac7375a2648b1bb0aac1261e264736f6c634300080d0033\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1129,11,1129,1267)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_DSTest`(`contract_DSTest`(.KList),`method_DSTest_failed_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"failed\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1153,11,1153,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_DSTest`(`contract_DSTest`(.KList),`method_DSTest_IS_TEST_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"IS_TEST\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1150,11,1150,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `contract_access_loc`(`contract_access_field`(`contract_DSTest`(.KList),`field_DSTest__failed`(.KList)))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1141,11,1141,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `contract_access_loc`(`contract_access_field`(`contract_DSTest`(.KList),`field_DSTest_IS_TEST`(.KList)))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1138,11,1138,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"failed()\"","String"))=>#token("3124842406","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1159,11,1159,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"IS_TEST()\"","String"))=>#token("4202047188","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1156,11,1156,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module DSTEST-VERIFICATION [digest(?�	�$O"{���2U����zc��>�m���)�), org.kframework.attributes.Location(Location(82,1,87,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/foundry.k))]
  imports DSTEST-CONTRACT
endmodule


module EDSL [digest(MiUYr(R�u�W�OH�0.�A��aٞ�O��), org.kframework.attributes.Location(Location(16,1,24,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md))]
  imports SOLIDITY-FIELDS
  imports INFINITE-GAS
  imports HASHED-LOCATIONS
  imports EVM-OPTIMIZATIONS
  imports EVM-ABI
  imports BUF
  imports BIN-RUNTIME
endmodule


module EVM [digest(�{��=V1J�><ͽ�
H���A�1�]/�A&{�), org.kframework.attributes.Location(Location(15,1,2344,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md))]
  imports STRING
  imports NETWORK
  imports MAP
  imports GAS
  imports EVM-DATA
  syntax WordStackCellOpt ::= WordStackCell
  syntax WordStackCellOpt ::= "noWordStackCell" [cellOptAbsent(WordStackCell)]
  syntax WordStackCell ::= "initWordStackCell" [function, initializer, noThread]
  syntax WordStackCell ::= "<wordStack>" WordStack "</wordStack>" [cell, cellName(wordStack), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ValueCellOpt ::= ValueCell
  syntax ValueCellOpt ::= "noValueCell" [cellOptAbsent(ValueCell)]
  syntax ValueCell ::= "initValueCell" [function, initializer, noThread]
  syntax ValueCell ::= "<value>" Int "</value>" [cell, cellName(value), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax UnStackOp ::= "SLOAD"
  syntax UnStackOp ::= "SELFDESTRUCT"
  syntax UnStackOp ::= "POP"
  syntax UnStackOp ::= "NOT"
  syntax UnStackOp ::= "MLOAD"
  syntax UnStackOp ::= "JUMP"
  syntax UnStackOp ::= "ISZERO"
  syntax UnStackOp ::= "EXTCODESIZE"
  syntax UnStackOp ::= "EXTCODEHASH"
  syntax UnStackOp ::= "CALLDATALOAD"
  syntax UnStackOp ::= "BLOCKHASH"
  syntax UnStackOp ::= "BALANCE"
  syntax TxTypeCellOpt ::= TxTypeCell
  syntax TxTypeCellOpt ::= "noTxTypeCell" [cellOptAbsent(TxTypeCell)]
  syntax TxTypeCell ::= "initTxTypeCell" [function, initializer, noThread]
  syntax TxTypeCell ::= "<txType>" TxType "</txType>" [cell, cellName(txType), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax TxPriorityFeeCellOpt ::= TxPriorityFeeCell
  syntax TxPriorityFeeCellOpt ::= "noTxPriorityFeeCell" [cellOptAbsent(TxPriorityFeeCell)]
  syntax TxPriorityFeeCell ::= "initTxPriorityFeeCell" [function, initializer, noThread]
  syntax TxPriorityFeeCell ::= "<txPriorityFee>" Int "</txPriorityFee>" [cell, cellName(txPriorityFee), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax TxPendingCellOpt ::= TxPendingCell
  syntax TxPendingCellOpt ::= "noTxPendingCell" [cellOptAbsent(TxPendingCell)]
  syntax TxPendingCell ::= "initTxPendingCell" [function, initializer, noThread]
  syntax TxPendingCell ::= "<txPending>" List "</txPending>" [cell, cellName(txPending), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax TxOrderCellOpt ::= TxOrderCell
  syntax TxOrderCellOpt ::= "noTxOrderCell" [cellOptAbsent(TxOrderCell)]
  syntax TxOrderCell ::= "initTxOrderCell" [function, initializer, noThread]
  syntax TxOrderCell ::= "<txOrder>" List "</txOrder>" [cell, cellName(txOrder), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax TxNonceCellOpt ::= TxNonceCell
  syntax TxNonceCellOpt ::= "noTxNonceCell" [cellOptAbsent(TxNonceCell)]
  syntax TxNonceCell ::= "initTxNonceCell" [function, initializer, noThread]
  syntax TxNonceCell ::= "<txNonce>" Int "</txNonce>" [cell, cellName(txNonce), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax TxMaxFeeCellOpt ::= TxMaxFeeCell
  syntax TxMaxFeeCellOpt ::= "noTxMaxFeeCell" [cellOptAbsent(TxMaxFeeCell)]
  syntax TxMaxFeeCell ::= "initTxMaxFeeCell" [function, initializer, noThread]
  syntax TxMaxFeeCell ::= "<txMaxFee>" Int "</txMaxFee>" [cell, cellName(txMaxFee), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax TxGasPriceCellOpt ::= TxGasPriceCell
  syntax TxGasPriceCellOpt ::= "noTxGasPriceCell" [cellOptAbsent(TxGasPriceCell)]
  syntax TxGasPriceCell ::= "initTxGasPriceCell" [function, initializer, noThread]
  syntax TxGasPriceCell ::= "<txGasPrice>" Int "</txGasPrice>" [cell, cellName(txGasPrice), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax TxGasLimitCellOpt ::= TxGasLimitCell
  syntax TxGasLimitCellOpt ::= "noTxGasLimitCell" [cellOptAbsent(TxGasLimitCell)]
  syntax TxGasLimitCell ::= "initTxGasLimitCell" [function, initializer, noThread]
  syntax TxGasLimitCell ::= "<txGasLimit>" Int "</txGasLimit>" [cell, cellName(txGasLimit), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax TxChainIDCellOpt ::= TxChainIDCell
  syntax TxChainIDCellOpt ::= "noTxChainIDCell" [cellOptAbsent(TxChainIDCell)]
  syntax TxChainIDCell ::= "initTxChainIDCell" [function, initializer, noThread]
  syntax TxChainIDCell ::= "<txChainID>" Int "</txChainID>" [cell, cellName(txChainID), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax TxAccessCellOpt ::= TxAccessCell
  syntax TxAccessCellOpt ::= "noTxAccessCell" [cellOptAbsent(TxAccessCell)]
  syntax TxAccessCell ::= "initTxAccessCell" [function, initializer, noThread]
  syntax TxAccessCell ::= "<txAccess>" JSON "</txAccess>" [cell, cellName(txAccess), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax TransactionsRootCellOpt ::= TransactionsRootCell
  syntax TransactionsRootCellOpt ::= "noTransactionsRootCell" [cellOptAbsent(TransactionsRootCell)]
  syntax TransactionsRootCell ::= "initTransactionsRootCell" [function, initializer, noThread]
  syntax TransactionsRootCell ::= "<transactionsRoot>" Int "</transactionsRoot>" [cell, cellName(transactionsRoot), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax TouchedAccountsCellOpt ::= TouchedAccountsCell
  syntax TouchedAccountsCellOpt ::= "noTouchedAccountsCell" [cellOptAbsent(TouchedAccountsCell)]
  syntax TouchedAccountsCell ::= "initTouchedAccountsCell" [function, initializer, noThread]
  syntax TouchedAccountsCell ::= "<touchedAccounts>" Set "</touchedAccounts>" [cell, cellName(touchedAccounts), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ToCellOpt ::= ToCell
  syntax ToCellOpt ::= "noToCell" [cellOptAbsent(ToCell)]
  syntax ToCell ::= "initToCell" [function, initializer, noThread]
  syntax ToCell ::= "<to>" Account "</to>" [cell, cellName(to), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax TimestampCellOpt ::= TimestampCell
  syntax TimestampCellOpt ::= "noTimestampCell" [cellOptAbsent(TimestampCell)]
  syntax TimestampCell ::= "initTimestampCell" [function, initializer, noThread]
  syntax TimestampCell ::= "<timestamp>" Int "</timestamp>" [cell, cellName(timestamp), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax TernStackOp ::= "RETURNDATACOPY"
  syntax TernStackOp ::= "MULMOD"
  syntax TernStackOp ::= "CREATE"
  syntax TernStackOp ::= "CODECOPY"
  syntax TernStackOp ::= "CALLDATACOPY"
  syntax TernStackOp ::= "ADDMOD"
  syntax SubstateCellOpt ::= SubstateCell
  syntax SubstateCellOpt ::= "noSubstateCell" [cellOptAbsent(SubstateCell)]
  syntax SubstateCellFragment ::= "<substate>-fragment" SelfDestructCellOpt LogCellOpt RefundCellOpt AccessedAccountsCellOpt AccessedStorageCellOpt "</substate>-fragment" [cellFragment(SubstateCell)]
  syntax SubstateCell ::= "initSubstateCell" [function, initializer, noThread]
  syntax SubstateCell ::= "<substate>" SelfDestructCell LogCell RefundCell AccessedAccountsCell AccessedStorageCell "</substate>" [cell, cellName(substate), format(%1%i%n%2%n%3%n%4%n%5%n%6%d%n%7), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax StorageCellOpt ::= StorageCell
  syntax StorageCellOpt ::= "noStorageCell" [cellOptAbsent(StorageCell)]
  syntax StorageCell ::= "initStorageCell" [function, initializer, noThread]
  syntax StorageCell ::= "<storage>" Map "</storage>" [cell, cellName(storage), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax StatusCodeCellOpt ::= StatusCodeCell
  syntax StatusCodeCellOpt ::= "noStatusCodeCell" [cellOptAbsent(StatusCodeCell)]
  syntax StatusCodeCell ::= "initStatusCodeCell" [function, initializer, noThread]
  syntax StatusCodeCell ::= "<statusCode>" StatusCode "</statusCode>" [cell, cellName(statusCode), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax StaticCellOpt ::= StaticCell
  syntax StaticCellOpt ::= "noStaticCell" [cellOptAbsent(StaticCell)]
  syntax StaticCell ::= "initStaticCell" [function, initializer, noThread]
  syntax StaticCell ::= "<static>" Bool "</static>" [cell, cellName(static), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax StateRootCellOpt ::= StateRootCell
  syntax StateRootCellOpt ::= "noStateRootCell" [cellOptAbsent(StateRootCell)]
  syntax StateRootCell ::= "initStateRootCell" [function, initializer, noThread]
  syntax StateRootCell ::= "<stateRoot>" Int "</stateRoot>" [cell, cellName(stateRoot), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax StackOp ::= "SWAP" "(" Int ")" [klabel(SWAP)]
  syntax StackOp ::= "DUP" "(" Int ")" [klabel(DUP)]
  syntax SigVCellOpt ::= SigVCell
  syntax SigVCellOpt ::= "noSigVCell" [cellOptAbsent(SigVCell)]
  syntax SigVCell ::= "initSigVCell" [function, initializer, noThread]
  syntax SigVCell ::= "<sigV>" Int "</sigV>" [cell, cellName(sigV), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax SigSCellOpt ::= SigSCell
  syntax SigSCellOpt ::= "noSigSCell" [cellOptAbsent(SigSCell)]
  syntax SigSCell ::= "initSigSCell" [function, initializer, noThread]
  syntax SigSCell ::= "<sigS>" Bytes "</sigS>" [cell, cellName(sigS), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax SigRCellOpt ::= SigRCell
  syntax SigRCellOpt ::= "noSigRCell" [cellOptAbsent(SigRCell)]
  syntax SigRCell ::= "initSigRCell" [function, initializer, noThread]
  syntax SigRCell ::= "<sigR>" Bytes "</sigR>" [cell, cellName(sigR), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax Set ::= "#precompiledAccounts" "(" Schedule ")" [function, klabel(#precompiledAccounts), total]
  syntax Set ::= "#computeValidJumpDestsWithinBound" "(" Bytes "," Int "," List ")" [function, klabel(#computeValidJumpDestsWithinBound)]
  syntax Set ::= "#computeValidJumpDests" "(" Bytes "," Int "," List ")" [function, klabel(#computeValidJumpDestsAux)]
  syntax Set ::= "#computeValidJumpDests" "(" Bytes ")" [function, klabel(#computeValidJumpDests), memo, total]
  syntax SelfDestructCellOpt ::= SelfDestructCell
  syntax SelfDestructCellOpt ::= "noSelfDestructCell" [cellOptAbsent(SelfDestructCell)]
  syntax SelfDestructCell ::= "initSelfDestructCell" [function, initializer, noThread]
  syntax SelfDestructCell ::= "<selfDestruct>" Set "</selfDestruct>" [cell, cellName(selfDestruct), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ScheduleCellOpt ::= ScheduleCell
  syntax ScheduleCellOpt ::= "noScheduleCell" [cellOptAbsent(ScheduleCell)]
  syntax ScheduleCell ::= "initScheduleCell" "(" Map ")" [function, initializer, noThread]
  syntax ScheduleCell ::= "<schedule>" Schedule "</schedule>" [cell, cellName(schedule), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax RefundCellOpt ::= RefundCell
  syntax RefundCellOpt ::= "noRefundCell" [cellOptAbsent(RefundCell)]
  syntax RefundCell ::= "initRefundCell" [function, initializer, noThread]
  syntax RefundCell ::= "<refund>" Int "</refund>" [cell, cellName(refund), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ReceiptsRootCellOpt ::= ReceiptsRootCell
  syntax ReceiptsRootCellOpt ::= "noReceiptsRootCell" [cellOptAbsent(ReceiptsRootCell)]
  syntax ReceiptsRootCell ::= "initReceiptsRootCell" [function, initializer, noThread]
  syntax ReceiptsRootCell ::= "<receiptsRoot>" Int "</receiptsRoot>" [cell, cellName(receiptsRoot), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax QuadStackOp ::= "EXTCODECOPY"
  syntax QuadStackOp ::= "CREATE2"
  syntax PushOp ::= "PUSH" "(" Int ")" [klabel(PUSH)]
  syntax ProgramCellOpt ::= ProgramCell
  syntax ProgramCellOpt ::= "noProgramCell" [cellOptAbsent(ProgramCell)]
  syntax ProgramCell ::= "initProgramCell" [function, initializer, noThread]
  syntax ProgramCell ::= "<program>" Bytes "</program>" [cell, cellName(program), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax PreviousHashCellOpt ::= PreviousHashCell
  syntax PreviousHashCellOpt ::= "noPreviousHashCell" [cellOptAbsent(PreviousHashCell)]
  syntax PreviousHashCell ::= "initPreviousHashCell" [function, initializer, noThread]
  syntax PreviousHashCell ::= "<previousHash>" Int "</previousHash>" [cell, cellName(previousHash), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax PrecompiledOp ::= "SHA256"
  syntax PrecompiledOp ::= "RIP160"
  syntax PrecompiledOp ::= "MODEXP"
  syntax PrecompiledOp ::= "ID"
  syntax PrecompiledOp ::= "ECREC"
  syntax PrecompiledOp ::= "ECPAIRING"
  syntax PrecompiledOp ::= "ECMUL"
  syntax PrecompiledOp ::= "ECADD"
  syntax PrecompiledOp ::= "BLAKE2F"
  syntax PrecompiledOp ::= "#precompiled" "(" Int ")" [function, klabel(#precompiled)]
  syntax PcCellOpt ::= PcCell
  syntax PcCellOpt ::= "noPcCell" [cellOptAbsent(PcCell)]
  syntax PcCell ::= "initPcCell" [function, initializer, noThread]
  syntax PcCell ::= "<pc>" Int "</pc>" [cell, cellName(pc), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax OutputCellOpt ::= OutputCell
  syntax OutputCellOpt ::= "noOutputCell" [cellOptAbsent(OutputCell)]
  syntax OutputCell ::= "initOutputCell" [function, initializer, noThread]
  syntax OutputCell ::= "<output>" Bytes "</output>" [cell, cellName(output), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax OriginCellOpt ::= OriginCell
  syntax OriginCellOpt ::= "noOriginCell" [cellOptAbsent(OriginCell)]
  syntax OriginCell ::= "initOriginCell" [function, initializer, noThread]
  syntax OriginCell ::= "<origin>" Account "</origin>" [cell, cellName(origin), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax OrigStorageCellOpt ::= OrigStorageCell
  syntax OrigStorageCellOpt ::= "noOrigStorageCell" [cellOptAbsent(OrigStorageCell)]
  syntax OrigStorageCell ::= "initOrigStorageCell" [function, initializer, noThread]
  syntax OrigStorageCell ::= "<origStorage>" Map "</origStorage>" [cell, cellName(origStorage), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax OpCode ::= UnStackOp
  syntax OpCode ::= TernStackOp
  syntax OpCode ::= StackOp
  syntax OpCode ::= QuadStackOp
  syntax OpCode ::= PushOp
  syntax OpCode ::= NullStackOp
  syntax OpCode ::= InvalidOp
  syntax OpCode ::= InternalOp
  syntax OpCode ::= CallSixOp
  syntax OpCode ::= CallOp
  syntax OpCode ::= BinStackOp
  syntax OpCode ::= "#dasmOpCode" "(" Int "," Schedule ")" [function, klabel(#dasmOpCode), memo, total]
  syntax OmmersHashCellOpt ::= OmmersHashCell
  syntax OmmersHashCellOpt ::= "noOmmersHashCell" [cellOptAbsent(OmmersHashCell)]
  syntax OmmersHashCell ::= "initOmmersHashCell" [function, initializer, noThread]
  syntax OmmersHashCell ::= "<ommersHash>" Int "</ommersHash>" [cell, cellName(ommersHash), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax OmmerBlockHeadersCellOpt ::= OmmerBlockHeadersCell
  syntax OmmerBlockHeadersCellOpt ::= "noOmmerBlockHeadersCell" [cellOptAbsent(OmmerBlockHeadersCell)]
  syntax OmmerBlockHeadersCell ::= "initOmmerBlockHeadersCell" [function, initializer, noThread]
  syntax OmmerBlockHeadersCell ::= "<ommerBlockHeaders>" JSON "</ommerBlockHeaders>" [cell, cellName(ommerBlockHeaders), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax NumberCellOpt ::= NumberCell
  syntax NumberCellOpt ::= "noNumberCell" [cellOptAbsent(NumberCell)]
  syntax NumberCell ::= "initNumberCell" [function, initializer, noThread]
  syntax NumberCell ::= "<number>" Int "</number>" [cell, cellName(number), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax NullStackOp ::= PrecompiledOp
  syntax NullStackOp ::= "TIMESTAMP"
  syntax NullStackOp ::= "STOP"
  syntax NullStackOp ::= "SELFBALANCE"
  syntax NullStackOp ::= "RETURNDATASIZE"
  syntax NullStackOp ::= "PREVRANDAO"
  syntax NullStackOp ::= "PC"
  syntax NullStackOp ::= "ORIGIN"
  syntax NullStackOp ::= "NUMBER"
  syntax NullStackOp ::= "MSIZE"
  syntax NullStackOp ::= "JUMPDEST"
  syntax NullStackOp ::= "GASPRICE"
  syntax NullStackOp ::= "GASLIMIT"
  syntax NullStackOp ::= "GAS"
  syntax NullStackOp ::= "DIFFICULTY"
  syntax NullStackOp ::= "COINBASE"
  syntax NullStackOp ::= "CODESIZE"
  syntax NullStackOp ::= "CHAINID"
  syntax NullStackOp ::= "CALLVALUE"
  syntax NullStackOp ::= "CALLER"
  syntax NullStackOp ::= "CALLDATASIZE"
  syntax NullStackOp ::= "BASEFEE"
  syntax NullStackOp ::= "ADDRESS"
  syntax NonceCellOpt ::= NonceCell
  syntax NonceCellOpt ::= "noNonceCell" [cellOptAbsent(NonceCell)]
  syntax NonceCell ::= "initNonceCell" [function, initializer, noThread]
  syntax NonceCell ::= "<nonce>" Int "</nonce>" [cell, cellName(nonce), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax NetworkCellOpt ::= NetworkCell
  syntax NetworkCellOpt ::= "noNetworkCell" [cellOptAbsent(NetworkCell)]
  syntax NetworkCellFragment ::= "<network>-fragment" ChainIDCellOpt AccountsCellOpt TxOrderCellOpt TxPendingCellOpt MessagesCellOpt "</network>-fragment" [cellFragment(NetworkCell)]
  syntax NetworkCell ::= "initNetworkCell" "(" Map ")" [function, initializer, noThread]
  syntax NetworkCell ::= "<network>" ChainIDCell AccountsCell TxOrderCell TxPendingCell MessagesCell "</network>" [cell, cellName(network), format(%1%i%n%2%n%3%n%4%n%5%n%6%d%n%7), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax MsgIDCellOpt ::= MsgIDCell
  syntax MsgIDCellOpt ::= "noMsgIDCell" [cellOptAbsent(MsgIDCell)]
  syntax MsgIDCell ::= "initMsgIDCell" [function, initializer, noThread]
  syntax MsgIDCell ::= "MessageCellMapKey" "(" MessageCell ")" [function, total]
  syntax MsgIDCell ::= "<msgID>" Int "</msgID>" [cell, cellName(msgID), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ModeCellOpt ::= ModeCell
  syntax ModeCellOpt ::= "noModeCell" [cellOptAbsent(ModeCell)]
  syntax ModeCell ::= "initModeCell" "(" Map ")" [function, initializer, noThread]
  syntax ModeCell ::= "<mode>" Mode "</mode>" [cell, cellName(mode), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax Mode ::= "VMTESTS" [klabel(VMTESTS), symbol]
  syntax Mode ::= "NORMAL" [klabel(NORMAL), symbol]
  syntax MixHashCellOpt ::= MixHashCell
  syntax MixHashCellOpt ::= "noMixHashCell" [cellOptAbsent(MixHashCell)]
  syntax MixHashCell ::= "initMixHashCell" [function, initializer, noThread]
  syntax MixHashCell ::= "<mixHash>" Int "</mixHash>" [cell, cellName(mixHash), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax MessagesCellOpt ::= MessagesCell
  syntax MessagesCellOpt ::= "noMessagesCell" [cellOptAbsent(MessagesCell)]
  syntax MessagesCellFragment ::= "<messages>-fragment" MessageCellMap "</messages>-fragment" [cellFragment(MessagesCell)]
  syntax MessagesCell ::= "initMessagesCell" [function, initializer, noThread]
  syntax MessagesCell ::= "<messages>" MessageCellMap "</messages>" [cell, cellName(messages), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax MessageCellMap [cellCollection, hook(MAP.Map)]
  syntax MessageCellMap ::= MessageCellMap MessageCellMap [assoc, avoid, cellCollection, comm, element(MessageCellMapItem), function, hook(MAP.concat), unit(.MessageCellMap), wrapElement(<message>)]
  syntax MessageCellMap ::= MessageCell
  syntax MessageCellMap ::= "initMessageCell" [function, initializer, noThread]
  syntax MessageCellMap ::= "MessageCellMapItem" "(" MsgIDCell "," MessageCell ")" [format(%5), function, hook(MAP.element)]
  syntax MessageCellMap ::= ".MessageCellMap" [function, hook(MAP.unit)]
  syntax MessageCellFragment ::= "<message>-fragment" MsgIDCellOpt TxNonceCellOpt TxGasPriceCellOpt TxGasLimitCellOpt ToCellOpt ValueCellOpt SigVCellOpt SigRCellOpt SigSCellOpt DataCellOpt TxAccessCellOpt TxChainIDCellOpt TxPriorityFeeCellOpt TxMaxFeeCellOpt TxTypeCellOpt "</message>-fragment" [cellFragment(MessageCell)]
  syntax MessageCell ::= "<message>" MsgIDCell TxNonceCell TxGasPriceCell TxGasLimitCell ToCell ValueCell SigVCell SigRCell SigSCell DataCell TxAccessCell TxChainIDCell TxPriorityFeeCell TxMaxFeeCell TxTypeCell "</message>" [cell, cellName(message), format(%1%i%n%2%n%3%n%4%n%5%n%6%n%7%n%8%n%9%n%10%n%11%n%12%n%13%n%14%n%15%n%16%d%n%17), multiplicity(*), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), type(Map)]
  syntax MemoryUsedCellOpt ::= MemoryUsedCell
  syntax MemoryUsedCellOpt ::= "noMemoryUsedCell" [cellOptAbsent(MemoryUsedCell)]
  syntax MemoryUsedCell ::= "initMemoryUsedCell" [function, initializer, noThread]
  syntax MemoryUsedCell ::= "<memoryUsed>" Int "</memoryUsed>" [cell, cellName(memoryUsed), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax MaybeOpCode ::= OpCode
  syntax MaybeOpCode ::= ".NoOpCode"
  syntax MaybeOpCode ::= "#lookupOpCode" "(" Bytes "," Int "," Schedule ")" [function, total]
  syntax LogsBloomCellOpt ::= LogsBloomCell
  syntax LogsBloomCellOpt ::= "noLogsBloomCell" [cellOptAbsent(LogsBloomCell)]
  syntax LogsBloomCell ::= "initLogsBloomCell" [function, initializer, noThread]
  syntax LogsBloomCell ::= "<logsBloom>" Bytes "</logsBloom>" [cell, cellName(logsBloom), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax LogOp ::= "LOG" "(" Int ")" [klabel(LOG)]
  syntax LogCellOpt ::= LogCell
  syntax LogCellOpt ::= "noLogCell" [cellOptAbsent(LogCell)]
  syntax LogCell ::= "initLogCell" [function, initializer, noThread]
  syntax LogCell ::= "<log>" List "</log>" [cell, cellName(log), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax LocalMemCellOpt ::= LocalMemCell
  syntax LocalMemCellOpt ::= "noLocalMemCell" [cellOptAbsent(LocalMemCell)]
  syntax LocalMemCell ::= "initLocalMemCell" [function, initializer, noThread]
  syntax LocalMemCell ::= "<localMem>" Bytes "</localMem>" [cell, cellName(localMem), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax List ::= "listAsBytes" "(" List ")" [function, klabel(listAsBytes)]
  syntax KevmCellFragment ::= "<kevm>-fragment" KCellOpt ExitCodeCellOpt ModeCellOpt ScheduleCellOpt EthereumCellOpt "</kevm>-fragment" [cellFragment(KevmCell)]
  syntax KevmCell ::= "initKevmCell" "(" Map ")" [function, initializer, noThread]
  syntax KevmCell ::= "<kevm>" KCell ExitCodeCell ModeCell ScheduleCell EthereumCell "</kevm>" [cell, cellName(kevm), format(%1%i%n%2%n%3%n%4%n%5%n%6%d%n%7), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), topcell]
  syntax KResult ::= Int
  syntax KResult ::= Bool
  syntax KItem ::= OpCode
  syntax KItem ::= "#touchAccounts" Account Account
  syntax KItem ::= "#touchAccounts" Account
  syntax KItem ::= "#return" Int Int
  syntax KItem ::= "#mkCodeDeposit" Int
  syntax KItem ::= "#loadProgram" Bytes
  syntax KItem ::= "#initVM"
  syntax KItem ::= "#halt"
  syntax KItem ::= "#finishCodeDeposit" Int Bytes
  syntax KItem ::= "#execute"
  syntax KItem ::= "#end" StatusCode
  syntax KItem ::= "#codeDeposit" Int
  syntax KItem ::= "#accessStorage" Account Int
  syntax KItem ::= "#accessAccounts" Set
  syntax KItem ::= "#accessAccounts" Account Account Set
  syntax KItem ::= "#accessAccounts" Account Account
  syntax KItem ::= "#accessAccounts" Account
  syntax KCellOpt ::= KCell
  syntax KCellOpt ::= "noKCell" [cellOptAbsent(KCell)]
  syntax KCell ::= "initKCell" "(" Map ")" [function, initializer, noThread]
  syntax KCell ::= "<k>" K "</k>" [cell, cellName(k), format(%1%i%n%2%d%n%3), maincell, org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax JumpDestsCellOpt ::= JumpDestsCell
  syntax JumpDestsCellOpt ::= "noJumpDestsCell" [cellOptAbsent(JumpDestsCell)]
  syntax JumpDestsCell ::= "initJumpDestsCell" [function, initializer, noThread]
  syntax JumpDestsCell ::= "<jumpDests>" Set "</jumpDests>" [cell, cellName(jumpDests), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax InvalidOp ::= "UNDEFINED" "(" Int ")"
  syntax InvalidOp ::= "INVALID"
  syntax InternalOp ::= UnStackOp Int
  syntax InternalOp ::= TernStackOp Int Int Int
  syntax InternalOp ::= StackOp WordStack
  syntax InternalOp ::= QuadStackOp Int Int Int Int
  syntax InternalOp ::= CallSixOp Int Int Int Int Int Int
  syntax InternalOp ::= CallOp Int Int Int Int Int Int Int
  syntax InternalOp ::= BinStackOp Int Int
  syntax InternalOp ::= "#transferFundsToNonExistent" Int Int Int
  syntax InternalOp ::= "#transferFunds" Int Int Int
  syntax InternalOp ::= "#setStack" WordStack
  syntax InternalOp ::= "#setLocalMem" Int Int Bytes
  syntax InternalOp ::= "#refund" Gas
  syntax InternalOp ::= "#pushWorldState"
  syntax InternalOp ::= "#pushCallStack"
  syntax InternalOp ::= "#push"
  syntax InternalOp ::= "#precompiled?" "(" Int "," Schedule ")"
  syntax InternalOp ::= "#popWorldState"
  syntax InternalOp ::= "#popCallStack"
  syntax InternalOp ::= "#pc" "[" OpCode "]"
  syntax InternalOp ::= "#next" "[" MaybeOpCode "]"
  syntax InternalOp ::= "#newFreshAccount" Int
  syntax InternalOp ::= "#newExistingAccount" Int
  syntax InternalOp ::= "#newAccount" Int
  syntax InternalOp ::= "#mkCreate" Int Int Int Bytes
  syntax InternalOp ::= "#mkCall" Int Int Int Bytes Int Bytes Bool
  syntax InternalOp ::= "#memory" "[" OpCode "," OpCode "]"
  syntax InternalOp ::= "#incrementNonce" Int
  syntax InternalOp ::= "#gasExec" "(" Schedule "," OpCode ")" [klabel(#gasExec)]
  syntax InternalOp ::= "#gasAccess" "(" Schedule "," OpCode ")" [klabel(#gasAccess)]
  syntax InternalOp ::= "#gas" "[" OpCode "]"
  syntax InternalOp ::= "#gas" "[" OpCode "," OpCode "]"
  syntax InternalOp ::= "#finalizeTx" "(" Bool ")" [klabel(#finalizeTx)]
  syntax InternalOp ::= "#finalizeStorage" "(" List ")" [klabel(#finalizeStorage)]
  syntax InternalOp ::= "#exec" "[" OpCode "]"
  syntax InternalOp ::= "#endBasicBlock"
  syntax InternalOp ::= "#ecpairing" "(" List "," List "," Int "," Bytes "," Int ")" [klabel(#ecpairing)]
  syntax InternalOp ::= "#ecmul" "(" G1Point "," Int ")" [klabel(#ecmul)]
  syntax InternalOp ::= "#ecadd" "(" G1Point "," G1Point ")" [klabel(#ecadd)]
  syntax InternalOp ::= "#dropWorldState"
  syntax InternalOp ::= "#dropCallStack"
  syntax InternalOp ::= "#deleteAccounts" "(" List ")" [klabel(#deleteAccounts)]
  syntax InternalOp ::= "#deductMemoryGas"
  syntax InternalOp ::= "#deductMemory"
  syntax InternalOp ::= "#deductGas"
  syntax InternalOp ::= "#create" Int Int Int Bytes
  syntax InternalOp ::= "#checkPoint"
  syntax InternalOp ::= "#checkCall" Int Int
  syntax InternalOp ::= "#callWithCode" Int Int Int Bytes Int Int Bytes Bool
  syntax InternalOp ::= "#call" Int Int Int Int Int Bytes Bool
  syntax InternalOp ::= "#allocateCreateGas"
  syntax InternalOp ::= "#allocateCallGas"
  syntax InternalOp ::= "#addr" "[" OpCode "]"
  syntax InternalOp ::= "#access" "[" OpCode "," OpCode "]"
  syntax InterimStatesCellOpt ::= InterimStatesCell
  syntax InterimStatesCellOpt ::= "noInterimStatesCell" [cellOptAbsent(InterimStatesCell)]
  syntax InterimStatesCell ::= "initInterimStatesCell" [function, initializer, noThread]
  syntax InterimStatesCell ::= "<interimStates>" List "</interimStates>" [cell, cellName(interimStates), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax Int ::= "setBloomFilterBits" "(" Bytes ")" [function, klabel(setBloomFilterBits)]
  syntax Int ::= "getExitCode" "(" GeneratedTopCell ")" [function]
  syntax Int ::= "getBloomFilterBit" "(" Bytes "," Int ")" [function, klabel(getBloomFilterBit)]
  syntax Int ::= "M3:2048" "(" Bytes ")" [function]
  syntax Int ::= "#widthOpCode" "(" Int ")" [function, klabel(#widthOpCode)]
  syntax Int ::= "#widthOp" "(" OpCode ")" [function, klabel(#widthOp), total]
  syntax Int ::= "#stackNeeded" "(" OpCode ")" [function, klabel(#stackNeeded)]
  syntax Int ::= "#stackDelta" "(" OpCode ")" [function, klabel(#stackDelta)]
  syntax Int ::= "#stackAdded" "(" OpCode ")" [function, klabel(#stackAdded)]
  syntax Int ::= "#memoryUsageUpdate" "(" Int "," Int "," Int ")" [function, klabel(#memoryUsageUpdate), total]
  syntax Int ::= "#memory" "(" OpCode "," Int ")" [function, klabel(#memory), total]
  syntax Int ::= "#blockhash" "(" List "," Int "," Int "," Int ")" [function, klabel(#blockhash)]
  syntax IdCellOpt ::= IdCell
  syntax IdCellOpt ::= "noIdCell" [cellOptAbsent(IdCell)]
  syntax IdCell ::= "initIdCell" [function, initializer, noThread]
  syntax IdCell ::= "<id>" Account "</id>" [cell, cellName(id), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax GeneratedTopCell
  syntax GasUsedCellOpt ::= GasUsedCell
  syntax GasUsedCellOpt ::= "noGasUsedCell" [cellOptAbsent(GasUsedCell)]
  syntax GasUsedCell ::= "initGasUsedCell" [function, initializer, noThread]
  syntax GasUsedCell ::= "<gasUsed>" Gas "</gasUsed>" [cell, cellName(gasUsed), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax GasPriceCellOpt ::= GasPriceCell
  syntax GasPriceCellOpt ::= "noGasPriceCell" [cellOptAbsent(GasPriceCell)]
  syntax GasPriceCell ::= "initGasPriceCell" [function, initializer, noThread]
  syntax GasPriceCell ::= "<gasPrice>" Int "</gasPrice>" [cell, cellName(gasPrice), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax GasLimitCellOpt ::= GasLimitCell
  syntax GasLimitCellOpt ::= "noGasLimitCell" [cellOptAbsent(GasLimitCell)]
  syntax GasLimitCell ::= "initGasLimitCell" [function, initializer, noThread]
  syntax GasLimitCell ::= "<gasLimit>" Int "</gasLimit>" [cell, cellName(gasLimit), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax GasCellOpt ::= GasCell
  syntax GasCellOpt ::= "noGasCell" [cellOptAbsent(GasCell)]
  syntax GasCell ::= "initGasCell" [function, initializer, noThread]
  syntax GasCell ::= "<gas>" Gas "</gas>" [cell, cellName(gas), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ExtraDataCellOpt ::= ExtraDataCell
  syntax ExtraDataCellOpt ::= "noExtraDataCell" [cellOptAbsent(ExtraDataCell)]
  syntax ExtraDataCell ::= "initExtraDataCell" [function, initializer, noThread]
  syntax ExtraDataCell ::= "<extraData>" Bytes "</extraData>" [cell, cellName(extraData), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax Exp ::= Int
  syntax Exp ::= Gas
  syntax Exp ::= "Cselfdestruct" "(" Schedule "," BExp "," Int ")" [klabel(Cselfdestruct), strict(2)]
  syntax Exp ::= "Ccallgas" "(" Schedule "," BExp "," Gas "," Gas "," Int "," Bool ")" [klabel(Ccallgas), strict(2)]
  syntax Exp ::= "Ccall" "(" Schedule "," BExp "," Gas "," Gas "," Int "," Bool ")" [klabel(Ccall), strict(2)]
  syntax ExitCodeCellOpt ::= ExitCodeCell
  syntax ExitCodeCellOpt ::= "noExitCodeCell" [cellOptAbsent(ExitCodeCell)]
  syntax ExitCodeCell ::= "initExitCodeCell" [function, initializer, noThread]
  syntax ExitCodeCell ::= "<exit-code>" Int "</exit-code>" [cell, cellName(exit-code), exit, format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax EvmCellOpt ::= EvmCell
  syntax EvmCellOpt ::= "noEvmCell" [cellOptAbsent(EvmCell)]
  syntax EvmCellFragment ::= "<evm>-fragment" OutputCellOpt StatusCodeCellOpt CallStackCellOpt InterimStatesCellOpt TouchedAccountsCellOpt CallStateCellOpt SubstateCellOpt GasPriceCellOpt OriginCellOpt BlockhashesCellOpt BlockCellOpt "</evm>-fragment" [cellFragment(EvmCell)]
  syntax EvmCell ::= "initEvmCell" [function, initializer, noThread]
  syntax EvmCell ::= "<evm>" OutputCell StatusCodeCell CallStackCell InterimStatesCell TouchedAccountsCell CallStateCell SubstateCell GasPriceCell OriginCell BlockhashesCell BlockCell "</evm>" [cell, cellName(evm), format(%1%i%n%2%n%3%n%4%n%5%n%6%n%7%n%8%n%9%n%10%n%11%n%12%d%n%13), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax EthereumSimulation [org.kframework.attributes.Location(Location(171,5,171,30)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md))]
  syntax EthereumCommand ::= "#startBlock"
  syntax EthereumCommand ::= "#rewardOmmers" "(" JSONs ")" [klabel(#rewardOmmers)]
  syntax EthereumCommand ::= "#finalizeBlock"
  syntax EthereumCellOpt ::= EthereumCell
  syntax EthereumCellOpt ::= "noEthereumCell" [cellOptAbsent(EthereumCell)]
  syntax EthereumCellFragment ::= "<ethereum>-fragment" EvmCellOpt NetworkCellOpt "</ethereum>-fragment" [cellFragment(EthereumCell)]
  syntax EthereumCell ::= "initEthereumCell" "(" Map ")" [function, initializer, noThread]
  syntax EthereumCell ::= "<ethereum>" EvmCell NetworkCell "</ethereum>" [cell, cellName(ethereum), format(%1%i%n%2%n%3%d%n%4), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax DifficultyCellOpt ::= DifficultyCell
  syntax DifficultyCellOpt ::= "noDifficultyCell" [cellOptAbsent(DifficultyCell)]
  syntax DifficultyCell ::= "initDifficultyCell" [function, initializer, noThread]
  syntax DifficultyCell ::= "<difficulty>" Int "</difficulty>" [cell, cellName(difficulty), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax DataCellOpt ::= DataCell
  syntax DataCellOpt ::= "noDataCell" [cellOptAbsent(DataCell)]
  syntax DataCell ::= "initDataCell" [function, initializer, noThread]
  syntax DataCell ::= "<data>" Bytes "</data>" [cell, cellName(data), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax CoinbaseCellOpt ::= CoinbaseCell
  syntax CoinbaseCellOpt ::= "noCoinbaseCell" [cellOptAbsent(CoinbaseCell)]
  syntax CoinbaseCell ::= "initCoinbaseCell" [function, initializer, noThread]
  syntax CoinbaseCell ::= "<coinbase>" Int "</coinbase>" [cell, cellName(coinbase), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax CodeCellOpt ::= CodeCell
  syntax CodeCellOpt ::= "noCodeCell" [cellOptAbsent(CodeCell)]
  syntax CodeCell ::= "initCodeCell" [function, initializer, noThread]
  syntax CodeCell ::= "<code>" AccountCode "</code>" [cell, cellName(code), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ChainIDCellOpt ::= ChainIDCell
  syntax ChainIDCellOpt ::= "noChainIDCell" [cellOptAbsent(ChainIDCell)]
  syntax ChainIDCell ::= "initChainIDCell" "(" Map ")" [function, initializer, noThread]
  syntax ChainIDCell ::= "<chainID>" Int "</chainID>" [cell, cellName(chainID), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax CallerCellOpt ::= CallerCell
  syntax CallerCellOpt ::= "noCallerCell" [cellOptAbsent(CallerCell)]
  syntax CallerCell ::= "initCallerCell" [function, initializer, noThread]
  syntax CallerCell ::= "<caller>" Account "</caller>" [cell, cellName(caller), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax CallValueCellOpt ::= CallValueCell
  syntax CallValueCellOpt ::= "noCallValueCell" [cellOptAbsent(CallValueCell)]
  syntax CallValueCell ::= "initCallValueCell" [function, initializer, noThread]
  syntax CallValueCell ::= "<callValue>" Int "</callValue>" [cell, cellName(callValue), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax CallStateCellOpt ::= CallStateCell
  syntax CallStateCellOpt ::= "noCallStateCell" [cellOptAbsent(CallStateCell)]
  syntax CallStateCellFragment ::= "<callState>-fragment" ProgramCellOpt JumpDestsCellOpt IdCellOpt CallerCellOpt CallDataCellOpt CallValueCellOpt WordStackCellOpt LocalMemCellOpt PcCellOpt GasCellOpt MemoryUsedCellOpt CallGasCellOpt StaticCellOpt CallDepthCellOpt "</callState>-fragment" [cellFragment(CallStateCell)]
  syntax CallStateCell ::= "initCallStateCell" [function, initializer, noThread]
  syntax CallStateCell ::= "<callState>" ProgramCell JumpDestsCell IdCell CallerCell CallDataCell CallValueCell WordStackCell LocalMemCell PcCell GasCell MemoryUsedCell CallGasCell StaticCell CallDepthCell "</callState>" [cell, cellName(callState), format(%1%i%n%2%n%3%n%4%n%5%n%6%n%7%n%8%n%9%n%10%n%11%n%12%n%13%n%14%n%15%d%n%16), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax CallStackCellOpt ::= CallStackCell
  syntax CallStackCellOpt ::= "noCallStackCell" [cellOptAbsent(CallStackCell)]
  syntax CallStackCell ::= "initCallStackCell" [function, initializer, noThread]
  syntax CallStackCell ::= "<callStack>" List "</callStack>" [cell, cellName(callStack), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax CallSixOp ::= "STATICCALL"
  syntax CallSixOp ::= "DELEGATECALL"
  syntax CallOp ::= "CALLCODE"
  syntax CallOp ::= "CALL"
  syntax CallGasCellOpt ::= CallGasCell
  syntax CallGasCellOpt ::= "noCallGasCell" [cellOptAbsent(CallGasCell)]
  syntax CallGasCell ::= "initCallGasCell" [function, initializer, noThread]
  syntax CallGasCell ::= "<callGas>" Gas "</callGas>" [cell, cellName(callGas), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax CallDepthCellOpt ::= CallDepthCell
  syntax CallDepthCellOpt ::= "noCallDepthCell" [cellOptAbsent(CallDepthCell)]
  syntax CallDepthCell ::= "initCallDepthCell" [function, initializer, noThread]
  syntax CallDepthCell ::= "<callDepth>" Int "</callDepth>" [cell, cellName(callDepth), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax CallDataCellOpt ::= CallDataCell
  syntax CallDataCellOpt ::= "noCallDataCell" [cellOptAbsent(CallDataCell)]
  syntax CallDataCell ::= "initCallDataCell" [function, initializer, noThread]
  syntax CallDataCell ::= "<callData>" Bytes "</callData>" [cell, cellName(callData), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax Bytes ::= "#point" "(" G1Point ")" [function, klabel(#point)]
  syntax Bytes ::= "#modexp4" "(" Int "," Int "," Int ")" [function, klabel(#modexp4)]
  syntax Bytes ::= "#modexp3" "(" Int "," Int "," Int "," Bytes ")" [function, klabel(#modexp3)]
  syntax Bytes ::= "#modexp2" "(" Int "," Int "," Int "," Bytes ")" [function, klabel(#modexp2)]
  syntax Bytes ::= "#modexp1" "(" Int "," Int "," Int "," Bytes ")" [function, klabel(#modexp1)]
  syntax Bytes ::= "#ecrec" "(" Bytes "," Bytes "," Bytes "," Bytes ")" [function, klabel(#ecrec), smtlib(ecrec)]
  syntax Bytes ::= "#ecrec" "(" Account ")" [function, klabel(#ecrec)]
  syntax Bytes ::= "#bloomFilter" "(" List "," Int ")" [function, klabel(#bloomFilterAux)]
  syntax Bytes ::= "#bloomFilter" "(" List ")" [function, klabel(#bloomFilter)]
  syntax Bool ::= MsgIDCell "in_keys" "(" MessageCellMap ")" [function, hook(MAP.in_keys), total]
  syntax Bool ::= AcctIDCell "in_keys" "(" AccountCellMap ")" [function, hook(MAP.in_keys), total]
  syntax Bool ::= "isAddr2Op" "(" OpCode ")" [function, klabel(isAddr2Op), total]
  syntax Bool ::= "isAddr1Op" "(" OpCode ")" [function, klabel(isAddr1Op), total]
  syntax Bool ::= "#usesMemory" "(" OpCode ")" [function, klabel(#usesMemory), total]
  syntax Bool ::= "#usesAccessList" "(" OpCode ")" [function, klabel(#usesAccessList), total]
  syntax Bool ::= "#stackUnderflow" "(" WordStack "," OpCode ")" [klabel(#stackUnderflow), macro]
  syntax Bool ::= "#stackOverflow" "(" WordStack "," OpCode ")" [klabel(#stackOverflow), macro]
  syntax Bool ::= "#isValidCode" "(" Bytes "," Schedule ")" [function, klabel(#isValidCode)]
  syntax Bool ::= "#isPrecompiledAccount" "(" Int "," Schedule ")" [function, klabel(#isPrecompiledAccount), smtlib(isPrecompiledAccount), total]
  syntax Bool ::= "#inStorageAux2" "(" Set "," Int ")" [function, klabel(#inStorageAux2), total]
  syntax Bool ::= "#inStorageAux1" "(" KItem "," Int ")" [function, klabel(#inStorageAux1), total]
  syntax Bool ::= "#inStorage" "(" Map "," Account "," Int ")" [function, klabel(#inStorage), total]
  syntax Bool ::= "#changesState" "(" OpCode "," WordStack ")" [function, klabel(#changesState)]
  syntax BlockhashesCellOpt ::= BlockhashesCell
  syntax BlockhashesCellOpt ::= "noBlockhashesCell" [cellOptAbsent(BlockhashesCell)]
  syntax BlockhashesCell ::= "initBlockhashesCell" [function, initializer, noThread]
  syntax BlockhashesCell ::= "<blockhashes>" List "</blockhashes>" [cell, cellName(blockhashes), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax BlockNonceCellOpt ::= BlockNonceCell
  syntax BlockNonceCellOpt ::= "noBlockNonceCell" [cellOptAbsent(BlockNonceCell)]
  syntax BlockNonceCell ::= "initBlockNonceCell" [function, initializer, noThread]
  syntax BlockNonceCell ::= "<blockNonce>" Int "</blockNonce>" [cell, cellName(blockNonce), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax BlockCellOpt ::= BlockCell
  syntax BlockCellOpt ::= "noBlockCell" [cellOptAbsent(BlockCell)]
  syntax BlockCellFragment ::= "<block>-fragment" PreviousHashCellOpt OmmersHashCellOpt CoinbaseCellOpt StateRootCellOpt TransactionsRootCellOpt ReceiptsRootCellOpt LogsBloomCellOpt DifficultyCellOpt NumberCellOpt GasLimitCellOpt GasUsedCellOpt TimestampCellOpt ExtraDataCellOpt MixHashCellOpt BlockNonceCellOpt BaseFeeCellOpt OmmerBlockHeadersCellOpt "</block>-fragment" [cellFragment(BlockCell)]
  syntax BlockCell ::= "initBlockCell" [function, initializer, noThread]
  syntax BlockCell ::= "<block>" PreviousHashCell OmmersHashCell CoinbaseCell StateRootCell TransactionsRootCell ReceiptsRootCell LogsBloomCell DifficultyCell NumberCell GasLimitCell GasUsedCell TimestampCell ExtraDataCell MixHashCell BlockNonceCell BaseFeeCell OmmerBlockHeadersCell "</block>" [cell, cellName(block), format(%1%i%n%2%n%3%n%4%n%5%n%6%n%7%n%8%n%9%n%10%n%11%n%12%n%13%n%14%n%15%n%16%n%17%n%18%d%n%19), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax BinStackOp ::= LogOp
  syntax BinStackOp ::= "XOR"
  syntax BinStackOp ::= "SUB"
  syntax BinStackOp ::= "SSTORE"
  syntax BinStackOp ::= "SMOD"
  syntax BinStackOp ::= "SLT"
  syntax BinStackOp ::= "SIGNEXTEND"
  syntax BinStackOp ::= "SHR"
  syntax BinStackOp ::= "SHL"
  syntax BinStackOp ::= "SHA3"
  syntax BinStackOp ::= "SGT"
  syntax BinStackOp ::= "SDIV"
  syntax BinStackOp ::= "SAR"
  syntax BinStackOp ::= "REVERT"
  syntax BinStackOp ::= "RETURN"
  syntax BinStackOp ::= "MUL"
  syntax BinStackOp ::= "MSTORE8"
  syntax BinStackOp ::= "MSTORE"
  syntax BinStackOp ::= "MOD"
  syntax BinStackOp ::= "LT"
  syntax BinStackOp ::= "JUMPI"
  syntax BinStackOp ::= "GT"
  syntax BinStackOp ::= "EXP"
  syntax BinStackOp ::= "EVMOR"
  syntax BinStackOp ::= "EQ"
  syntax BinStackOp ::= "DIV"
  syntax BinStackOp ::= "BYTE"
  syntax BinStackOp ::= "AND"
  syntax BinStackOp ::= "ADD"
  syntax BaseFeeCellOpt ::= BaseFeeCell
  syntax BaseFeeCellOpt ::= "noBaseFeeCell" [cellOptAbsent(BaseFeeCell)]
  syntax BaseFeeCell ::= "initBaseFeeCell" [function, initializer, noThread]
  syntax BaseFeeCell ::= "<baseFee>" Int "</baseFee>" [cell, cellName(baseFee), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax BalanceCellOpt ::= BalanceCell
  syntax BalanceCellOpt ::= "noBalanceCell" [cellOptAbsent(BalanceCell)]
  syntax BalanceCell ::= "initBalanceCell" [function, initializer, noThread]
  syntax BalanceCell ::= "<balance>" Int "</balance>" [cell, cellName(balance), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax BExp ::= Bool
  syntax BExp ::= "#accountNonexistent" "(" Int ")" [klabel(#accountNonexistent)]
  syntax AcctIDCellOpt ::= AcctIDCell
  syntax AcctIDCellOpt ::= "noAcctIDCell" [cellOptAbsent(AcctIDCell)]
  syntax AcctIDCell ::= "initAcctIDCell" [function, initializer, noThread]
  syntax AcctIDCell ::= "AccountCellMapKey" "(" AccountCell ")" [function, total]
  syntax AcctIDCell ::= "<acctID>" Int "</acctID>" [cell, cellName(acctID), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax AccountsCellOpt ::= AccountsCell
  syntax AccountsCellOpt ::= "noAccountsCell" [cellOptAbsent(AccountsCell)]
  syntax AccountsCellFragment ::= "<accounts>-fragment" AccountCellMap "</accounts>-fragment" [cellFragment(AccountsCell)]
  syntax AccountsCell ::= "initAccountsCell" [function, initializer, noThread]
  syntax AccountsCell ::= "<accounts>" AccountCellMap "</accounts>" [cell, cellName(accounts), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax Accounts ::= "{" AccountsCellFragment "|" SubstateCellFragment "}"
  syntax AccountCellMap [cellCollection, hook(MAP.Map)]
  syntax AccountCellMap ::= AccountCellMap AccountCellMap [assoc, avoid, cellCollection, comm, element(AccountCellMapItem), function, hook(MAP.concat), unit(.AccountCellMap), wrapElement(<account>)]
  syntax AccountCellMap ::= AccountCell
  syntax AccountCellMap ::= "initAccountCell" [function, initializer, noThread]
  syntax AccountCellMap ::= "AccountCellMapItem" "(" AcctIDCell "," AccountCell ")" [format(%5), function, hook(MAP.element)]
  syntax AccountCellMap ::= ".AccountCellMap" [function, hook(MAP.unit)]
  syntax AccountCellFragment ::= "<account>-fragment" AcctIDCellOpt BalanceCellOpt CodeCellOpt StorageCellOpt OrigStorageCellOpt NonceCellOpt "</account>-fragment" [cellFragment(AccountCell)]
  syntax AccountCell ::= "<account>" AcctIDCell BalanceCell CodeCell StorageCell OrigStorageCell NonceCell "</account>" [cell, cellName(account), format(%1%i%n%2%n%3%n%4%n%5%n%6%n%7%d%n%8), multiplicity(*), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), type(Map)]
  syntax AccessedStorageCellOpt ::= AccessedStorageCell
  syntax AccessedStorageCellOpt ::= "noAccessedStorageCell" [cellOptAbsent(AccessedStorageCell)]
  syntax AccessedStorageCell ::= "initAccessedStorageCell" [function, initializer, noThread]
  syntax AccessedStorageCell ::= "<accessedStorage>" Map "</accessedStorage>" [cell, cellName(accessedStorage), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax AccessedAccountsCellOpt ::= AccessedAccountsCell
  syntax AccessedAccountsCellOpt ::= "noAccessedAccountsCell" [cellOptAbsent(AccessedAccountsCell)]
  syntax AccessedAccountsCell ::= "initAccessedAccountsCell" [function, initializer, noThread]
  syntax AccessedAccountsCell ::= "<accessedAccounts>" Set "</accessedAccounts>" [cell, cellName(accessedAccounts), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule initWordStackCell(.KList)=>`<wordStack>`(#noDots(.KList),`.WordStack_EVM-TYPES_WordStack`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initValueCell(.KList)=>`<value>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initTxTypeCell(.KList)=>`<txType>`(#noDots(.KList),`.TxType_EVM-TYPES_TxType`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initTxPriorityFeeCell(.KList)=>`<txPriorityFee>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initTxPendingCell(.KList)=>`<txPending>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initTxOrderCell(.KList)=>`<txOrder>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initTxNonceCell(.KList)=>`<txNonce>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initTxMaxFeeCell(.KList)=>`<txMaxFee>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initTxGasPriceCell(.KList)=>`<txGasPrice>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initTxGasLimitCell(.KList)=>`<txGasLimit>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initTxChainIDCell(.KList)=>`<txChainID>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initTxAccessCell(.KList)=>`<txAccess>`(#noDots(.KList),`JSONList`(`.List{"JSONs"}_JSONs`(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initTransactionsRootCell(.KList)=>`<transactionsRoot>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initTouchedAccountsCell(.KList)=>`<touchedAccounts>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initToCell(.KList)=>`<to>`(#noDots(.KList),`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initTimestampCell(.KList)=>`<timestamp>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initSubstateCell(.KList)=>`<substate>`(#noDots(.KList),#cells(initSelfDestructCell(.KList),initLogCell(.KList),initRefundCell(.KList),initAccessedAccountsCell(.KList),initAccessedStorageCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initStorageCell(.KList)=>`<storage>`(#noDots(.KList),`.Map`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initStatusCodeCell(.KList)=>`<statusCode>`(#noDots(.KList),`.StatusCode_NETWORK_StatusCode`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initStaticCell(.KList)=>`<static>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initStateRootCell(.KList)=>`<stateRoot>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initSigVCell(.KList)=>`<sigV>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initSigSCell(.KList)=>`<sigS>`(#noDots(.KList),`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initSigRCell(.KList)=>`<sigR>`(#noDots(.KList),`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initSelfDestructCell(.KList)=>`<selfDestruct>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initScheduleCell(Init)=>`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(`project:Schedule`(`Map:lookup`(Init,#token("$SCHEDULE","KConfigVar")))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initRefundCell(.KList)=>`<refund>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initReceiptsRootCell(.KList)=>`<receiptsRoot>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initProgramCell(.KList)=>`<program>`(#noDots(.KList),`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initPreviousHashCell(.KList)=>`<previousHash>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initPcCell(.KList)=>`<pc>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initOutputCell(.KList)=>`<output>`(#noDots(.KList),`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initOriginCell(.KList)=>`<origin>`(#noDots(.KList),`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initOrigStorageCell(.KList)=>`<origStorage>`(#noDots(.KList),`.Map`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initOmmersHashCell(.KList)=>`<ommersHash>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initOmmerBlockHeadersCell(.KList)=>`<ommerBlockHeaders>`(#noDots(.KList),`JSONList`(`.List{"JSONs"}_JSONs`(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initNumberCell(.KList)=>`<number>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initNonceCell(.KList)=>`<nonce>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initNetworkCell(Init)=>`<network>`(#noDots(.KList),#cells(initChainIDCell(Init),initAccountsCell(.KList),initTxOrderCell(.KList),initTxPendingCell(.KList),initMessagesCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initMsgIDCell(.KList)=>`<msgID>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initModeCell(Init)=>`<mode>`(#noDots(.KList),#SemanticCastToMode(`project:Mode`(`Map:lookup`(Init,#token("$MODE","KConfigVar")))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initMixHashCell(.KList)=>`<mixHash>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initMessagesCell(.KList)=>`<messages>`(#noDots(.KList),#cells(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initMessageCell(.KList)=>`<message>`(#noDots(.KList),#cells(initMsgIDCell(.KList),initTxNonceCell(.KList),initTxGasPriceCell(.KList),initTxGasLimitCell(.KList),initToCell(.KList),initValueCell(.KList),initSigVCell(.KList),initSigRCell(.KList),initSigSCell(.KList),initDataCell(.KList),initTxAccessCell(.KList),initTxChainIDCell(.KList),initTxPriorityFeeCell(.KList),initTxMaxFeeCell(.KList),initTxTypeCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initMemoryUsedCell(.KList)=>`<memoryUsed>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initLogsBloomCell(.KList)=>`<logsBloom>`(#noDots(.KList),`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initLogCell(.KList)=>`<log>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initLocalMemCell(.KList)=>`<localMem>`(#noDots(.KList),`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initKevmCell(Init)=>`<kevm>`(#noDots(.KList),#cells(initKCell(Init),initExitCodeCell(.KList),initModeCell(Init),initScheduleCell(Init),initEthereumCell(Init)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initKCell(Init)=>`<k>`(#noDots(.KList),#SemanticCastToEthereumSimulation(`project:EthereumSimulation`(`Map:lookup`(Init,#token("$PGM","KConfigVar")))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initJumpDestsCell(.KList)=>`<jumpDests>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initInterimStatesCell(.KList)=>`<interimStates>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initIdCell(.KList)=>`<id>`(#noDots(.KList),`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initGasUsedCell(.KList)=>`<gasUsed>`(#noDots(.KList),#SemanticCastToGas(#token("0","Int")),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initGasPriceCell(.KList)=>`<gasPrice>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initGasLimitCell(.KList)=>`<gasLimit>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initGasCell(.KList)=>`<gas>`(#noDots(.KList),#SemanticCastToGas(#token("0","Int")),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initExtraDataCell(.KList)=>`<extraData>`(#noDots(.KList),`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initExitCodeCell(.KList)=>`<exit-code>`(#noDots(.KList),#token("1","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initEvmCell(.KList)=>`<evm>`(#noDots(.KList),#cells(initOutputCell(.KList),initStatusCodeCell(.KList),initCallStackCell(.KList),initInterimStatesCell(.KList),initTouchedAccountsCell(.KList),initCallStateCell(.KList),initSubstateCell(.KList),initGasPriceCell(.KList),initOriginCell(.KList),initBlockhashesCell(.KList),initBlockCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initEthereumCell(Init)=>`<ethereum>`(#noDots(.KList),#cells(initEvmCell(.KList),initNetworkCell(Init)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initDifficultyCell(.KList)=>`<difficulty>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initDataCell(.KList)=>`<data>`(#noDots(.KList),`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initCoinbaseCell(.KList)=>`<coinbase>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initCodeCell(.KList)=>`<code>`(#noDots(.KList),#SemanticCastToAccountCode(`.Bytes_BYTES-HOOKED_Bytes`(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initChainIDCell(Init)=>`<chainID>`(#noDots(.KList),#SemanticCastToInt(`project:Int`(`Map:lookup`(Init,#token("$CHAINID","KConfigVar")))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initCallerCell(.KList)=>`<caller>`(#noDots(.KList),`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initCallValueCell(.KList)=>`<callValue>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initCallStateCell(.KList)=>`<callState>`(#noDots(.KList),#cells(initProgramCell(.KList),initJumpDestsCell(.KList),initIdCell(.KList),initCallerCell(.KList),initCallDataCell(.KList),initCallValueCell(.KList),initWordStackCell(.KList),initLocalMemCell(.KList),initPcCell(.KList),initGasCell(.KList),initMemoryUsedCell(.KList),initCallGasCell(.KList),initStaticCell(.KList),initCallDepthCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initCallStackCell(.KList)=>`<callStack>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initCallGasCell(.KList)=>`<callGas>`(#noDots(.KList),#SemanticCastToGas(#token("0","Int")),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initCallDepthCell(.KList)=>`<callDepth>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initCallDataCell(.KList)=>`<callData>`(#noDots(.KList),`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initBlockhashesCell(.KList)=>`<blockhashes>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initBlockNonceCell(.KList)=>`<blockNonce>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initBlockCell(.KList)=>`<block>`(#noDots(.KList),#cells(initPreviousHashCell(.KList),initOmmersHashCell(.KList),initCoinbaseCell(.KList),initStateRootCell(.KList),initTransactionsRootCell(.KList),initReceiptsRootCell(.KList),initLogsBloomCell(.KList),initDifficultyCell(.KList),initNumberCell(.KList),initGasLimitCell(.KList),initGasUsedCell(.KList),initTimestampCell(.KList),initExtraDataCell(.KList),initMixHashCell(.KList),initBlockNonceCell(.KList),initBaseFeeCell(.KList),initOmmerBlockHeadersCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initBaseFeeCell(.KList)=>`<baseFee>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initBalanceCell(.KList)=>`<balance>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initAcctIDCell(.KList)=>`<acctID>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initAccountsCell(.KList)=>`<accounts>`(#noDots(.KList),#cells(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initAccountCell(.KList)=>`<account>`(#noDots(.KList),#cells(initAcctIDCell(.KList),initBalanceCell(.KList),initCodeCell(.KList),initStorageCell(.KList),initOrigStorageCell(.KList),initNonceCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initAccessedStorageCell(.KList)=>`<accessedStorage>`(#noDots(.KList),`.Map`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initAccessedAccountsCell(.KList)=>`<accessedAccounts>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule getExitCode(`<generatedTop>`(#dots(.KList),`<exit-code>`(#noDots(.KList),Exit,#noDots(.KList)),#dots(.KList)))=>Exit requires #token("true","Bool") ensures #token("true","Bool") 
  rule `setBloomFilterBits(_)_EVM_Int_Bytes`(#SemanticCastToBytes(HASH))=>`_|Int_`(`_|Int_`(`_<<Int_`(#token("1","Int"),`getBloomFilterBit(_,_)_EVM_Int_Bytes_Int`(#SemanticCastToBytes(HASH),#token("0","Int"))),`_<<Int_`(#token("1","Int"),`getBloomFilterBit(_,_)_EVM_Int_Bytes_Int`(#SemanticCastToBytes(HASH),#token("2","Int")))),`_<<Int_`(#token("1","Int"),`getBloomFilterBit(_,_)_EVM_Int_Bytes_Int`(#SemanticCastToBytes(HASH),#token("4","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(703,10,703,158)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `listAsBytes(_)_EVM_List_List`(`_List_`(`ListItem`(#SemanticCastToInt(TOPIC)),#SemanticCastToList(L)))=>`_List_`(`ListItem`(`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("32","Int"),`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(TOPIC)))),`listAsBytes(_)_EVM_List_List`(#SemanticCastToList(L))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(689,10,689,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `listAsBytes(_)_EVM_List_List`(`.List`(.KList))=>`.List`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(688,10,688,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `isAddr2Op(_)_EVM_Bool_OpCode`(#SemanticCastToOpCode(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(499,10,499,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `isAddr2Op(_)_EVM_Bool_OpCode`(#SemanticCastToCallSixOp(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(498,10,498,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `isAddr2Op(_)_EVM_Bool_OpCode`(#SemanticCastToCallOp(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(497,10,497,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `isAddr1Op(_)_EVM_Bool_OpCode`(`SELFDESTRUCT_EVM_UnStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(491,10,491,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `isAddr1Op(_)_EVM_Bool_OpCode`(`EXTCODESIZE_EVM_UnStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(493,10,493,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `isAddr1Op(_)_EVM_Bool_OpCode`(`EXTCODEHASH_EVM_UnStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(492,10,492,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `isAddr1Op(_)_EVM_Bool_OpCode`(`EXTCODECOPY_EVM_QuadStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(494,10,494,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `isAddr1Op(_)_EVM_Bool_OpCode`(`BALANCE_EVM_UnStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(490,10,490,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `isAddr1Op(_)_EVM_Bool_OpCode`(#SemanticCastToOpCode(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(495,10,495,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `getBloomFilterBit(_,_)_EVM_Int_Bytes_Int`(#SemanticCastToBytes(X),#SemanticCastToInt(I))=>`_%Int_`(`#asInteger(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(X),#SemanticCastToInt(I),#token("2","Int"))),#token("2048","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(707,10,707,74)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `MessageCellMapKey`(`<message>`(#noDots(.KList),Key,#dots(.KList)))=>Key requires #token("true","Bool") ensures #token("true","Bool") 
  rule `M3:2048(_)_EVM_Int_Bytes`(#SemanticCastToBytes(WS))=>`setBloomFilterBits(_)_EVM_Int_Bytes`(`#parseByteStack(_)_SERIALIZATION_Bytes_String`(`Keccak256(_)_KRYPTO_String_String`(unparseByteStack(#SemanticCastToBytes(WS))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(699,10,699,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `AccountCellMapKey`(`<account>`(#noDots(.KList),Key,#dots(.KList)))=>Key requires #token("true","Bool") ensures #token("true","Bool") 
  rule `<k>`(#noDots(.KList),``.K=>`#newAccount__EVM_InternalOp_Int`(#SemanticCastToInt(ACCT))``~>`#finalizeStorage(_)_EVM_InternalOp_List`(`_List_`(`ListItem`(#SemanticCastToInt(ACCT)),#SemanticCastToList(_ACCTS))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(540,10,540,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `<k>`(#noDots(.KList),``.K=>`#checkPoint_EVM_InternalOp`(.KList)``~>`#ecpairing(_,_,_,_,_)_EVM_InternalOp_List_List_Int_Bytes_Int`(`_List_`(`.List`(.KList)=>`ListItem`(`(_,_)_KRYPTO_G1Point_Int_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#SemanticCastToInt(I),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),`_+Int_`(#SemanticCastToInt(I),#token("32","Int")),#token("32","Int"))))),#SemanticCastToList(_)),`_List_`(`.List`(.KList)=>`ListItem`(`(_x_,_x_)_KRYPTO_G2Point_Int_Int_Int_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),`_+Int_`(#SemanticCastToInt(I),#token("96","Int")),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),`_+Int_`(#SemanticCastToInt(I),#token("64","Int")),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),`_+Int_`(#SemanticCastToInt(I),#token("160","Int")),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),`_+Int_`(#SemanticCastToInt(I),#token("128","Int")),#token("32","Int"))))),#SemanticCastToList(_)),#SemanticCastToInt(I)=>`_+Int_`(#SemanticCastToInt(I),#token("192","Int")),#SemanticCastToBytes(DATA),#SemanticCastToInt(LEN)),#dots(.KList)) requires `_=/=Int_`(#SemanticCastToInt(I),#SemanticCastToInt(LEN)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1757,10,1758,28)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`` `#endBasicBlock_EVM_InternalOp`(.KList)=>.K``~>`#execute_EVM_KItem`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1038,10,1038,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`` `#checkPoint_EVM_InternalOp`(.KList)=>.K``~>`#ecpairing(_,_,_,_,_)_EVM_InternalOp_List_List_Int_Bytes_Int`(`_List_`(`ListItem`(#SemanticCastToG1Point(AK)),#SemanticCastToList(_)),`_List_`(`ListItem`(#SemanticCastToG2Point(BK)),#SemanticCastToList(_)),#SemanticCastToInt(_),#SemanticCastToBytes(_),#SemanticCastToInt(_)),#dots(.KList)) requires `_andBool_`(`isValidPoint(_)_KRYPTO_Bool_G1Point`(#SemanticCastToG1Point(AK)),`isValidPoint(_)_KRYPTO_Bool_G2Point`(#SemanticCastToG2Point(BK))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1764,10,1765,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`MULMOD_EVM_TernStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2))=>`_%Word__EVM-TYPES_Int_Int_Int`(`_*Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToInt(W2))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(903,10,903,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`ADDMOD_EVM_TernStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2))=>`_%Word__EVM-TYPES_Int_Int_Int`(`_+Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToInt(W2))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(902,10,902,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`XOR_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_xorWord__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(920,10,920,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`SUB_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_-Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(890,10,890,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`SMOD_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_%sWord__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(898,10,898,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`SLT_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_s<Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(930,10,930,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`SIGNEXTEND_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`signextend(_,_)_EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(908,10,908,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`SHR_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_>>Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W1),#SemanticCastToInt(W0))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(913,10,913,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`SHL_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_<<Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W1),#SemanticCastToInt(W0))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(912,10,912,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`SGT_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_s<Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W1),#SemanticCastToInt(W0))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(931,10,931,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`SDIV_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_/sWord__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(897,10,897,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`SAR_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_>>sWord__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W1),#SemanticCastToInt(W0))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(914,10,914,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`MUL_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_*Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(889,10,889,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`MOD_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_%Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(893,10,893,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`LT_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_<Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(924,10,924,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`JUMPI_EVM_BinStackOp`(.KList),#SemanticCastToInt(_DEST),#SemanticCastToInt(I))=>.K,#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(I),#token("0","Int")) ensures #token("true","Bool") [label(EVM.jumpi.false), org.kframework.attributes.Location(Location(1032,25,1032,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`JUMPI_EVM_BinStackOp`(.KList),#SemanticCastToInt(DEST),#SemanticCastToInt(I))=>`___EVM_InternalOp_UnStackOp_Int`(`JUMP_EVM_UnStackOp`(.KList),#SemanticCastToInt(DEST)),#dots(.KList)) requires `_=/=Int_`(#SemanticCastToInt(I),#token("0","Int")) ensures #token("true","Bool") [label(EVM.jumpi.true), org.kframework.attributes.Location(Location(1033,25,1033,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`GT_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_>Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(925,10,925,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`EXP_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_^Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(892,10,892,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`EVMOR_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_|Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(919,10,919,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`EQ_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_==Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(926,10,926,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`DIV_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_/Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(891,10,891,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`BYTE_EVM_BinStackOp`(.KList),#SemanticCastToInt(INDEX),#SemanticCastToInt(W))=>`byte(_,_)_EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(INDEX),#SemanticCastToInt(W))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(907,10,907,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`AND_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_&Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(918,10,918,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`ADD_EVM_BinStackOp`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_+Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(888,10,888,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`POP_EVM_UnStackOp`(.KList),#SemanticCastToInt(_))=>.K,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(841,10,841,33)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`NOT_EVM_UnStackOp`(.KList),#SemanticCastToInt(W))=>`~Word__EVM-TYPES_Int_Int`(#SemanticCastToInt(W))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(884,10,884,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`ISZERO_EVM_UnStackOp`(.KList),#SemanticCastToInt(W))=>`_==Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W),#token("0","Int"))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(883,10,883,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`EXTCODESIZE_EVM_UnStackOp`(.KList),#SemanticCastToInt(_))=>#token("0","Int")~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1148,10,1148,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`EXTCODEHASH_EVM_UnStackOp`(.KList),#SemanticCastToInt(_))=>#token("0","Int")~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1162,10,1162,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`BALANCE_EVM_UnStackOp`(.KList),#SemanticCastToInt(_))=>#token("0","Int")~>`#push_EVM_InternalOp`(.KList),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1137,10,1137,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `<k>`(#noDots(.KList),`___EVM_InternalOp_StackOp_WordStack`(`SWAP(_)_EVM_StackOp_Int`(#SemanticCastToInt(N)),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),#SemanticCastToWordStack(WS)))=>`#setStack__EVM_InternalOp_WordStack`(`_:__EVM-TYPES_WordStack_Int_WordStack`(`_[_]_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(WS),`_-Int_`(#SemanticCastToInt(N),#token("1","Int"))),`_[_:=_]_EVM-TYPES_WordStack_WordStack_Int_Int`(#SemanticCastToWordStack(WS),`_-Int_`(#SemanticCastToInt(N),#token("1","Int")),#SemanticCastToInt(W0)))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(846,10,846,102)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`___EVM_InternalOp_StackOp_WordStack`(`DUP(_)_EVM_StackOp_Int`(#SemanticCastToInt(N)),#SemanticCastToWordStack(WS))=>`#setStack__EVM_InternalOp_WordStack`(`_:__EVM-TYPES_WordStack_Int_WordStack`(`_[_]_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(WS),`_-Int_`(#SemanticCastToInt(N),#token("1","Int"))),#SemanticCastToWordStack(WS))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(845,10,845,102)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`UNDEFINED(_)_EVM_InvalidOp_Int`(#SemanticCastToInt(_))=>`#end__EVM_KItem_StatusCode`(`EVMC_UNDEFINED_INSTRUCTION_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(831,10,831,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`JUMPDEST_EVM_NullStackOp`(.KList)=>.K,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1017,10,1017,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`INVALID_EVM_InvalidOp`(.KList)=>`#end__EVM_KItem_StatusCode`(`EVMC_INVALID_INSTRUCTION_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(830,10,830,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`Cselfdestruct(_,_,_)_EVM_Exp_Schedule_BExp_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(BAL))=>`_+Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gselfdestruct_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`Cnew(_,_,_)_GAS-FEES_Int_Schedule_Bool_Int`(#SemanticCastToSchedule(SCHED),`_andBool_`(#SemanticCastToBool(ISEMPTY),`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gselfdestructnewaccount_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))),#SemanticCastToInt(BAL))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2155,10,2156,121)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`Ccallgas(_,_,_,_,_,_)_EVM_Exp_Schedule_BExp_Gas_Gas_Int_Bool`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToGas(GCAP),#SemanticCastToGas(GAVAIL),#SemanticCastToInt(VALUE),#SemanticCastToBool(ISWARM))=>`_+Gas__GAS-SYNTAX_Gas_Gas_Gas`(`Cgascap(_,_,_,_)_GAS-FEES_Gas_Schedule_Gas_Gas_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToGas(GCAP),#SemanticCastToGas(GAVAIL),`Cextra(_,_,_,_)_GAS-FEES_Int_Schedule_Bool_Int_Bool`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(VALUE),#SemanticCastToBool(ISWARM))),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_==Int_`(#SemanticCastToInt(VALUE),#token("0","Int")),#token("0","Int"),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcallstipend_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2152,10,2153,154)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`Ccall(_,_,_,_,_,_)_EVM_Exp_Schedule_BExp_Gas_Gas_Int_Bool`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToGas(GCAP),#SemanticCastToGas(GAVAIL),#SemanticCastToInt(VALUE),#SemanticCastToBool(ISWARM))=>`_+Gas__GAS-SYNTAX_Gas_Gas_Gas`(`Cextra(_,_,_,_)_GAS-FEES_Int_Schedule_Bool_Int_Bool`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(VALUE),#SemanticCastToBool(ISWARM)),`Cgascap(_,_,_,_)_GAS-FEES_Gas_Schedule_Gas_Gas_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToGas(GCAP),#SemanticCastToGas(GAVAIL),`Cextra(_,_,_,_)_GAS-FEES_Int_Schedule_Bool_Int_Bool`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(VALUE),#SemanticCastToBool(ISWARM)))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2149,10,2150,133)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#transferFunds____EVM_InternalOp_Int_Int_Int`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE))=>`#transferFundsToNonExistent____EVM_InternalOp_Int_Int_Int`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(810,10,810,112)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `<k>`(#noDots(.KList),`#touchAccounts___EVM_KItem_Account_Account`(#SemanticCastToAccount(ADDR1),#SemanticCastToAccount(ADDR2))=>`#touchAccounts__EVM_KItem_Account`(#SemanticCastToAccount(ADDR1))~>`#touchAccounts__EVM_KItem_Account`(#SemanticCastToAccount(ADDR2)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1310,10,1310,97)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#rewardOmmers(_)_EVM_EthereumCommand_JSONs`(`.List{"JSONs"}_JSONs`(.KList))=>.K,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(662,10,662,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#precompiled?(_,_)_EVM_InternalOp_Int_Schedule`(#SemanticCastToInt(ACCTCODE),#SemanticCastToSchedule(SCHED))=>`#next[_]_EVM_InternalOp_MaybeOpCode`(`#precompiled(_)_EVM_PrecompiledOp_Int`(#SemanticCastToInt(ACCTCODE))),#dots(.KList)) requires `#isPrecompiledAccount(_,_)_EVM_Bool_Int_Schedule`(#SemanticCastToInt(ACCTCODE),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1284,10,1284,145)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), preserves-definedness]
  rule `<k>`(#noDots(.KList),`#precompiled?(_,_)_EVM_InternalOp_Int_Schedule`(#SemanticCastToInt(ACCTCODE),#SemanticCastToSchedule(SCHED))=>.K,#dots(.KList)) requires `notBool_`(`#isPrecompiledAccount(_,_)_EVM_Bool_Int_Schedule`(#SemanticCastToInt(ACCTCODE),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1286,10,1286,145)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#newAccount__EVM_InternalOp_Int`(#SemanticCastToInt(ACCT))=>`#newFreshAccount__EVM_InternalOp_Int`(#SemanticCastToInt(ACCT)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(741,10,741,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `<k>`(#noDots(.KList),`#memory[_,_]_EVM_InternalOp_OpCode_OpCode`(#SemanticCastToOpCode(_),#SemanticCastToOpCode(_))=>.K,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1815,9,1815,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `<k>`(#noDots(.KList),`#halt_EVM_KItem`(.KList)~>``#SemanticCastToOpCode(_)=>.K``,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(267,10,267,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#halt_EVM_KItem`(.KList)~>``#SemanticCastToInt(_)=>.K``,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(266,10,266,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#halt_EVM_KItem`(.KList)~>`` `#execute_EVM_KItem`(.KList)=>.K``,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM.halt), org.kframework.attributes.Location(Location(293,10,293,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gas[_,_]_EVM_InternalOp_OpCode_OpCode`(#SemanticCastToOpCode(OP),#SemanticCastToOpCode(AOP))=>`#memory[_,_]_EVM_InternalOp_OpCode_OpCode`(#SemanticCastToOpCode(OP),#SemanticCastToOpCode(AOP))~>`#gas[_]_EVM_InternalOp_OpCode`(#SemanticCastToOpCode(AOP))~>`#access[_,_]_EVM_InternalOp_OpCode_OpCode`(#SemanticCastToOpCode(OP),#SemanticCastToOpCode(AOP)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1801,10,1806,13)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(_),`ECREC_EVM_PrecompiledOp`(.KList))=>#token("3000","Int"),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2113,10,2113,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`______EVM_InternalOp_QuadStackOp_Int_Int_Int_Int`(`EXTCODECOPY_EVM_QuadStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(WIDTH)))=>`Cextcodecopy(_,_)_GAS-FEES_Int_Schedule_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(WIDTH)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2106,10,2106,93)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`______EVM_InternalOp_QuadStackOp_Int_Int_Int_Int`(`CREATE2_EVM_QuadStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(WIDTH),#SemanticCastToInt(_)))=>`_+Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcreate_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsha3word_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(WIDTH),#token("32","Int"))))~>`#deductGas_EVM_InternalOp`(.KList)~>`#allocateCreateGas_EVM_InternalOp`(.KList)~>#token("0","Int"),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2024,10,2028,14)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`RETURNDATACOPY_EVM_TernStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(WIDTH)))=>`_+Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcopy_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(WIDTH),#token("32","Int")))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1969,10,1969,133)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`MULMOD_EVM_TernStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gmid_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2100,10,2100,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`CREATE_EVM_TernStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcreate_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))~>`#deductGas_EVM_InternalOp`(.KList)~>`#allocateCreateGas_EVM_InternalOp`(.KList)~>#token("0","Int"),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2018,10,2022,14)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`CODECOPY_EVM_TernStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(WIDTH)))=>`_+Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcopy_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(WIDTH),#token("32","Int")))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1970,10,1970,133)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`CALLDATACOPY_EVM_TernStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(WIDTH)))=>`_+Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcopy_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(WIDTH),#token("32","Int")))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1968,10,1968,133)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`ADDMOD_EVM_TernStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gmid_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2099,10,2099,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`XOR_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2076,10,2076,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`SUB_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2066,10,2066,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`SMOD_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Glow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2094,10,2094,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`SLT_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2070,10,2070,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`SIGNEXTEND_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Glow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2095,10,2095,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`SHR_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2079,10,2079,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`SHL_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2078,10,2078,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`SHA3_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(WIDTH)))=>`_+Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsha3_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsha3word_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(WIDTH),#token("32","Int")))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2030,10,2030,121)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`SGT_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2071,10,2071,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`SDIV_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Glow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2092,10,2092,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`SAR_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2080,10,2080,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`REVERT_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gzero_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2040,10,2040,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`RETURN_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gzero_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2039,10,2039,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`MUL_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Glow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2090,10,2090,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`MSTORE_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2083,10,2083,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`MSTORE8_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2084,10,2084,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`MOD_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Glow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2093,10,2093,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`LT_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2068,10,2068,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`LOG(_)_EVM_LogOp_Int`(#SemanticCastToInt(N)),#SemanticCastToInt(_),#SemanticCastToInt(WIDTH)))=>`_+Int_`(`_+Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Glog_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Glogdata_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(WIDTH))),`_*Int_`(#SemanticCastToInt(N),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Glogtopic_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1972,10,1972,145)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`JUMPI_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Ghigh_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2104,10,2104,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`GT_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2069,10,2069,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`EXP_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#token("0","Int")))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gexp_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1965,10,1965,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`EXP_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(W1)))=>`_+Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gexp_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gexpbyte_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_+Int_`(#token("1","Int"),`log256Int(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W1))))),#dots(.KList)) requires `_=/=Int_`(#SemanticCastToInt(W1),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1966,10,1966,143)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`EVMOR_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2075,10,2075,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`EQ_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2072,10,2072,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`DIV_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Glow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2091,10,2091,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`BYTE_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2077,10,2077,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`AND_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2074,10,2074,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`ADD_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2065,10,2065,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`POP_EVM_UnStackOp`(.KList),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2058,10,2058,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`NOT_EVM_UnStackOp`(.KList),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2067,10,2067,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`MLOAD_EVM_UnStackOp`(.KList),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2082,10,2082,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`JUMP_EVM_UnStackOp`(.KList),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gmid_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2101,10,2101,64)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`ISZERO_EVM_UnStackOp`(.KList),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2073,10,2073,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`EXTCODESIZE_EVM_UnStackOp`(.KList),#SemanticCastToInt(_)))=>`Cextcodesize(_)_GAS-FEES_Int_Schedule`(#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2107,10,2107,93)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`EXTCODEHASH_EVM_UnStackOp`(.KList),#SemanticCastToInt(_)))=>`Cextcodehash(_)_GAS-FEES_Int_Schedule`(#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2109,10,2109,93)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`CALLDATALOAD_EVM_UnStackOp`(.KList),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2081,10,2081,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`BLOCKHASH_EVM_UnStackOp`(.KList),#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gblockhash_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2110,10,2110,93)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`BALANCE_EVM_UnStackOp`(.KList),#SemanticCastToInt(_)))=>`Cbalance(_)_GAS-FEES_Int_Schedule`(#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2108,10,2108,93)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_StackOp_WordStack`(`SWAP(_)_EVM_StackOp_Int`(#SemanticCastToInt(_)),#SemanticCastToWordStack(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2087,10,2087,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_StackOp_WordStack`(`DUP(_)_EVM_StackOp_Int`(#SemanticCastToInt(_)),#SemanticCastToWordStack(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2086,10,2086,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`TIMESTAMP_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2052,10,2052,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`STOP_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gzero_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2038,10,2038,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`SELFBALANCE_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Glow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2096,10,2096,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`RETURNDATASIZE_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2048,10,2048,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`PUSH(_)_EVM_PushOp_Int`(#SemanticCastToInt(_)))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2085,10,2085,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`PREVRANDAO_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2055,10,2055,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`PC_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2059,10,2059,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`ORIGIN_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2044,10,2044,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`NUMBER_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2053,10,2053,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`MSIZE_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2060,10,2060,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`JUMPDEST_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gjumpdest_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2032,10,2032,97)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`GAS_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2061,10,2061,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`GASPRICE_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2050,10,2050,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`GASLIMIT_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2056,10,2056,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`ECMUL_EVM_PrecompiledOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gecmul_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2122,10,2122,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`ECADD_EVM_PrecompiledOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gecadd_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2121,10,2121,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`DIFFICULTY_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2054,10,2054,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`COINBASE_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2051,10,2051,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`CODESIZE_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2049,10,2049,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`CHAINID_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2062,10,2062,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`CALLVALUE_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2046,10,2046,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`CALLER_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2045,10,2045,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`CALLDATASIZE_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2047,10,2047,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`BASEFEE_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2057,10,2057,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`ADDRESS_EVM_NullStackOp`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2043,10,2043,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasAccess(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(_),`_________EVM_InternalOp_CallOp_Int_Int_Int_Int_Int_Int_Int`(`CALL_EVM_CallOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(ACCT),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`#accessAccounts__EVM_KItem_Account`(#SemanticCastToInt(ACCT))~>#token("0","Int"),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1927,10,1927,172)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasAccess(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(_),`_________EVM_InternalOp_CallOp_Int_Int_Int_Int_Int_Int_Int`(`CALLCODE_EVM_CallOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(ACCT),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`#accessAccounts__EVM_KItem_Account`(#SemanticCastToInt(ACCT))~>#token("0","Int"),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1928,10,1928,172)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasAccess(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(_),`________EVM_InternalOp_CallSixOp_Int_Int_Int_Int_Int_Int`(`STATICCALL_EVM_CallSixOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(ACCT),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`#accessAccounts__EVM_KItem_Account`(#SemanticCastToInt(ACCT))~>#token("0","Int"),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1930,10,1930,172)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasAccess(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(_),`________EVM_InternalOp_CallSixOp_Int_Int_Int_Int_Int_Int`(`DELEGATECALL_EVM_CallSixOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(ACCT),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`#accessAccounts__EVM_KItem_Account`(#SemanticCastToInt(ACCT))~>#token("0","Int"),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1929,10,1929,172)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#gasAccess(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(_),#SemanticCastToOpCode(_))=>#token("0","Int"),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1933,10,1933,171)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `<k>`(#noDots(.KList),`#finalizeStorage(_)_EVM_InternalOp_List`(`.List`(.KList))=>.K,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(538,10,538,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#exec[_]_EVM_InternalOp_OpCode`(#SemanticCastToOpCode(OP))=>`#gas[_,_]_EVM_InternalOp_OpCode_OpCode`(#SemanticCastToOpCode(OP),#SemanticCastToOpCode(OP))~>#SemanticCastToOpCode(OP),#dots(.KList)) requires `_orBool_`(isNullStackOp(#SemanticCastToOpCode(OP)),isPushOp(#SemanticCastToOpCode(OP))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(428,10,428,108)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#exec[_]_EVM_InternalOp_OpCode`(#SemanticCastToInvalidOp(IOP))=>#SemanticCastToInvalidOp(IOP),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(426,10,426,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#endBasicBlock_EVM_InternalOp`(.KList)~>``#SemanticCastToOpCode(_)=>.K``,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1037,10,1037,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#ecmul(_,_)_EVM_InternalOp_G1Point_Int`(#SemanticCastToG1Point(P),#SemanticCastToInt(_S))=>`#end__EVM_KItem_StatusCode`(`EVMC_PRECOMPILE_FAILURE_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)) requires `notBool_`(`isValidPoint(_)_KRYPTO_Bool_G1Point`(#SemanticCastToG1Point(P))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1737,10,1738,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#ecadd(_,_)_EVM_InternalOp_G1Point_G1Point`(#SemanticCastToG1Point(P1),#SemanticCastToG1Point(P2))=>`#end__EVM_KItem_StatusCode`(`EVMC_PRECOMPILE_FAILURE_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)) requires `_orBool_`(`notBool_`(`isValidPoint(_)_KRYPTO_Bool_G1Point`(#SemanticCastToG1Point(P1))),`notBool_`(`isValidPoint(_)_KRYPTO_Bool_G1Point`(#SemanticCastToG1Point(P2)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1725,10,1726,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#deleteAccounts(_)_EVM_InternalOp_List`(`.List`(.KList))=>.K,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(628,10,628,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#create_____EVM_InternalOp_Int_Int_Int_Bytes`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE),#SemanticCastToBytes(INITCODE))=>`#incrementNonce__EVM_InternalOp_Int`(#SemanticCastToInt(ACCTFROM))~>`#pushCallStack_EVM_InternalOp`(.KList)~>`#pushWorldState_EVM_InternalOp`(.KList)~>`#newAccount__EVM_InternalOp_Int`(#SemanticCastToInt(ACCTTO))~>`#transferFunds____EVM_InternalOp_Int_Int_Int`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE))~>`#mkCreate_____EVM_InternalOp_Int_Int_Int_Bytes`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE),#SemanticCastToBytes(INITCODE)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1467,10,1474,14)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#checkPoint_EVM_InternalOp`(.KList)~>`#ecpairing(_,_,_,_,_)_EVM_InternalOp_List_List_Int_Bytes_Int`(`_List_`(`ListItem`(#SemanticCastToG1Point(AK)),#SemanticCastToList(_)),`_List_`(`ListItem`(#SemanticCastToG2Point(BK)),#SemanticCastToList(_)),#SemanticCastToInt(_),#SemanticCastToBytes(_),#SemanticCastToInt(_))=>`#end__EVM_KItem_StatusCode`(`EVMC_PRECOMPILE_FAILURE_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)) requires `_orBool_`(`notBool_`(`isValidPoint(_)_KRYPTO_Bool_G1Point`(#SemanticCastToG1Point(AK))),`notBool_`(`isValidPoint(_)_KRYPTO_Bool_G2Point`(#SemanticCastToG2Point(BK)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1766,10,1767,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call________EVM_InternalOp_Int_Int_Int_Int_Int_Bytes_Bool`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(ACCTCODE),#SemanticCastToInt(VALUE),#SemanticCastToInt(APPVALUE),#SemanticCastToBytes(ARGS),#SemanticCastToBool(STATIC))=>`#callWithCode_________EVM_InternalOp_Int_Int_Int_Bytes_Int_Int_Bytes_Bool`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(ACCTCODE),`.Bytes_BYTES-HOOKED_Bytes`(.KList),#SemanticCastToInt(VALUE),#SemanticCastToInt(APPVALUE),#SemanticCastToBytes(ARGS),#SemanticCastToBool(STATIC)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1256,10,1259,14)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `<k>`(#noDots(.KList),`#callWithCode_________EVM_InternalOp_Int_Int_Int_Bytes_Int_Int_Bytes_Bool`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(ACCTCODE),#SemanticCastToBytes(BYTES),#SemanticCastToInt(VALUE),#SemanticCastToInt(APPVALUE),#SemanticCastToBytes(ARGS),#SemanticCastToBool(STATIC))=>`#pushCallStack_EVM_InternalOp`(.KList)~>`#pushWorldState_EVM_InternalOp`(.KList)~>`#transferFunds____EVM_InternalOp_Int_Int_Int`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE))~>`#mkCall________EVM_InternalOp_Int_Int_Int_Bytes_Int_Bytes_Bool`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(ACCTCODE),#SemanticCastToBytes(BYTES),#SemanticCastToInt(APPVALUE),#SemanticCastToBytes(ARGS),#SemanticCastToBool(STATIC)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM.callWithCode), org.kframework.attributes.Location(Location(1261,26,1266,14)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#addr[_]_EVM_InternalOp_OpCode`(#SemanticCastToOpCode(OP))=>.K,#dots(.KList)) requires `notBool_`(`_orBool_`(`isAddr1Op(_)_EVM_Bool_OpCode`(#SemanticCastToOpCode(OP)),`isAddr2Op(_)_EVM_Bool_OpCode`(#SemanticCastToOpCode(OP)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(484,10,485,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#accountNonexistent(_)_EVM_BExp_Int`(#SemanticCastToInt(_))=>#token("true","Bool"),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2172,9,2172,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `<k>`(#noDots(.KList),`#accessAccounts____EVM_KItem_Account_Account_Set`(#SemanticCastToAccount(ADDR1),#SemanticCastToAccount(ADDR2),#SemanticCastToSet(ADDRSET))=>`#accessAccounts__EVM_KItem_Account`(#SemanticCastToAccount(ADDR1))~>`#accessAccounts__EVM_KItem_Account`(#SemanticCastToAccount(ADDR2))~>`#accessAccounts__EVM_KItem_Set`(#SemanticCastToSet(ADDRSET)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1328,10,1328,155)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`#accessAccounts___EVM_KItem_Account_Account`(#SemanticCastToAccount(ADDR1),#SemanticCastToAccount(ADDR2))=>`#accessAccounts__EVM_KItem_Account`(#SemanticCastToAccount(ADDR1))~>`#accessAccounts__EVM_KItem_Account`(#SemanticCastToAccount(ADDR2)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1330,10,1330,116)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),#SemanticCastToGas(_G)~>`` `#deductMemoryGas_EVM_InternalOp`(.KList)=>`#deductGas_EVM_InternalOp`(.KList)``,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1823,10,1823,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#widthOpCode(_)_EVM_Int_Int`(#SemanticCastToInt(_))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1356,10,1356,30)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#widthOpCode(_)_EVM_Int_Int`(#SemanticCastToInt(W))=>`_-Int_`(#SemanticCastToInt(W),#token("94","Int")) requires `_andBool_`(`_>=Int_`(#SemanticCastToInt(W),#token("96","Int")),`_<=Int_`(#SemanticCastToInt(W),#token("127","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1355,10,1355,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#widthOp(_)_EVM_Int_OpCode`(`PUSH(_)_EVM_PushOp_Int`(#SemanticCastToInt(N)))=>`_+Int_`(#token("1","Int"),#SemanticCastToInt(N)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(517,10,517,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#widthOp(_)_EVM_Int_OpCode`(#SemanticCastToOpCode(_))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(518,10,518,32)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(`SHA3_EVM_BinStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1883,10,1883,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(`REVERT_EVM_BinStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1891,10,1891,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(`RETURN_EVM_BinStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1890,10,1890,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(`RETURNDATACOPY_EVM_TernStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1887,10,1887,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(`MSTORE_EVM_BinStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1881,10,1881,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(`MSTORE8_EVM_BinStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1882,10,1882,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(`MLOAD_EVM_UnStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1880,10,1880,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(`EXTCODECOPY_EVM_QuadStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1885,10,1885,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(`CREATE_EVM_TernStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1888,10,1888,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(`CREATE2_EVM_QuadStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1889,10,1889,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(`CODECOPY_EVM_TernStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1884,10,1884,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(`CALLDATACOPY_EVM_TernStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1886,10,1886,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(#SemanticCastToOpCode(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1892,10,1892,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(#SemanticCastToLogOp(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1877,10,1877,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(#SemanticCastToCallSixOp(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1879,10,1879,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesMemory(_)_EVM_Bool_OpCode`(#SemanticCastToCallOp(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1878,10,1878,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesAccessList(_)_EVM_Bool_OpCode`(`SSTORE_EVM_BinStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1909,10,1909,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesAccessList(_)_EVM_Bool_OpCode`(`SLOAD_EVM_UnStackOp`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1908,10,1908,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#usesAccessList(_)_EVM_Bool_OpCode`(#SemanticCastToOpCode(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1910,10,1910,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#usesAccessList(_)_EVM_Bool_OpCode`(#SemanticCastToOpCode(OP))=>#token("true","Bool") requires `isAddr2Op(_)_EVM_Bool_OpCode`(#SemanticCastToOpCode(OP)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1907,10,1907,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#usesAccessList(_)_EVM_Bool_OpCode`(#SemanticCastToOpCode(OP))=>#token("true","Bool") requires `isAddr1Op(_)_EVM_Bool_OpCode`(#SemanticCastToOpCode(OP)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1906,10,1906,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#stackUnderflow(_,_)_EVM_Bool_WordStack_OpCode`(#SemanticCastToWordStack(WS),#SemanticCastToOpCode(OP))=>`_<Int_`(`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(#SemanticCastToWordStack(WS)),`#stackNeeded(_)_EVM_Int_OpCode`(#SemanticCastToOpCode(OP))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(355,10,355,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackOverflow(_,_)_EVM_Bool_WordStack_OpCode`(#SemanticCastToWordStack(WS),#SemanticCastToOpCode(OP))=>`_>Int_`(`_+Int_`(`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(#SemanticCastToWordStack(WS)),`#stackDelta(_)_EVM_Int_OpCode`(#SemanticCastToOpCode(OP))),#token("1024","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(356,10,356,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackNeeded(_)_EVM_Int_OpCode`(`SWAP(_)_EVM_StackOp_Int`(#SemanticCastToInt(N)))=>`_+Int_`(#SemanticCastToInt(N),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(368,10,368,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackNeeded(_)_EVM_Int_OpCode`(`PUSH(_)_EVM_PushOp_Int`(#SemanticCastToInt(_)))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(360,10,360,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackNeeded(_)_EVM_Int_OpCode`(`LOG(_)_EVM_LogOp_Int`(#SemanticCastToInt(N)))=>`_+Int_`(#SemanticCastToInt(N),#token("2","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(369,10,369,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackNeeded(_)_EVM_Int_OpCode`(`DUP(_)_EVM_StackOp_Int`(#SemanticCastToInt(N)))=>#SemanticCastToInt(N) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(367,10,367,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackNeeded(_)_EVM_Int_OpCode`(#SemanticCastToUnStackOp(_UOP))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(363,10,363,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackNeeded(_)_EVM_Int_OpCode`(#SemanticCastToTernStackOp(_TOP))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(365,10,365,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackNeeded(_)_EVM_Int_OpCode`(#SemanticCastToQuadStackOp(_QOP))=>#token("4","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(366,10,366,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackNeeded(_)_EVM_Int_OpCode`(#SemanticCastToNullStackOp(_NOP))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(362,10,362,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackNeeded(_)_EVM_Int_OpCode`(#SemanticCastToInvalidOp(_IOP))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(361,10,361,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackNeeded(_)_EVM_Int_OpCode`(#SemanticCastToCallSixOp(_CSOP))=>#token("6","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(370,10,370,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackNeeded(_)_EVM_Int_OpCode`(#SemanticCastToCallOp(COP))=>#token("7","Int") requires `notBool_`(isCallSixOp(#SemanticCastToCallOp(COP))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(371,10,371,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#stackNeeded(_)_EVM_Int_OpCode`(#SemanticCastToBinStackOp(BOP))=>#token("2","Int") requires `notBool_`(isLogOp(#SemanticCastToBinStackOp(BOP))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(364,10,364,75)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#stackDelta(_)_EVM_Int_OpCode`(#SemanticCastToOpCode(OP))=>`_-Int_`(`#stackAdded(_)_EVM_Int_OpCode`(#SemanticCastToOpCode(OP)),`#stackNeeded(_)_EVM_Int_OpCode`(#SemanticCastToOpCode(OP))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(399,10,399,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`SWAP(_)_EVM_StackOp_Int`(#SemanticCastToInt(N)))=>`_+Int_`(#SemanticCastToInt(N),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(392,10,392,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`STOP_EVM_NullStackOp`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(386,10,386,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`SSTORE_EVM_BinStackOp`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(382,10,382,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`SELFDESTRUCT_EVM_UnStackOp`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(389,10,389,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`REVERT_EVM_BinStackOp`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(388,10,388,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`RETURN_EVM_BinStackOp`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(387,10,387,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`RETURNDATACOPY_EVM_TernStackOp`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(376,10,376,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`PUSH(_)_EVM_PushOp_Int`(#SemanticCastToInt(_)))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(390,10,390,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`POP_EVM_UnStackOp`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(379,10,379,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`MSTORE_EVM_BinStackOp`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(380,10,380,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`MSTORE8_EVM_BinStackOp`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(381,10,381,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`LOG(_)_EVM_LogOp_Int`(#SemanticCastToInt(_)))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(391,10,391,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`JUMP_EVM_UnStackOp`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(383,10,383,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`JUMPI_EVM_BinStackOp`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(384,10,384,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`JUMPDEST_EVM_NullStackOp`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(385,10,385,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`EXTCODECOPY_EVM_QuadStackOp`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(378,10,378,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`DUP(_)_EVM_StackOp_Int`(#SemanticCastToInt(N)))=>`_+Int_`(#SemanticCastToInt(N),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(393,10,393,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`CODECOPY_EVM_TernStackOp`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(377,10,377,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(`CALLDATACOPY_EVM_TernStackOp`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(375,10,375,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stackAdded(_)_EVM_Int_OpCode`(#SemanticCastToOpCode(_OP))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(395,10,395,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#stackAdded(_)_EVM_Int_OpCode`(#SemanticCastToInvalidOp(_IOP))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(394,10,394,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiledAccounts(_)_EVM_Set_Schedule`(`TANGERINE_WHISTLE_EVM`(.KList))=>`#precompiledAccounts(_)_EVM_Set_Schedule`(`HOMESTEAD_EVM`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1652,10,1652,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiledAccounts(_)_EVM_Set_Schedule`(`SPURIOUS_DRAGON_EVM`(.KList))=>`#precompiledAccounts(_)_EVM_Set_Schedule`(`TANGERINE_WHISTLE_EVM`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1653,10,1653,92)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiledAccounts(_)_EVM_Set_Schedule`(`PETERSBURG_EVM`(.KList))=>`#precompiledAccounts(_)_EVM_Set_Schedule`(`CONSTANTINOPLE_EVM`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1656,10,1656,89)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiledAccounts(_)_EVM_Set_Schedule`(`MERGE_EVM`(.KList))=>`#precompiledAccounts(_)_EVM_Set_Schedule`(`LONDON_EVM`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1660,10,1660,81)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiledAccounts(_)_EVM_Set_Schedule`(`LONDON_EVM`(.KList))=>`#precompiledAccounts(_)_EVM_Set_Schedule`(`BERLIN_EVM`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1659,10,1659,81)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiledAccounts(_)_EVM_Set_Schedule`(`ISTANBUL_EVM`(.KList))=>`_Set_`(`#precompiledAccounts(_)_EVM_Set_Schedule`(`PETERSBURG_EVM`(.KList)),`SetItem`(#token("9","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1657,10,1657,96)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiledAccounts(_)_EVM_Set_Schedule`(`HOMESTEAD_EVM`(.KList))=>`#precompiledAccounts(_)_EVM_Set_Schedule`(`FRONTIER_EVM`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1651,10,1651,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiledAccounts(_)_EVM_Set_Schedule`(`FRONTIER_EVM`(.KList))=>`#precompiledAccounts(_)_EVM_Set_Schedule`(`DEFAULT_EVM`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1650,10,1650,82)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiledAccounts(_)_EVM_Set_Schedule`(`DEFAULT_EVM`(.KList))=>`_Set_`(`_Set_`(`_Set_`(`SetItem`(#token("1","Int")),`SetItem`(#token("2","Int"))),`SetItem`(#token("3","Int"))),`SetItem`(#token("4","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1649,10,1649,96)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiledAccounts(_)_EVM_Set_Schedule`(`CONSTANTINOPLE_EVM`(.KList))=>`#precompiledAccounts(_)_EVM_Set_Schedule`(`BYZANTIUM_EVM`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1655,10,1655,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiledAccounts(_)_EVM_Set_Schedule`(`BYZANTIUM_EVM`(.KList))=>`_Set_`(`_Set_`(`_Set_`(`_Set_`(`#precompiledAccounts(_)_EVM_Set_Schedule`(`SPURIOUS_DRAGON_EVM`(.KList)),`SetItem`(#token("5","Int"))),`SetItem`(#token("6","Int"))),`SetItem`(#token("7","Int"))),`SetItem`(#token("8","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1654,10,1654,134)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiledAccounts(_)_EVM_Set_Schedule`(`BERLIN_EVM`(.KList))=>`#precompiledAccounts(_)_EVM_Set_Schedule`(`ISTANBUL_EVM`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1658,10,1658,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiled(_)_EVM_PrecompiledOp_Int`(#token("9","Int"))=>`BLAKE2F_EVM_PrecompiledOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1645,10,1645,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiled(_)_EVM_PrecompiledOp_Int`(#token("8","Int"))=>`ECPAIRING_EVM_PrecompiledOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1644,10,1644,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiled(_)_EVM_PrecompiledOp_Int`(#token("7","Int"))=>`ECMUL_EVM_PrecompiledOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1643,10,1643,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiled(_)_EVM_PrecompiledOp_Int`(#token("6","Int"))=>`ECADD_EVM_PrecompiledOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1642,10,1642,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiled(_)_EVM_PrecompiledOp_Int`(#token("5","Int"))=>`MODEXP_EVM_PrecompiledOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1641,10,1641,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiled(_)_EVM_PrecompiledOp_Int`(#token("4","Int"))=>`ID_EVM_PrecompiledOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1640,10,1640,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiled(_)_EVM_PrecompiledOp_Int`(#token("3","Int"))=>`RIP160_EVM_PrecompiledOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1639,10,1639,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiled(_)_EVM_PrecompiledOp_Int`(#token("2","Int"))=>`SHA256_EVM_PrecompiledOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1638,10,1638,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiled(_)_EVM_PrecompiledOp_Int`(#token("1","Int"))=>`ECREC_EVM_PrecompiledOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1637,10,1637,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#point(_)_EVM_Bytes_G1Point`(`(_,_)_KRYPTO_G1Point_Int_Int`(#SemanticCastToInt(X),#SemanticCastToInt(Y)))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("32","Int"),`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(X))),`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("32","Int"),`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(Y)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1744,10,1744,100)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#modexp4(_,_,_)_EVM_Bytes_Int_Int_Int`(#SemanticCastToInt(BASE),#SemanticCastToInt(EXPONENT),#SemanticCastToInt(MODULUS))=>`#asByteStack(_)_EVM-TYPES_Bytes_Int`(`powmod(_,_,_)_EVM-TYPES_Int_Int_Int_Int`(#SemanticCastToInt(BASE),#SemanticCastToInt(EXPONENT),#SemanticCastToInt(MODULUS))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1716,10,1716,100)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#modexp3(_,_,_,_)_EVM_Bytes_Int_Int_Int_Bytes`(#SemanticCastToInt(BASE),#SemanticCastToInt(EXPONENT),#SemanticCastToInt(MODLEN),#SemanticCastToBytes(DATA))=>`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#SemanticCastToInt(MODLEN),`#modexp4(_,_,_)_EVM_Bytes_Int_Int_Int`(#SemanticCastToInt(BASE),#SemanticCastToInt(EXPONENT),`#asInteger(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("0","Int"),#SemanticCastToInt(MODLEN))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1715,10,1715,137)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#modexp2(_,_,_,_)_EVM_Bytes_Int_Int_Int_Bytes`(#SemanticCastToInt(BASE),#SemanticCastToInt(EXPLEN),#SemanticCastToInt(MODLEN),#SemanticCastToBytes(DATA))=>`#modexp3(_,_,_,_)_EVM_Bytes_Int_Int_Int_Bytes`(#SemanticCastToInt(BASE),`#asInteger(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("0","Int"),#SemanticCastToInt(EXPLEN))),#SemanticCastToInt(MODLEN),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#SemanticCastToInt(EXPLEN),`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#token("0","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(DATA)),#SemanticCastToInt(EXPLEN))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1714,10,1714,178)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#modexp1(_,_,_,_)_EVM_Bytes_Int_Int_Int_Bytes`(#SemanticCastToInt(_),#SemanticCastToInt(_),#token("0","Int"),#SemanticCastToBytes(_))=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1713,10,1713,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#modexp1(_,_,_,_)_EVM_Bytes_Int_Int_Int_Bytes`(#SemanticCastToInt(BASELEN),#SemanticCastToInt(EXPLEN),#SemanticCastToInt(MODLEN),#SemanticCastToBytes(DATA))=>`#modexp2(_,_,_,_)_EVM_Bytes_Int_Int_Int_Bytes`(`#asInteger(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("0","Int"),#SemanticCastToInt(BASELEN))),#SemanticCastToInt(EXPLEN),#SemanticCastToInt(MODLEN),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#SemanticCastToInt(BASELEN),`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#token("0","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(DATA)),#SemanticCastToInt(BASELEN))))) requires `_=/=Int_`(#SemanticCastToInt(MODLEN),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1712,10,1712,208)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(_),#SemanticCastToInt(WIDTH))=>#SemanticCastToInt(MU) requires `notBool_`(`_<Int_`(#token("0","Int"),#SemanticCastToInt(WIDTH))) ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(1896,10,1896,120)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH))=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(MU),`_up/Int__EVM-TYPES_Int_Int_Int`(`_+Int_`(#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)),#token("32","Int"))) requires `_<Int_`(#token("0","Int"),#SemanticCastToInt(WIDTH)) ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(1897,10,1897,120)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(`_________EVM_InternalOp_CallOp_Int_Int_Int_Int_Int_Int_Int`(#SemanticCastToCallOp(_COP),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH),#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH)),#SemanticCastToInt(MU))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH)),#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1870,10,1870,170)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(`________EVM_InternalOp_CallSixOp_Int_Int_Int_Int_Int_Int`(#SemanticCastToCallSixOp(_CSOP),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH),#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH)),#SemanticCastToInt(MU))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH)),#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1871,10,1871,170)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(`______EVM_InternalOp_QuadStackOp_Int_Int_Int_Int`(`EXTCODECOPY_EVM_QuadStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(START),#SemanticCastToInt(_),#SemanticCastToInt(WIDTH)),#SemanticCastToInt(MU))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1861,10,1861,95)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(`______EVM_InternalOp_QuadStackOp_Int_Int_Int_Int`(`CREATE2_EVM_QuadStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH),#SemanticCastToInt(_)),#SemanticCastToInt(MU))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1866,10,1866,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`RETURNDATACOPY_EVM_TernStackOp`(.KList),#SemanticCastToInt(START),#SemanticCastToInt(_),#SemanticCastToInt(WIDTH)),#SemanticCastToInt(MU))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1863,10,1863,95)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`CREATE_EVM_TernStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)),#SemanticCastToInt(MU))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1865,10,1865,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`CODECOPY_EVM_TernStackOp`(.KList),#SemanticCastToInt(START),#SemanticCastToInt(_),#SemanticCastToInt(WIDTH)),#SemanticCastToInt(MU))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1860,10,1860,95)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`CALLDATACOPY_EVM_TernStackOp`(.KList),#SemanticCastToInt(START),#SemanticCastToInt(_),#SemanticCastToInt(WIDTH)),#SemanticCastToInt(MU))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1862,10,1862,95)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(`____EVM_InternalOp_BinStackOp_Int_Int`(`SHA3_EVM_BinStackOp`(.KList),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)),#SemanticCastToInt(MU))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1857,10,1857,85)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(`____EVM_InternalOp_BinStackOp_Int_Int`(`REVERT_EVM_BinStackOp`(.KList),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)),#SemanticCastToInt(MU))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1868,10,1868,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(`____EVM_InternalOp_BinStackOp_Int_Int`(`RETURN_EVM_BinStackOp`(.KList),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)),#SemanticCastToInt(MU))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1867,10,1867,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(`____EVM_InternalOp_BinStackOp_Int_Int`(`MSTORE_EVM_BinStackOp`(.KList),#SemanticCastToInt(INDEX),#SemanticCastToInt(_)),#SemanticCastToInt(MU))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(INDEX),#token("32","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1854,10,1854,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(`____EVM_InternalOp_BinStackOp_Int_Int`(`MSTORE8_EVM_BinStackOp`(.KList),#SemanticCastToInt(INDEX),#SemanticCastToInt(_)),#SemanticCastToInt(MU))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(INDEX),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1855,10,1855,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(`____EVM_InternalOp_BinStackOp_Int_Int`(`LOG(_)_EVM_LogOp_Int`(#SemanticCastToInt(_)),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)),#SemanticCastToInt(MU))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1858,10,1858,85)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(`___EVM_InternalOp_UnStackOp_Int`(`MLOAD_EVM_UnStackOp`(.KList),#SemanticCastToInt(INDEX)),#SemanticCastToInt(MU))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(INDEX),#token("32","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1853,10,1853,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#memory(_,_)_EVM_Int_OpCode_Int`(#SemanticCastToOpCode(_),#SemanticCastToInt(MU))=>#SemanticCastToInt(MU) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1873,10,1873,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#lookupOpCode(_,_,_)_EVM_MaybeOpCode_Bytes_Int_Schedule`(#SemanticCastToBytes(_),#SemanticCastToInt(_),#SemanticCastToSchedule(_))=>`.NoOpCode_EVM_MaybeOpCode`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(284,10,284,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#lookupOpCode(_,_,_)_EVM_MaybeOpCode_Bytes_Int_Schedule`(#SemanticCastToBytes(BA),#SemanticCastToInt(I),#SemanticCastToSchedule(SCHED))=>`#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(BA),#SemanticCastToInt(I)),#SemanticCastToSchedule(SCHED)) requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(I)),`_<Int_`(#SemanticCastToInt(I),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(BA)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(283,10,283,116)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#isValidCode(_,_)_EVM_Bool_Bytes_Schedule`(#SemanticCastToBytes(_OUT),#SemanticCastToSchedule(_SCHED))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1504,10,1504,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#isValidCode(_,_)_EVM_Bool_Bytes_Schedule`(#SemanticCastToBytes(OUT),#SemanticCastToSchedule(SCHED))=>`_impliesBool_`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasrejectedfirstbyte_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)),`_=/=Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(OUT),#token("0","Int")),#token("239","Int"))) requires `_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(OUT)),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1503,10,1503,137)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#isPrecompiledAccount(_,_)_EVM_Bool_Int_Schedule`(#SemanticCastToInt(ACCTCODE),#SemanticCastToSchedule(SCHED))=>#token("true","Bool") requires `Set:in`(#SemanticCastToInt(ACCTCODE),`#precompiledAccounts(_)_EVM_Set_Schedule`(#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [label(EVM.isPrecompiledAccount.true), org.kframework.attributes.Location(Location(1290,40,1290,144)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#isPrecompiledAccount(_,_)_EVM_Bool_Int_Schedule`(#SemanticCastToInt(ACCTCODE),#SemanticCastToSchedule(SCHED))=>#token("false","Bool") requires `notBool_`(`Set:in`(#SemanticCastToInt(ACCTCODE),`#precompiledAccounts(_)_EVM_Set_Schedule`(#SemanticCastToSchedule(SCHED)))) ensures #token("true","Bool") [label(EVM.isPrecompiledAccount.false), org.kframework.attributes.Location(Location(1291,40,1291,144)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#inStorageAux2(_,_)_EVM_Bool_Set_Int`(#SemanticCastToSet(_),#SemanticCastToInt(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1838,10,1838,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#inStorageAux2(_,_)_EVM_Bool_Set_Int`(#SemanticCastToSet(KEYS),#SemanticCastToInt(KEY))=>#token("true","Bool") requires `Set:in`(#SemanticCastToInt(KEY),#SemanticCastToSet(KEYS)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1837,10,1837,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#inStorageAux1(_,_)_EVM_Bool_KItem_Int`(#SemanticCastToSet(KEYS),#SemanticCastToInt(KEY))=>`#inStorageAux2(_,_)_EVM_Bool_Set_Int`(#SemanticCastToSet(KEYS),#SemanticCastToInt(KEY)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1834,10,1834,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#inStorageAux1(_,_)_EVM_Bool_KItem_Int`(#SemanticCastToKItem(_),#SemanticCastToInt(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1835,10,1835,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#inStorage(_,_,_)_EVM_Bool_Map_Account_Int`(#SemanticCastToMap(_),#SemanticCastToAccount(_),#SemanticCastToInt(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1832,10,1832,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#inStorage(_,_,_)_EVM_Bool_Map_Account_Int`(#SemanticCastToMap(TS),#SemanticCastToAccount(ACCT),#SemanticCastToInt(KEY))=>`#inStorageAux1(_,_)_EVM_Bool_KItem_Int`(`Map:lookup`(#SemanticCastToMap(TS),#SemanticCastToAccount(ACCT)),#SemanticCastToInt(KEY)) requires `_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToAccount(ACCT),#SemanticCastToMap(TS)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1831,10,1831,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#ecrec(_,_,_,_)_EVM_Bytes_Bytes_Bytes_Bytes_Bytes`(#SemanticCastToBytes(HASH),#SemanticCastToBytes(SIGV),#SemanticCastToBytes(SIGR),#SemanticCastToBytes(SIGS))=>`#ecrec(_)_EVM_Bytes_Account`(`#sender(_,_,_,_)_SERIALIZATION_Account_String_Int_String_String`(unparseByteStack(#SemanticCastToBytes(HASH)),`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(SIGV)),unparseByteStack(#SemanticCastToBytes(SIGR)),unparseByteStack(#SemanticCastToBytes(SIGS)))) requires #token("true","Bool") ensures #token("true","Bool") [concrete, label(EVM.ecrec), org.kframework.attributes.Location(Location(1678,19,1678,158)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#ecrec(_)_EVM_Bytes_Account`(`.Account_EVM-TYPES_Account`(.KList))=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1680,10,1680,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#ecrec(_)_EVM_Bytes_Account`(#SemanticCastToInt(N))=>`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("32","Int"),`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(N))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1681,10,1681,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("99","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("4","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2267,10,2267,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("98","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("3","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2266,10,2266,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("97","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("2","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2265,10,2265,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("96","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2264,10,2264,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("91","Int"),#SemanticCastToSchedule(_))=>`JUMPDEST_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2263,10,2263,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("90","Int"),#SemanticCastToSchedule(_))=>`GAS_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2262,10,2262,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("9","Int"),#SemanticCastToSchedule(_))=>`MULMOD_EVM_TernStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2208,10,2208,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("89","Int"),#SemanticCastToSchedule(_))=>`MSIZE_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2261,10,2261,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("88","Int"),#SemanticCastToSchedule(_))=>`PC_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2260,10,2260,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("87","Int"),#SemanticCastToSchedule(_))=>`JUMPI_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2259,10,2259,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("86","Int"),#SemanticCastToSchedule(_))=>`JUMP_EVM_UnStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2258,10,2258,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("85","Int"),#SemanticCastToSchedule(_))=>`SSTORE_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2257,10,2257,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("84","Int"),#SemanticCastToSchedule(_))=>`SLOAD_EVM_UnStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2256,10,2256,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("83","Int"),#SemanticCastToSchedule(_))=>`MSTORE8_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2255,10,2255,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("82","Int"),#SemanticCastToSchedule(_))=>`MSTORE_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2254,10,2254,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("81","Int"),#SemanticCastToSchedule(_))=>`MLOAD_EVM_UnStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2253,10,2253,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("80","Int"),#SemanticCastToSchedule(_))=>`POP_EVM_UnStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2252,10,2252,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("8","Int"),#SemanticCastToSchedule(_))=>`ADDMOD_EVM_TernStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2207,10,2207,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("72","Int"),#SemanticCastToSchedule(SCHED))=>`BASEFEE_EVM_NullStackOp`(.KList) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasbasefee_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2251,10,2251,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("71","Int"),#SemanticCastToSchedule(SCHED))=>`SELFBALANCE_EVM_NullStackOp`(.KList) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasselfbalance_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2250,10,2250,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("70","Int"),#SemanticCastToSchedule(SCHED))=>`CHAINID_EVM_NullStackOp`(.KList) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghaschainid_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2249,10,2249,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("7","Int"),#SemanticCastToSchedule(_))=>`SMOD_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2206,10,2206,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("69","Int"),#SemanticCastToSchedule(_))=>`GASLIMIT_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2248,10,2248,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("68","Int"),#SemanticCastToSchedule(SCHED))=>`PREVRANDAO_EVM_NullStackOp`(.KList) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasprevrandao_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2246,10,2246,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("68","Int"),#SemanticCastToSchedule(SCHED))=>`DIFFICULTY_EVM_NullStackOp`(.KList) requires `notBool_`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasprevrandao_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2247,10,2247,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("67","Int"),#SemanticCastToSchedule(_))=>`NUMBER_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2245,10,2245,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("66","Int"),#SemanticCastToSchedule(_))=>`TIMESTAMP_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2244,10,2244,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("65","Int"),#SemanticCastToSchedule(_))=>`COINBASE_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2243,10,2243,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("64","Int"),#SemanticCastToSchedule(_))=>`BLOCKHASH_EVM_UnStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2242,10,2242,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("63","Int"),#SemanticCastToSchedule(SCHED))=>`EXTCODEHASH_EVM_UnStackOp`(.KList) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasextcodehash_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2241,10,2241,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("62","Int"),#SemanticCastToSchedule(SCHED))=>`RETURNDATACOPY_EVM_TernStackOp`(.KList) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasreturndata_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2240,10,2240,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("61","Int"),#SemanticCastToSchedule(SCHED))=>`RETURNDATASIZE_EVM_NullStackOp`(.KList) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasreturndata_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2239,10,2239,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("60","Int"),#SemanticCastToSchedule(_))=>`EXTCODECOPY_EVM_QuadStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2238,10,2238,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("6","Int"),#SemanticCastToSchedule(_))=>`MOD_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2205,10,2205,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("59","Int"),#SemanticCastToSchedule(_))=>`EXTCODESIZE_EVM_UnStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2237,10,2237,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("58","Int"),#SemanticCastToSchedule(_))=>`GASPRICE_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2236,10,2236,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("57","Int"),#SemanticCastToSchedule(_))=>`CODECOPY_EVM_TernStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2235,10,2235,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("56","Int"),#SemanticCastToSchedule(_))=>`CODESIZE_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2234,10,2234,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("55","Int"),#SemanticCastToSchedule(_))=>`CALLDATACOPY_EVM_TernStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2233,10,2233,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("54","Int"),#SemanticCastToSchedule(_))=>`CALLDATASIZE_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2232,10,2232,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("53","Int"),#SemanticCastToSchedule(_))=>`CALLDATALOAD_EVM_UnStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2231,10,2231,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("52","Int"),#SemanticCastToSchedule(_))=>`CALLVALUE_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2230,10,2230,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("51","Int"),#SemanticCastToSchedule(_))=>`CALLER_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2229,10,2229,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("50","Int"),#SemanticCastToSchedule(_))=>`ORIGIN_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2228,10,2228,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("5","Int"),#SemanticCastToSchedule(_))=>`SDIV_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2204,10,2204,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("49","Int"),#SemanticCastToSchedule(_))=>`BALANCE_EVM_UnStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2227,10,2227,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("48","Int"),#SemanticCastToSchedule(_))=>`ADDRESS_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2226,10,2226,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("4","Int"),#SemanticCastToSchedule(_))=>`DIV_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2203,10,2203,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("32","Int"),#SemanticCastToSchedule(_))=>`SHA3_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2225,10,2225,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("3","Int"),#SemanticCastToSchedule(_))=>`SUB_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2202,10,2202,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("29","Int"),#SemanticCastToSchedule(SCHED))=>`SAR_EVM_BinStackOp`(.KList) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasshift_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2224,10,2224,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("28","Int"),#SemanticCastToSchedule(SCHED))=>`SHR_EVM_BinStackOp`(.KList) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasshift_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2223,10,2223,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("27","Int"),#SemanticCastToSchedule(SCHED))=>`SHL_EVM_BinStackOp`(.KList) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasshift_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2222,10,2222,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("26","Int"),#SemanticCastToSchedule(_))=>`BYTE_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2221,10,2221,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("255","Int"),#SemanticCastToSchedule(_))=>`SELFDESTRUCT_EVM_UnStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2342,10,2342,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("254","Int"),#SemanticCastToSchedule(_))=>`INVALID_EVM_InvalidOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2341,10,2341,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("253","Int"),#SemanticCastToSchedule(SCHED))=>`REVERT_EVM_BinStackOp`(.KList) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasrevert_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2340,10,2340,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("250","Int"),#SemanticCastToSchedule(SCHED))=>`STATICCALL_EVM_CallSixOp`(.KList) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasstaticcall_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2339,10,2339,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("25","Int"),#SemanticCastToSchedule(_))=>`NOT_EVM_UnStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2220,10,2220,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("245","Int"),#SemanticCastToSchedule(SCHED))=>`CREATE2_EVM_QuadStackOp`(.KList) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghascreate2_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2338,10,2338,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("244","Int"),#SemanticCastToSchedule(SCHED))=>`DELEGATECALL_EVM_CallSixOp`(.KList) requires `_=/=K_`(#SemanticCastToSchedule(SCHED),`FRONTIER_EVM`(.KList)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2337,10,2337,80)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("243","Int"),#SemanticCastToSchedule(_))=>`RETURN_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2336,10,2336,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("242","Int"),#SemanticCastToSchedule(_))=>`CALLCODE_EVM_CallOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2335,10,2335,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("241","Int"),#SemanticCastToSchedule(_))=>`CALL_EVM_CallOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2334,10,2334,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("240","Int"),#SemanticCastToSchedule(_))=>`CREATE_EVM_TernStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2333,10,2333,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("24","Int"),#SemanticCastToSchedule(_))=>`XOR_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2219,10,2219,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("23","Int"),#SemanticCastToSchedule(_))=>`EVMOR_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2218,10,2218,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("22","Int"),#SemanticCastToSchedule(_))=>`AND_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2217,10,2217,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("21","Int"),#SemanticCastToSchedule(_))=>`ISZERO_EVM_UnStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2216,10,2216,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("20","Int"),#SemanticCastToSchedule(_))=>`EQ_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2215,10,2215,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("2","Int"),#SemanticCastToSchedule(_))=>`MUL_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2201,10,2201,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("19","Int"),#SemanticCastToSchedule(_))=>`SGT_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2214,10,2214,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("18","Int"),#SemanticCastToSchedule(_))=>`SLT_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2213,10,2213,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("17","Int"),#SemanticCastToSchedule(_))=>`GT_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2212,10,2212,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("164","Int"),#SemanticCastToSchedule(_))=>`LOG(_)_EVM_LogOp_Int`(#token("4","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2332,10,2332,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("163","Int"),#SemanticCastToSchedule(_))=>`LOG(_)_EVM_LogOp_Int`(#token("3","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2331,10,2331,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("162","Int"),#SemanticCastToSchedule(_))=>`LOG(_)_EVM_LogOp_Int`(#token("2","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2330,10,2330,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("161","Int"),#SemanticCastToSchedule(_))=>`LOG(_)_EVM_LogOp_Int`(#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2329,10,2329,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("160","Int"),#SemanticCastToSchedule(_))=>`LOG(_)_EVM_LogOp_Int`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2328,10,2328,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("16","Int"),#SemanticCastToSchedule(_))=>`LT_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2211,10,2211,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("159","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("16","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2327,10,2327,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("158","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("15","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2326,10,2326,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("157","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("14","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2325,10,2325,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("156","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("13","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2324,10,2324,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("155","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("12","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2323,10,2323,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("154","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("11","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2322,10,2322,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("153","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("10","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2321,10,2321,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("152","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("9","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2320,10,2320,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("151","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("8","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2319,10,2319,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("150","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("7","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2318,10,2318,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("149","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("6","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2317,10,2317,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("148","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("5","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2316,10,2316,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("147","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("4","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2315,10,2315,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("146","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("3","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2314,10,2314,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("145","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("2","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2313,10,2313,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("144","Int"),#SemanticCastToSchedule(_))=>`SWAP(_)_EVM_StackOp_Int`(#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2312,10,2312,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("143","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("16","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2311,10,2311,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("142","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("15","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2310,10,2310,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("141","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("14","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2309,10,2309,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("140","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("13","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2308,10,2308,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("139","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("12","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2307,10,2307,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("138","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("11","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2306,10,2306,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("137","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("10","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2305,10,2305,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("136","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("9","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2304,10,2304,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("135","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("8","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2303,10,2303,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("134","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("7","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2302,10,2302,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("133","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("6","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2301,10,2301,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("132","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("5","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2300,10,2300,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("131","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("4","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2299,10,2299,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("130","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("3","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2298,10,2298,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("129","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("2","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2297,10,2297,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("128","Int"),#SemanticCastToSchedule(_))=>`DUP(_)_EVM_StackOp_Int`(#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2296,10,2296,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("127","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("32","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2295,10,2295,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("126","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("31","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2294,10,2294,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("125","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("30","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2293,10,2293,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("124","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("29","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2292,10,2292,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("123","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("28","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2291,10,2291,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("122","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("27","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2290,10,2290,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("121","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("26","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2289,10,2289,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("120","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("25","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2288,10,2288,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("119","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("24","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2287,10,2287,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("118","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("23","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2286,10,2286,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("117","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("22","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2285,10,2285,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("116","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("21","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2284,10,2284,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("115","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("20","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2283,10,2283,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("114","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("19","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2282,10,2282,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("113","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("18","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2281,10,2281,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("112","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("17","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2280,10,2280,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("111","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("16","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2279,10,2279,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("110","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("15","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2278,10,2278,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("11","Int"),#SemanticCastToSchedule(_))=>`SIGNEXTEND_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2210,10,2210,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("109","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("14","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2277,10,2277,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("108","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("13","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2276,10,2276,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("107","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("12","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2275,10,2275,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("106","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("11","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2274,10,2274,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("105","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("10","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2273,10,2273,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("104","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("9","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2272,10,2272,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("103","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("8","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2271,10,2271,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("102","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("7","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2270,10,2270,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("101","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("6","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2269,10,2269,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("100","Int"),#SemanticCastToSchedule(_))=>`PUSH(_)_EVM_PushOp_Int`(#token("5","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2268,10,2268,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("10","Int"),#SemanticCastToSchedule(_))=>`EXP_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2209,10,2209,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("1","Int"),#SemanticCastToSchedule(_))=>`ADD_EVM_BinStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2200,10,2200,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#token("0","Int"),#SemanticCastToSchedule(_))=>`STOP_EVM_NullStackOp`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2199,10,2199,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmOpCode(_,_)_EVM_OpCode_Int_Schedule`(#SemanticCastToInt(W),#SemanticCastToSchedule(_))=>`UNDEFINED(_)_EVM_InvalidOp_Int`(#SemanticCastToInt(W)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2343,10,2343,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#computeValidJumpDestsWithinBound(_,_,_)_EVM_Set_Bytes_Int_List`(#SemanticCastToBytes(PGM),#SemanticCastToInt(I),#SemanticCastToList(RESULT))=>`#computeValidJumpDests(_,_,_)_EVM_Set_Bytes_Int_List`(#SemanticCastToBytes(PGM),`_+Int_`(#SemanticCastToInt(I),`#widthOpCode(_)_EVM_Int_Int`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(PGM),#SemanticCastToInt(I)))),#SemanticCastToList(RESULT)) requires `notBool_`(`_==Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(PGM),#SemanticCastToInt(I)),#token("91","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1349,10,1349,166)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#computeValidJumpDestsWithinBound(_,_,_)_EVM_Set_Bytes_Int_List`(#SemanticCastToBytes(PGM),#SemanticCastToInt(I),#SemanticCastToList(RESULT))=>`#computeValidJumpDests(_,_,_)_EVM_Set_Bytes_Int_List`(#SemanticCastToBytes(PGM),`_+Int_`(#SemanticCastToInt(I),#token("1","Int")),`_List_`(#SemanticCastToList(RESULT),`ListItem`(#SemanticCastToInt(I)))) requires `_==Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(PGM),#SemanticCastToInt(I)),#token("91","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1348,10,1348,148)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#computeValidJumpDests(_,_,_)_EVM_Set_Bytes_Int_List`(#SemanticCastToBytes(PGM),#SemanticCastToInt(I),#SemanticCastToList(RESULT))=>`List2Set(_)_COLLECTIONS_Set_List`(#SemanticCastToList(RESULT)) requires `_>=Int_`(#SemanticCastToInt(I),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PGM))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1345,10,1345,102)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#computeValidJumpDests(_,_,_)_EVM_Set_Bytes_Int_List`(#SemanticCastToBytes(PGM),#SemanticCastToInt(I),#SemanticCastToList(RESULT))=>`#computeValidJumpDestsWithinBound(_,_,_)_EVM_Set_Bytes_Int_List`(#SemanticCastToBytes(PGM),#SemanticCastToInt(I),#SemanticCastToList(RESULT)) requires `_<Int_`(#SemanticCastToInt(I),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PGM))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1346,10,1346,134)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#computeValidJumpDests(_)_EVM_Set_Bytes`(#SemanticCastToBytes(PGM))=>`#computeValidJumpDests(_,_,_)_EVM_Set_Bytes_Int_List`(#SemanticCastToBytes(PGM),#token("0","Int"),`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1341,10,1341,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#changesState(_,_)_EVM_Bool_OpCode_WordStack`(`SSTORE_EVM_BinStackOp`(.KList),#SemanticCastToWordStack(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(412,10,412,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#changesState(_,_)_EVM_Bool_OpCode_WordStack`(`SELFDESTRUCT_EVM_UnStackOp`(.KList),#SemanticCastToWordStack(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(415,10,415,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#changesState(_,_)_EVM_Bool_OpCode_WordStack`(`LOG(_)_EVM_LogOp_Int`(#SemanticCastToInt(_)),#SemanticCastToWordStack(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(411,10,411,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#changesState(_,_)_EVM_Bool_OpCode_WordStack`(`CREATE_EVM_TernStackOp`(.KList),#SemanticCastToWordStack(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(413,10,413,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#changesState(_,_)_EVM_Bool_OpCode_WordStack`(`CREATE2_EVM_QuadStackOp`(.KList),#SemanticCastToWordStack(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(414,10,414,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#changesState(_,_)_EVM_Bool_OpCode_WordStack`(`CALL_EVM_CallOp`(.KList),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(_),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(_),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(VALUE),#SemanticCastToWordStack(_)))))=>#token("true","Bool") requires `_=/=Int_`(#SemanticCastToInt(VALUE),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(410,10,410,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#changesState(_,_)_EVM_Bool_OpCode_WordStack`(#SemanticCastToOpCode(_),#SemanticCastToWordStack(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(416,10,416,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#bloomFilter(_,_)_EVM_Bytes_List_Int`(`_List_`(`ListItem`(`{_|_|_}_EVM-TYPES_SubstateLogEntry_Int_List_Bytes`(#SemanticCastToInt(ACCT),#SemanticCastToList(TOPICS),#SemanticCastToBytes(_))),#SemanticCastToList(L)),#SemanticCastToInt(B))=>`#bloomFilter(_,_)_EVM_Bytes_List_Int`(`_List_`(`_List_`(`ListItem`(`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("20","Int"),`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(ACCT)))),`listAsBytes(_)_EVM_List_List`(#SemanticCastToList(TOPICS))),#SemanticCastToList(L)),#SemanticCastToInt(B)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(684,10,684,148)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#bloomFilter(_,_)_EVM_Bytes_List_Int`(`_List_`(`ListItem`(#SemanticCastToBytes(WS)),#SemanticCastToList(L)),#SemanticCastToInt(B))=>`#bloomFilter(_,_)_EVM_Bytes_List_Int`(#SemanticCastToList(L),`_|Int_`(#SemanticCastToInt(B),`M3:2048(_)_EVM_Int_Bytes`(#SemanticCastToBytes(WS)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(691,10,691,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#bloomFilter(_,_)_EVM_Bytes_List_Int`(`.List`(.KList),#SemanticCastToInt(B))=>`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("256","Int"),`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(B))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(683,10,683,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#bloomFilter(_)_EVM_Bytes_List`(#SemanticCastToList(L))=>`#bloomFilter(_,_)_EVM_Bytes_List_Int`(#SemanticCastToList(L),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(681,10,681,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#blockhash(_,_,_,_)_EVM_Int_List_Int_Int_Int`(`_List_`(`ListItem`(#token("0","Int")),#SemanticCastToList(_)),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1002,10,1002,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#blockhash(_,_,_,_)_EVM_Int_List_Int_Int_Int`(`_List_`(`ListItem`(#SemanticCastToKItem(_)),#SemanticCastToList(L)),#SemanticCastToInt(N),#SemanticCastToInt(HI),#SemanticCastToInt(A))=>`#blockhash(_,_,_,_)_EVM_Int_List_Int_Int_Int`(#SemanticCastToList(L),#SemanticCastToInt(N),`_-Int_`(#SemanticCastToInt(HI),#token("1","Int")),`_+Int_`(#SemanticCastToInt(A),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1004,10,1004,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#blockhash(_,_,_,_)_EVM_Int_List_Int_Int_Int`(`_List_`(`ListItem`(#SemanticCastToInt(H)),#SemanticCastToList(_)),#SemanticCastToInt(N),#SemanticCastToInt(N),#SemanticCastToInt(_))=>#SemanticCastToInt(H) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1003,10,1003,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#blockhash(_,_,_,_)_EVM_Int_List_Int_Int_Int`(#SemanticCastToList(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#token("256","Int"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1001,10,1001,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#blockhash(_,_,_,_)_EVM_Int_List_Int_Int_Int`(#SemanticCastToList(_),#SemanticCastToInt(N),#SemanticCastToInt(HI),#SemanticCastToInt(_))=>#token("0","Int") requires `_>Int_`(#SemanticCastToInt(N),#SemanticCastToInt(HI)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1000,10,1000,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<statusCode>`(#noDots(.KList),`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList),#noDots(.KList)),`<k>`(#noDots(.KList),`#halt_EVM_KItem`(.KList)~>`#codeDeposit__EVM_KItem_Int`(#SemanticCastToInt(ACCT))=>`#mkCodeDeposit__EVM_KItem_Int`(#SemanticCastToInt(ACCT)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1517,10,1518,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),``.K=>`#newAccount__EVM_InternalOp_Int`(#SemanticCastToInt(MINER))``~>`#finalizeTx(_)_EVM_InternalOp_Bool`(#SemanticCastToBool(_)),#dots(.KList)),`<coinbase>`(#noDots(.KList),#SemanticCastToInt(MINER),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(614,10,615,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule #cells(`<k>`(#noDots(.KList),``.K=>`#newAccount__EVM_InternalOp_Int`(#SemanticCastToInt(MINER))``~>`#finalizeBlock_EVM_EthereumCommand`(.KList),#dots(.KList)),`<coinbase>`(#noDots(.KList),#SemanticCastToInt(MINER),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(659,10,660,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule #cells(`<k>`(#noDots(.KList),``.K=>`#deleteAccounts(_)_EVM_InternalOp_List`(`Set2List(_)_COLLECTIONS_List_Set`(#SemanticCastToSet(ACCTS)))``~>`#finalizeTx(_)_EVM_InternalOp_Bool`(#token("true","Bool")),#dots(.KList)),`<selfDestruct>`(#noDots(.KList),#SemanticCastToSet(ACCTS)=>`.Set`(.KList),#noDots(.KList))) requires `_>Int_`(`size(_)_SET_Int_Set`(#SemanticCastToSet(ACCTS)),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(610,10,612,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`______EVM_InternalOp_QuadStackOp_Int_Int_Int_Int`(`EXTCODECOPY_EVM_QuadStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(_),#SemanticCastToInt(WIDTH))=>.K,#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM)=>`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#SemanticCastToInt(WIDTH),`.Bytes_BYTES-HOOKED_Bytes`(.KList))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1174,10,1175,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule #cells(`<k>`(#noDots(.KList),`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`RETURNDATACOPY_EVM_TernStackOp`(.KList),#SemanticCastToInt(_MEMSTART),#SemanticCastToInt(DATASTART),#SemanticCastToInt(DATAWIDTH))=>`#end__EVM_KItem_StatusCode`(`EVMC_INVALID_MEMORY_ACCESS_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(RD),#noDots(.KList))) requires `_>Int_`(`_+Int_`(#SemanticCastToInt(DATASTART),#SemanticCastToInt(DATAWIDTH)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(RD))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1101,10,1103,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`SHA3_EVM_BinStackOp`(.KList),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH))=>`keccak(_)_SERIALIZATION_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH)))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(935,10,936,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`MSTORE_EVM_BinStackOp`(.KList),#SemanticCastToInt(INDEX),#SemanticCastToInt(VALUE))=>.K,#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM)=>`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(LM),#SemanticCastToInt(INDEX),`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("32","Int"),`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(VALUE)))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(867,10,868,91)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`MSTORE8_EVM_BinStackOp`(.KList),#SemanticCastToInt(INDEX),#SemanticCastToInt(VALUE))=>.K,#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM)=>`#write(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(INDEX),`_modInt_`(#SemanticCastToInt(VALUE),#token("256","Int"))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(870,10,871,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`MLOAD_EVM_UnStackOp`(.KList),#SemanticCastToInt(INDEX))=>`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(INDEX),#token("32","Int")))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(862,10,863,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`JUMP_EVM_UnStackOp`(.KList),#SemanticCastToInt(DEST))=>`#end__EVM_KItem_StatusCode`(`EVMC_BAD_JUMP_DESTINATION_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)),`<jumpDests>`(#noDots(.KList),#SemanticCastToSet(DESTS),#noDots(.KList))) requires `notBool_`(`Set:in`(#SemanticCastToInt(DEST),#SemanticCastToSet(DESTS))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1026,10,1028,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`EXTCODESIZE_EVM_UnStackOp`(.KList),#SemanticCastToInt(ACCT))=>`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(CODE))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<code>`(#noDots(.KList),#SemanticCastToBytes(CODE),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1141,10,1146,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`EXTCODEHASH_EVM_UnStackOp`(.KList),#SemanticCastToInt(ACCT))=>`keccak(_)_SERIALIZATION_Int_Bytes`(#SemanticCastToBytes(CODE))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<account>`(#noDots(.KList),#cells(#cells(#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<code>`(#noDots(.KList),#SemanticCastToBytes(CODE),#noDots(.KList))),`<nonce>`(#noDots(.KList),#SemanticCastToInt(NONCE),#noDots(.KList))),`<balance>`(#noDots(.KList),#SemanticCastToInt(BAL),#noDots(.KList))),#dots(.KList))) requires `notBool_`(accountEmpty(#SemanticCastToBytes(CODE),#SemanticCastToInt(NONCE),#SemanticCastToInt(BAL))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1152,10,1160,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`CALLDATALOAD_EVM_UnStackOp`(.KList),#SemanticCastToInt(DATASTART))=>`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(CD),#SemanticCastToInt(DATASTART),#token("32","Int")))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(CD),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1074,10,1075,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`BALANCE_EVM_UnStackOp`(.KList),#SemanticCastToInt(ACCT))=>#SemanticCastToInt(BAL)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BAL),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1130,10,1135,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`TIMESTAMP_EVM_NullStackOp`(.KList)=>#SemanticCastToInt(TS)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<timestamp>`(#noDots(.KList),#SemanticCastToInt(TS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(955,10,955,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`STOP_EVM_NullStackOp`(.KList)=>`#end__EVM_KItem_StatusCode`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList)),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1046,10,1047,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`RETURNDATASIZE_EVM_NullStackOp`(.KList)=>`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(RD))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(RD),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1091,10,1092,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`PREVRANDAO_EVM_NullStackOp`(.KList)=>#SemanticCastToInt(RDAO)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<mixHash>`(#noDots(.KList),#SemanticCastToInt(RDAO),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(958,10,958,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`PC_EVM_NullStackOp`(.KList)=>#SemanticCastToInt(PCOUNT)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<pc>`(#noDots(.KList),#SemanticCastToInt(PCOUNT),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(946,10,946,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`ORIGIN_EVM_NullStackOp`(.KList)=>#SemanticCastToAccount(ORG)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<origin>`(#noDots(.KList),#SemanticCastToAccount(ORG),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(963,10,963,74)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`NUMBER_EVM_NullStackOp`(.KList)=>#SemanticCastToInt(NUMB)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<number>`(#noDots(.KList),#SemanticCastToInt(NUMB),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(956,10,956,74)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`MSIZE_EVM_NullStackOp`(.KList)=>`_*Word__EVM-TYPES_Int_Int_Int`(#token("32","Int"),#SemanticCastToInt(MU))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<memoryUsed>`(#noDots(.KList),#SemanticCastToInt(MU),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(977,10,977,93)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`GAS_EVM_NullStackOp`(.KList)=>`gas2Int(_)_GAS-SYNTAX_Int_Gas`(#SemanticCastToGas(GAVAIL))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(947,10,947,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`GASPRICE_EVM_NullStackOp`(.KList)=>#SemanticCastToInt(GPRICE)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<gasPrice>`(#noDots(.KList),#SemanticCastToInt(GPRICE),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(948,10,948,89)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`GASLIMIT_EVM_NullStackOp`(.KList)=>#SemanticCastToInt(GLIMIT)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<gasLimit>`(#noDots(.KList),#SemanticCastToInt(GLIMIT),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(949,10,949,89)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`ECPAIRING_EVM_PrecompiledOp`(.KList)=>`#end__EVM_KItem_StatusCode`(`EVMC_PRECOMPILE_FAILURE_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))) requires `_=/=Int_`(`_modInt_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(DATA)),#token("192","Int")),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1751,10,1753,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`ECPAIRING_EVM_PrecompiledOp`(.KList)=>`#ecpairing(_,_,_,_,_)_EVM_InternalOp_List_List_Int_Bytes_Int`(`.List`(.KList),`.List`(.KList),#token("0","Int"),#SemanticCastToBytes(DATA),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(DATA))),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))) requires `_==Int_`(`_modInt_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(DATA)),#token("192","Int")),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1748,10,1750,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`ECMUL_EVM_PrecompiledOp`(.KList)=>`#ecmul(_,_)_EVM_InternalOp_G1Point_Int`(`(_,_)_KRYPTO_G1Point_Int_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("0","Int"),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("32","Int"),#token("32","Int")))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("64","Int"),#token("32","Int")))),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1732,10,1733,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`ECADD_EVM_PrecompiledOp`(.KList)=>`#ecadd(_,_)_EVM_InternalOp_G1Point_G1Point`(`(_,_)_KRYPTO_G1Point_Int_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("0","Int"),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("32","Int"),#token("32","Int")))),`(_,_)_KRYPTO_G1Point_Int_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("64","Int"),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("96","Int"),#token("32","Int"))))),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1720,10,1721,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`DIFFICULTY_EVM_NullStackOp`(.KList)=>#SemanticCastToInt(DIFF)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<difficulty>`(#noDots(.KList),#SemanticCastToInt(DIFF),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(957,10,957,82)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`COINBASE_EVM_NullStackOp`(.KList)=>#SemanticCastToInt(CB)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<coinbase>`(#noDots(.KList),#SemanticCastToInt(CB),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(954,10,954,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`CODESIZE_EVM_NullStackOp`(.KList)=>`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PGM))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<program>`(#noDots(.KList),#SemanticCastToBytes(PGM),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(978,10,978,85)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`CHAINID_EVM_NullStackOp`(.KList)=>#SemanticCastToInt(CID)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<chainID>`(#noDots(.KList),#SemanticCastToInt(CID),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(966,10,966,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`CALLVALUE_EVM_NullStackOp`(.KList)=>#SemanticCastToInt(CV)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<callValue>`(#noDots(.KList),#SemanticCastToInt(CV),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(965,10,965,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`CALLER_EVM_NullStackOp`(.KList)=>#SemanticCastToAccount(CL)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<caller>`(#noDots(.KList),#SemanticCastToAccount(CL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(964,10,964,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`CALLDATASIZE_EVM_NullStackOp`(.KList)=>`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(CD))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(CD),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1069,10,1070,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`BLAKE2F_EVM_PrecompiledOp`(.KList)=>`#end__EVM_KItem_StatusCode`(`EVMC_PRECOMPILE_FAILURE_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))) requires `_andBool_`(`_==Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(DATA)),#token("213","Int")),`_>Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(DATA),#token("212","Int")),#token("1","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1777,10,1780,32)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`BLAKE2F_EVM_PrecompiledOp`(.KList)=>`#end__EVM_KItem_StatusCode`(`EVMC_PRECOMPILE_FAILURE_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))) requires `_=/=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(DATA)),#token("213","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1782,10,1784,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`BASEFEE_EVM_NullStackOp`(.KList)=>#SemanticCastToInt(BFEE)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<baseFee>`(#noDots(.KList),#SemanticCastToInt(BFEE),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(950,10,950,85)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`ADDRESS_EVM_NullStackOp`(.KList)=>#SemanticCastToAccount(ACCT)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToAccount(ACCT),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(962,10,962,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#transferFunds____EVM_InternalOp_Int_Int_Int`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(_ACCTTO),#SemanticCastToInt(VALUE))=>`#end__EVM_KItem_StatusCode`(`EVMC_BALANCE_UNDERFLOW_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(ORIGFROM),#noDots(.KList))),#dots(.KList))) requires `_>Int_`(#SemanticCastToInt(VALUE),#SemanticCastToInt(ORIGFROM)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(802,10,808,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#transferFunds____EVM_InternalOp_Int_Int_Int`(#SemanticCastToInt(ACCT),#SemanticCastToInt(ACCT),#SemanticCastToInt(VALUE))=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(ORIGFROM),#noDots(.KList))),#dots(.KList))) requires `_<=Int_`(#SemanticCastToInt(VALUE),#SemanticCastToInt(ORIGFROM)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(781,10,787,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#transferFundsToNonExistent____EVM_InternalOp_Int_Int_Int`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#token("0","Int"))=>.K,#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires `_andBool_`(`_=/=K_`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO)),`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gemptyisnonexistent_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(817,10,820,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#transferFundsToNonExistent____EVM_InternalOp_Int_Int_Int`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE))=>`#newAccount__EVM_InternalOp_Int`(#SemanticCastToInt(ACCTTO))~>`#transferFunds____EVM_InternalOp_Int_Int_Int`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE)),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires `_andBool_`(`_=/=K_`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO)),`_orBool_`(`_>Int_`(#SemanticCastToInt(VALUE),#token("0","Int")),`notBool_`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gemptyisnonexistent_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(812,10,815,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#touchAccounts__EVM_KItem_Account`(#SemanticCastToAccount(ADDR))=>.K,#dots(.KList)),`<touchedAccounts>`(#noDots(.KList),#SemanticCastToSet(TOUCHED_ACCOUNTS)=>`_|Set__SET_Set_Set_Set`(#SemanticCastToSet(TOUCHED_ACCOUNTS),`SetItem`(#SemanticCastToAccount(ADDR))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1312,10,1313,102)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#setStack__EVM_InternalOp_WordStack`(#SemanticCastToWordStack(WS))=>.K,#dots(.KList)),`<wordStack>`(#noDots(.KList),#SemanticCastToWordStack(_)=>#SemanticCastToWordStack(WS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(728,10,728,82)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#setLocalMem____EVM_InternalOp_Int_Int_Bytes`(#SemanticCastToInt(START),#SemanticCastToInt(WIDTH),#SemanticCastToBytes(WS))=>.K,#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM)=>`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(LM),#SemanticCastToInt(START),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(WS),#token("0","Int"),`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(WIDTH),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(WS))))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1393,10,1394,100)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#refund__EVM_InternalOp_Gas`(#SemanticCastToGas(G))=>.K,#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL)=>`_+Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToGas(GAVAIL),#SemanticCastToGas(G)),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM.refund), org.kframework.attributes.Location(Location(1391,20,1391,88)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#pc[_]_EVM_InternalOp_OpCode`(#SemanticCastToOpCode(OP))=>.K,#dots(.KList)),`<pc>`(#noDots(.KList),#SemanticCastToInt(PCOUNT)=>`_+Int_`(#SemanticCastToInt(PCOUNT),`#widthOp(_)_EVM_Int_OpCode`(#SemanticCastToOpCode(OP))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(512,10,513,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#next[_]_EVM_InternalOp_MaybeOpCode`(`.NoOpCode_EVM_MaybeOpCode`(.KList))=>`#end__EVM_KItem_StatusCode`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList)),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(316,10,317,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#next[_]_EVM_InternalOp_MaybeOpCode`(#SemanticCastToOpCode(OP))=>`#end__EVM_KItem_StatusCode`(`EVMC_STACK_UNDERFLOW_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)),`<wordStack>`(#noDots(.KList),#SemanticCastToWordStack(WS),#noDots(.KList))) requires `#stackUnderflow(_,_)_EVM_Bool_WordStack_OpCode`(#SemanticCastToWordStack(WS),#SemanticCastToOpCode(OP)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(330,10,332,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#next[_]_EVM_InternalOp_MaybeOpCode`(#SemanticCastToOpCode(OP))=>`#end__EVM_KItem_StatusCode`(`EVMC_STACK_OVERFLOW_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)),`<wordStack>`(#noDots(.KList),#SemanticCastToWordStack(WS),#noDots(.KList))) requires `#stackOverflow(_,_)_EVM_Bool_WordStack_OpCode`(#SemanticCastToWordStack(WS),#SemanticCastToOpCode(OP)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(334,10,336,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#newFreshAccount__EVM_InternalOp_Int`(#SemanticCastToInt(ACCT))=>.K,#dots(.KList)),`<accounts>`(#noDots(.KList),#cells(.KList)=>`<account>`(#noDots(.KList),`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),#dots(.KList)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(763,10,772,21)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#newExistingAccount__EVM_InternalOp_Int`(#SemanticCastToInt(ACCT))=>`#end__EVM_KItem_StatusCode`(`EVMC_ACCOUNT_ALREADY_EXISTS_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)),`<account>`(#noDots(.KList),#cells(#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<code>`(#noDots(.KList),#SemanticCastToAccountCode(CODE),#noDots(.KList))),`<nonce>`(#noDots(.KList),#SemanticCastToInt(NONCE),#noDots(.KList))),#dots(.KList))) requires `_orBool_`(`_=/=K_`(#SemanticCastToAccountCode(CODE),`.Bytes_BYTES-HOOKED_Bytes`(.KList)),`_=/=Int_`(#SemanticCastToInt(NONCE),#token("0","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(743,10,750,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#newExistingAccount__EVM_InternalOp_Int`(#SemanticCastToInt(ACCT))=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(#cells(#cells(#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<code>`(#noDots(.KList),#SemanticCastToBytes(CODE),#noDots(.KList))),`<nonce>`(#noDots(.KList),#token("0","Int"),#noDots(.KList))),`<storage>`(#noDots(.KList),#SemanticCastToMap(_)=>`.Map`(.KList),#noDots(.KList))),`<origStorage>`(#noDots(.KList),#SemanticCastToMap(_)=>`.Map`(.KList),#noDots(.KList))),#dots(.KList))) requires `_==Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(CODE)),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(752,10,761,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#newAccount__EVM_InternalOp_Int`(#SemanticCastToInt(ACCT))=>`#newExistingAccount__EVM_InternalOp_Int`(#SemanticCastToInt(ACCT)),#dots(.KList)),`<account>`(#noDots(.KList),`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(740,10,740,116)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#memory[_,_]_EVM_InternalOp_OpCode_OpCode`(#SemanticCastToOpCode(OP),#SemanticCastToOpCode(AOP))=>`#memory(_,_)_EVM_Int_OpCode_Int`(#SemanticCastToOpCode(AOP),#SemanticCastToInt(MU))~>`#deductMemory_EVM_InternalOp`(.KList),#dots(.KList)),`<memoryUsed>`(#noDots(.KList),#SemanticCastToInt(MU),#noDots(.KList))) requires `#usesMemory(_)_EVM_Bool_OpCode`(#SemanticCastToOpCode(OP)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1811,10,1813,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#incrementNonce__EVM_InternalOp_Int`(#SemanticCastToInt(ACCT))=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<nonce>`(#noDots(.KList),#SemanticCastToInt(NONCE)=>`_+Int_`(#SemanticCastToInt(NONCE),#token("1","Int")),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1494,10,1499,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#gas[_]_EVM_InternalOp_OpCode`(#SemanticCastToOpCode(OP))=>`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),#SemanticCastToOpCode(OP))~>`#deductGas_EVM_InternalOp`(.KList),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1808,10,1809,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(_),`SHA256_EVM_PrecompiledOp`(.KList))=>`_+Int_`(#token("60","Int"),`_*Int_`(#token("12","Int"),`_up/Int__EVM-TYPES_Int_Int_Int`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(DATA)),#token("32","Int")))),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2114,10,2114,121)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(_),`RIP160_EVM_PrecompiledOp`(.KList))=>`_+Int_`(#token("600","Int"),`_*Int_`(#token("120","Int"),`_up/Int__EVM-TYPES_Int_Int_Int`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(DATA)),#token("32","Int")))),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2115,10,2115,121)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(_),`ID_EVM_PrecompiledOp`(.KList))=>`_+Int_`(#token("15","Int"),`_*Int_`(#token("3","Int"),`_up/Int__EVM-TYPES_Int_Int_Int`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(DATA)),#token("32","Int")))),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2116,10,2116,121)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`SSTORE_EVM_BinStackOp`(.KList),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`#end__EVM_KItem_StatusCode`(`EVMC_OUT_OF_GAS_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL),#noDots(.KList))) requires `_andBool_`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghassstorestipend_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)),`_<=Gas__GAS-SYNTAX_Bool_Gas_Gas`(#SemanticCastToGas(GAVAIL),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcallstipend_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1960,10,1963,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`MODEXP_EVM_PrecompiledOp`(.KList))=>`Cmodexp(_,_,_,_,_)_GAS-FEES_Int_Schedule_Bytes_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToBytes(DATA),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("0","Int"),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("32","Int"),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("64","Int"),#token("32","Int")))),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2118,10,2119,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`ECPAIRING_EVM_PrecompiledOp`(.KList))=>`_+Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gecpairconst_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int_`(`_/Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(DATA)),#token("192","Int")),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gecpaircoeff_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)))),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2123,10,2123,165)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`BLAKE2F_EVM_PrecompiledOp`(.KList))=>`_*Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gfround_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("0","Int"),#token("4","Int")))),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2124,10,2124,132)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#gasAccess(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(_),`___EVM_InternalOp_UnStackOp_Int`(`SLOAD_EVM_UnStackOp`(.KList),#SemanticCastToInt(INDEX)))=>`#accessStorage___EVM_KItem_Account_Int`(#SemanticCastToAccount(ACCT),#SemanticCastToInt(INDEX))~>#token("0","Int"),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToAccount(ACCT),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1931,10,1931,188)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#gasAccess(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`______EVM_InternalOp_QuadStackOp_Int_Int_Int_Int`(`EXTCODECOPY_EVM_QuadStackOp`(.KList),#SemanticCastToInt(ACCT),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`#accessAccounts__EVM_KItem_Account`(#SemanticCastToInt(ACCT))~>`Caddraccess(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(SCHED),`Set:in`(#SemanticCastToInt(ACCT),#SemanticCastToSet(ACCTS))),#dots(.KList)),`<accessedAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1923,10,1923,217)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#gasAccess(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`SELFDESTRUCT_EVM_UnStackOp`(.KList),#SemanticCastToInt(ACCT)))=>`#accessAccounts__EVM_KItem_Account`(#SemanticCastToInt(ACCT))~>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`Set:in`(#SemanticCastToInt(ACCT),#SemanticCastToSet(ACCTS)),#token("0","Int"),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcoldaccountaccess_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),#dots(.KList)),`<accessedAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1926,10,1926,217)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#gasAccess(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`EXTCODESIZE_EVM_UnStackOp`(.KList),#SemanticCastToInt(ACCT)))=>`#accessAccounts__EVM_KItem_Account`(#SemanticCastToInt(ACCT))~>`Caddraccess(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(SCHED),`Set:in`(#SemanticCastToInt(ACCT),#SemanticCastToSet(ACCTS))),#dots(.KList)),`<accessedAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1922,10,1922,217)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#gasAccess(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`EXTCODEHASH_EVM_UnStackOp`(.KList),#SemanticCastToInt(ACCT)))=>`#accessAccounts__EVM_KItem_Account`(#SemanticCastToInt(ACCT))~>`Caddraccess(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(SCHED),`Set:in`(#SemanticCastToInt(ACCT),#SemanticCastToSet(ACCTS))),#dots(.KList)),`<accessedAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1924,10,1924,217)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#gasAccess(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`BALANCE_EVM_UnStackOp`(.KList),#SemanticCastToInt(ACCT)))=>`#accessAccounts__EVM_KItem_Account`(#SemanticCastToInt(ACCT))~>`Caddraccess(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(SCHED),`Set:in`(#SemanticCastToInt(ACCT),#SemanticCastToSet(ACCTS))),#dots(.KList)),`<accessedAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1925,10,1925,217)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#finalizeStorage(_)_EVM_InternalOp_List`(`_List_`(`ListItem`(#SemanticCastToInt(ACCT)),#SemanticCastToList(REST))=>#SemanticCastToList(REST)),#dots(.KList)),`<account>`(#noDots(.KList),#cells(#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<storage>`(#noDots(.KList),#SemanticCastToMap(STORAGE),#noDots(.KList))),`<origStorage>`(#noDots(.KList),#SemanticCastToMap(_)=>#SemanticCastToMap(STORAGE),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(530,10,536,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#exec[_]_EVM_InternalOp_OpCode`(#SemanticCastToUnStackOp(UOP))=>`#gas[_,_]_EVM_InternalOp_OpCode_OpCode`(#SemanticCastToUnStackOp(UOP),`___EVM_InternalOp_UnStackOp_Int`(#SemanticCastToUnStackOp(UOP),#SemanticCastToInt(W0)))~>`___EVM_InternalOp_UnStackOp_Int`(#SemanticCastToUnStackOp(UOP),#SemanticCastToInt(W0)),#dots(.KList)),`<wordStack>`(#noDots(.KList),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),#SemanticCastToWordStack(WS))=>#SemanticCastToWordStack(WS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(444,10,444,155)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#exec[_]_EVM_InternalOp_OpCode`(#SemanticCastToTernStackOp(TOP))=>`#gas[_,_]_EVM_InternalOp_OpCode_OpCode`(#SemanticCastToTernStackOp(TOP),`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(#SemanticCastToTernStackOp(TOP),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2)))~>`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(#SemanticCastToTernStackOp(TOP),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2)),#dots(.KList)),`<wordStack>`(#noDots(.KList),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W1),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W2),#SemanticCastToWordStack(WS))))=>#SemanticCastToWordStack(WS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(446,10,446,155)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#exec[_]_EVM_InternalOp_OpCode`(#SemanticCastToStackOp(SO))=>`#gas[_,_]_EVM_InternalOp_OpCode_OpCode`(#SemanticCastToStackOp(SO),`___EVM_InternalOp_StackOp_WordStack`(#SemanticCastToStackOp(SO),#SemanticCastToWordStack(WS)))~>`___EVM_InternalOp_StackOp_WordStack`(#SemanticCastToStackOp(SO),#SemanticCastToWordStack(WS)),#dots(.KList)),`<wordStack>`(#noDots(.KList),#SemanticCastToWordStack(WS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(455,10,455,103)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#exec[_]_EVM_InternalOp_OpCode`(#SemanticCastToQuadStackOp(QOP))=>`#gas[_,_]_EVM_InternalOp_OpCode_OpCode`(#SemanticCastToQuadStackOp(QOP),`______EVM_InternalOp_QuadStackOp_Int_Int_Int_Int`(#SemanticCastToQuadStackOp(QOP),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2),#SemanticCastToInt(W3)))~>`______EVM_InternalOp_QuadStackOp_Int_Int_Int_Int`(#SemanticCastToQuadStackOp(QOP),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2),#SemanticCastToInt(W3)),#dots(.KList)),`<wordStack>`(#noDots(.KList),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W1),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W2),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W3),#SemanticCastToWordStack(WS)))))=>#SemanticCastToWordStack(WS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(447,10,447,155)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#exec[_]_EVM_InternalOp_OpCode`(#SemanticCastToCallSixOp(CSO))=>`#gas[_,_]_EVM_InternalOp_OpCode_OpCode`(#SemanticCastToCallSixOp(CSO),`________EVM_InternalOp_CallSixOp_Int_Int_Int_Int_Int_Int`(#SemanticCastToCallSixOp(CSO),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2),#SemanticCastToInt(W3),#SemanticCastToInt(W4),#SemanticCastToInt(W5)))~>`________EVM_InternalOp_CallSixOp_Int_Int_Int_Int_Int_Int`(#SemanticCastToCallSixOp(CSO),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2),#SemanticCastToInt(W3),#SemanticCastToInt(W4),#SemanticCastToInt(W5)),#dots(.KList)),`<wordStack>`(#noDots(.KList),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W1),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W2),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W3),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W4),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W5),#SemanticCastToWordStack(WS)))))))=>#SemanticCastToWordStack(WS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(464,10,464,186)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#exec[_]_EVM_InternalOp_OpCode`(#SemanticCastToCallOp(CO))=>`#gas[_,_]_EVM_InternalOp_OpCode_OpCode`(#SemanticCastToCallOp(CO),`_________EVM_InternalOp_CallOp_Int_Int_Int_Int_Int_Int_Int`(#SemanticCastToCallOp(CO),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2),#SemanticCastToInt(W3),#SemanticCastToInt(W4),#SemanticCastToInt(W5),#SemanticCastToInt(W6)))~>`_________EVM_InternalOp_CallOp_Int_Int_Int_Int_Int_Int_Int`(#SemanticCastToCallOp(CO),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2),#SemanticCastToInt(W3),#SemanticCastToInt(W4),#SemanticCastToInt(W5),#SemanticCastToInt(W6)),#dots(.KList)),`<wordStack>`(#noDots(.KList),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W1),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W2),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W3),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W4),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W5),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W6),#SemanticCastToWordStack(WS))))))))=>#SemanticCastToWordStack(WS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(465,10,465,186)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#exec[_]_EVM_InternalOp_OpCode`(#SemanticCastToBinStackOp(BOP))=>`#gas[_,_]_EVM_InternalOp_OpCode_OpCode`(#SemanticCastToBinStackOp(BOP),`____EVM_InternalOp_BinStackOp_Int_Int`(#SemanticCastToBinStackOp(BOP),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))~>`____EVM_InternalOp_BinStackOp_Int_Int`(#SemanticCastToBinStackOp(BOP),#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#dots(.KList)),`<wordStack>`(#noDots(.KList),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W1),#SemanticCastToWordStack(WS)))=>#SemanticCastToWordStack(WS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(445,10,445,155)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#end__EVM_KItem_StatusCode`(#SemanticCastToStatusCode(SC))=>`#halt_EVM_KItem`(.KList),#dots(.KList)),`<statusCode>`(#noDots(.KList),#SemanticCastToStatusCode(_)=>#SemanticCastToStatusCode(SC),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM.end), org.kframework.attributes.Location(Location(263,10,264,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#ecpairing(_,_,_,_,_)_EVM_InternalOp_List_List_Int_Bytes_Int`(#SemanticCastToList(A),#SemanticCastToList(B),#SemanticCastToInt(LEN),#SemanticCastToBytes(_),#SemanticCastToInt(LEN))=>`#end__EVM_KItem_StatusCode`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList)),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("32","Int"),`#asByteStack(_)_EVM-TYPES_Bytes_Int`(`bool2Word(_)_EVM-TYPES_Int_Bool`(`BN128AtePairing(_,_)_KRYPTO_Bool_List_List`(#SemanticCastToList(A),#SemanticCastToList(B))))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1759,10,1760,97)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#ecmul(_,_)_EVM_InternalOp_G1Point_Int`(#SemanticCastToG1Point(P),#SemanticCastToInt(S))=>`#end__EVM_KItem_StatusCode`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList)),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#point(_)_EVM_Bytes_G1Point`(`BN128Mul(_,_)_KRYPTO_G1Point_G1Point_Int`(#SemanticCastToG1Point(P),#SemanticCastToInt(S))),#noDots(.KList))) requires `isValidPoint(_)_KRYPTO_Bool_G1Point`(#SemanticCastToG1Point(P)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1739,10,1740,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#ecadd(_,_)_EVM_InternalOp_G1Point_G1Point`(#SemanticCastToG1Point(P1),#SemanticCastToG1Point(P2))=>`#end__EVM_KItem_StatusCode`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList)),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#point(_)_EVM_Bytes_G1Point`(`BN128Add(_,_)_KRYPTO_G1Point_G1Point_G1Point`(#SemanticCastToG1Point(P1),#SemanticCastToG1Point(P2))),#noDots(.KList))) requires `_andBool_`(`isValidPoint(_)_KRYPTO_Bool_G1Point`(#SemanticCastToG1Point(P1)),`isValidPoint(_)_KRYPTO_Bool_G1Point`(#SemanticCastToG1Point(P2))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1727,10,1728,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#dropWorldState_EVM_InternalOp`(.KList)=>.K,#dots(.KList)),`<interimStates>`(#noDots(.KList),`_List_`(`ListItem`(#SemanticCastToKItem(_)),#SemanticCastToList(REST))=>#SemanticCastToList(REST),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(247,10,247,101)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#dropCallStack_EVM_InternalOp`(.KList)=>.K,#dots(.KList)),`<callStack>`(#noDots(.KList),`_List_`(`ListItem`(#SemanticCastToKItem(_)),#SemanticCastToList(REST))=>#SemanticCastToList(REST),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(215,10,216,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#deleteAccounts(_)_EVM_InternalOp_List`(`_List_`(`ListItem`(#SemanticCastToInt(ACCT)),#SemanticCastToList(ACCTS)))=>`#deleteAccounts(_)_EVM_InternalOp_List`(#SemanticCastToList(ACCTS)),#dots(.KList)),`<accounts>`(#noDots(.KList),`<account>`(#noDots(.KList),`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),#dots(.KList))=>#cells(.KList),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(617,10,626,21)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#call________EVM_InternalOp_Int_Int_Int_Int_Int_Bytes_Bool`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(ACCTCODE),#SemanticCastToInt(VALUE),#SemanticCastToInt(APPVALUE),#SemanticCastToBytes(ARGS),#SemanticCastToBool(STATIC))=>`#callWithCode_________EVM_InternalOp_Int_Int_Int_Bytes_Int_Int_Bytes_Bool`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(ACCTCODE),#SemanticCastToBytes(CODE),#SemanticCastToInt(VALUE),#SemanticCastToInt(APPVALUE),#SemanticCastToBytes(ARGS),#SemanticCastToBool(STATIC)),#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTCODE),#noDots(.KList)),`<code>`(#noDots(.KList),#SemanticCastToBytes(CODE),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1246,10,1254,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#addr[_]_EVM_InternalOp_OpCode`(#SemanticCastToOpCode(OP))=>.K,#dots(.KList)),`<wordStack>`(#noDots(.KList),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(_W0),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W1)=>`#addr(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W1)),#SemanticCastToWordStack(_WS))),#noDots(.KList))) requires `isAddr2Op(_)_EVM_Bool_OpCode`(#SemanticCastToOpCode(OP)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(480,10,482,29)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#addr[_]_EVM_InternalOp_OpCode`(#SemanticCastToOpCode(OP))=>.K,#dots(.KList)),`<wordStack>`(#noDots(.KList),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0)=>`#addr(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0)),#SemanticCastToWordStack(_WS)),#noDots(.KList))) requires `isAddr1Op(_)_EVM_Bool_OpCode`(#SemanticCastToOpCode(OP)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(476,10,478,29)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#access[_,_]_EVM_InternalOp_OpCode_OpCode`(#SemanticCastToOpCode(_),#SemanticCastToOpCode(_))=>.K,#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(_),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1918,10,1918,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule #cells(`<k>`(#noDots(.KList),`#access[_,_]_EVM_InternalOp_OpCode_OpCode`(#SemanticCastToOpCode(OP),#SemanticCastToOpCode(AOP))=>`#gasAccess(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),#SemanticCastToOpCode(AOP))~>`#deductGas_EVM_InternalOp`(.KList),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires `_andBool_`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)),`#usesAccessList(_)_EVM_Bool_OpCode`(#SemanticCastToOpCode(OP))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1914,10,1916,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#accessStorage___EVM_KItem_Account_Int`(#SemanticCastToAccount(ACCT),#SemanticCastToInt(INDEX))=>.K,#dots(.KList)),`<accessedStorage>`(#noDots(.KList),#SemanticCastToMap(TS)=>`Map:update`(#SemanticCastToMap(TS),#SemanticCastToAccount(ACCT),`SetItem`(#SemanticCastToInt(INDEX))),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToAccount(ACCT),#SemanticCastToMap(TS))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1319,10,1321,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#accessStorage___EVM_KItem_Account_Int`(#SemanticCastToAccount(ACCT),#SemanticCastToInt(INDEX))=>.K,#dots(.KList)),`<accessedStorage>`(#dots(.KList),`_|->_`(#SemanticCastToAccount(ACCT),#SemanticCastToSet(TS)=>`_|Set__SET_Set_Set_Set`(#SemanticCastToSet(TS),`SetItem`(#SemanticCastToInt(INDEX)))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1317,10,1318,98)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#accessAccounts__EVM_KItem_Set`(#SemanticCastToSet(ADDRSET))=>.K,#dots(.KList)),`<accessedAccounts>`(#noDots(.KList),#SemanticCastToSet(TOUCHED_ACCOUNTS)=>`_|Set__SET_Set_Set_Set`(#SemanticCastToSet(TOUCHED_ACCOUNTS),#SemanticCastToSet(ADDRSET)),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1335,10,1336,98)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#accessAccounts__EVM_KItem_Account`(#SemanticCastToAccount(ADDR))=>.K,#dots(.KList)),`<accessedAccounts>`(#noDots(.KList),#SemanticCastToSet(TOUCHED_ACCOUNTS)=>`_|Set__SET_Set_Set_Set`(#SemanticCastToSet(TOUCHED_ACCOUNTS),`SetItem`(#SemanticCastToAccount(ADDR))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1332,10,1333,104)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),#SemanticCastToInt(W0)~>`#push_EVM_InternalOp`(.KList)=>.K,#dots(.KList)),`<wordStack>`(#noDots(.KList),#SemanticCastToWordStack(WS)=>`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),#SemanticCastToWordStack(WS)),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(727,10,727,82)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),#SemanticCastToGas(GCALL)~>`#allocateCallGas_EVM_InternalOp`(.KList)=>.K,#dots(.KList)),`<callGas>`(#noDots(.KList),#SemanticCastToGas(_)=>#SemanticCastToGas(GCALL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2128,10,2129,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),#SemanticCastToGas(G)~>`#deductGas_EVM_InternalOp`(.KList)=>`#end__EVM_KItem_StatusCode`(`EVMC_OUT_OF_GAS_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL),#noDots(.KList))) requires `_<Gas__GAS-SYNTAX_Bool_Gas_Gas`(#SemanticCastToGas(GAVAIL),#SemanticCastToGas(G)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1824,10,1824,131)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),#SemanticCastToGas(G)~>`#deductGas_EVM_InternalOp`(.KList)=>.K,#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL)=>`_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToGas(GAVAIL),#SemanticCastToGas(G)),#noDots(.KList))) requires `_<=Gas__GAS-SYNTAX_Bool_Gas_Gas`(#SemanticCastToGas(G),#SemanticCastToGas(GAVAIL)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1825,10,1825,132)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(`<statusCode>`(#noDots(.KList),`EVMC_REVERT_NETWORK_EndStatusCode`(.KList),#noDots(.KList)),`<k>`(#noDots(.KList),`#halt_EVM_KItem`(.KList)~>`#codeDeposit__EVM_KItem_Int`(#SemanticCastToInt(_))=>`#popCallStack_EVM_InternalOp`(.KList)~>`#popWorldState_EVM_InternalOp`(.KList)~>`#refund__EVM_InternalOp_Gas`(#SemanticCastToGas(GAVAIL))~>#token("0","Int")~>`#push_EVM_InternalOp`(.KList),#dots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1513,10,1515,29)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<statusCode>`(#noDots(.KList),#SemanticCastToExceptionalStatusCode(_),#noDots(.KList)),`<k>`(#noDots(.KList),`#halt_EVM_KItem`(.KList)~>`#return___EVM_KItem_Int_Int`(#SemanticCastToInt(_),#SemanticCastToInt(_))=>`#popCallStack_EVM_InternalOp`(.KList)~>`#popWorldState_EVM_InternalOp`(.KList)~>#token("0","Int")~>`#push_EVM_InternalOp`(.KList),#dots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM.return.exception), org.kframework.attributes.Location(Location(1361,10,1366,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<statusCode>`(#noDots(.KList),#SemanticCastToExceptionalStatusCode(_),#noDots(.KList)),`<k>`(#noDots(.KList),`#halt_EVM_KItem`(.KList)~>`#finishCodeDeposit___EVM_KItem_Int_Bytes`(#SemanticCastToInt(_),#SemanticCastToBytes(_))=>`#popCallStack_EVM_InternalOp`(.KList)~>`#popWorldState_EVM_InternalOp`(.KList)~>#token("0","Int")~>`#push_EVM_InternalOp`(.KList),#dots(.KList))),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires `_=/=K_`(#SemanticCastToSchedule(SCHED),`FRONTIER_EVM`(.KList)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1555,10,1558,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(`<statusCode>`(#noDots(.KList),#SemanticCastToExceptionalStatusCode(_),#noDots(.KList)),`<k>`(#noDots(.KList),`#halt_EVM_KItem`(.KList)~>`#codeDeposit__EVM_KItem_Int`(#SemanticCastToInt(_))=>`#popCallStack_EVM_InternalOp`(.KList)~>`#popWorldState_EVM_InternalOp`(.KList)~>#token("0","Int")~>`#push_EVM_InternalOp`(.KList),#dots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1510,10,1511,126)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`_________EVM_InternalOp_CallOp_Int_Int_Int_Int_Int_Int_Int`(`CALL_EVM_CallOp`(.KList),#SemanticCastToInt(_GCAP),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH),#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH))=>`#checkCall___EVM_InternalOp_Int_Int`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(VALUE))~>`#call________EVM_InternalOp_Int_Int_Int_Int_Int_Bytes_Bool`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE),#SemanticCastToInt(VALUE),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH)),#token("false","Bool"))~>`#return___EVM_KItem_Int_Int`(#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH)),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM.call), org.kframework.attributes.Location(Location(1408,10,1415,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`_________EVM_InternalOp_CallOp_Int_Int_Int_Int_Int_Int_Int`(`CALLCODE_EVM_CallOp`(.KList),#SemanticCastToInt(_GCAP),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH),#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH))=>`#checkCall___EVM_InternalOp_Int_Int`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(VALUE))~>`#call________EVM_InternalOp_Int_Int_Int_Int_Int_Bytes_Bool`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE),#SemanticCastToInt(VALUE),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH)),#token("false","Bool"))~>`#return___EVM_KItem_Int_Int`(#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH)),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM.callcode), org.kframework.attributes.Location(Location(1420,10,1427,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`________EVM_InternalOp_CallSixOp_Int_Int_Int_Int_Int_Int`(`STATICCALL_EVM_CallSixOp`(.KList),#SemanticCastToInt(_GCAP),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH),#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH))=>`#checkCall___EVM_InternalOp_Int_Int`(#SemanticCastToInt(ACCTFROM),#token("0","Int"))~>`#call________EVM_InternalOp_Int_Int_Int_Int_Int_Bytes_Bool`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(ACCTTO),#token("0","Int"),#token("0","Int"),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH)),#token("true","Bool"))~>`#return___EVM_KItem_Int_Int`(#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH)),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM.staticcall), org.kframework.attributes.Location(Location(1446,10,1453,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`______EVM_InternalOp_QuadStackOp_Int_Int_Int_Int`(`EXTCODECOPY_EVM_QuadStackOp`(.KList),#SemanticCastToInt(ACCT),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(PGMSTART),#SemanticCastToInt(WIDTH))=>.K,#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM)=>`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(PGM),#SemanticCastToInt(PGMSTART),#SemanticCastToInt(WIDTH))),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<code>`(#noDots(.KList),#SemanticCastToBytes(PGM),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1166,10,1172,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`______EVM_InternalOp_QuadStackOp_Int_Int_Int_Int`(`CREATE2_EVM_QuadStackOp`(.KList),#SemanticCastToInt(VALUE),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH),#SemanticCastToInt(SALT))=>`#accessAccounts__EVM_KItem_Account`(`#newAddr(_,_,_)_SERIALIZATION_Int_Int_Int_Bytes`(#SemanticCastToInt(ACCT),#SemanticCastToInt(SALT),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH))))~>`#checkCall___EVM_InternalOp_Int_Int`(#SemanticCastToInt(ACCT),#SemanticCastToInt(VALUE))~>`#create_____EVM_InternalOp_Int_Int_Int_Bytes`(#SemanticCastToInt(ACCT),`#newAddr(_,_,_)_SERIALIZATION_Int_Int_Int_Bytes`(#SemanticCastToInt(ACCT),#SemanticCastToInt(SALT),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH))),#SemanticCastToInt(VALUE),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH)))~>`#codeDeposit__EVM_KItem_Int`(`#newAddr(_,_,_)_SERIALIZATION_Int_Int_Int_Bytes`(#SemanticCastToInt(ACCT),#SemanticCastToInt(SALT),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH)))),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM.create2), org.kframework.attributes.Location(Location(1589,10,1597,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`RETURNDATACOPY_EVM_TernStackOp`(.KList),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(DATASTART),#SemanticCastToInt(DATAWIDTH))=>.K,#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM)=>`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(RD),#SemanticCastToInt(DATASTART),#SemanticCastToInt(DATAWIDTH))),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(RD),#noDots(.KList))) requires `_<=Int_`(`_+Int_`(#SemanticCastToInt(DATASTART),#SemanticCastToInt(DATAWIDTH)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(RD))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1096,10,1099,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`CODECOPY_EVM_TernStackOp`(.KList),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(PGMSTART),#SemanticCastToInt(WIDTH))=>.K,#dots(.KList)),`<program>`(#noDots(.KList),#SemanticCastToBytes(PGM),#noDots(.KList))),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM)=>`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(PGM),#SemanticCastToInt(PGMSTART),#SemanticCastToInt(WIDTH))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(982,10,984,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`CALLDATACOPY_EVM_TernStackOp`(.KList),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(DATASTART),#SemanticCastToInt(DATAWIDTH))=>.K,#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM)=>`_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(CD),#SemanticCastToInt(DATASTART),#SemanticCastToInt(DATAWIDTH))),#noDots(.KList))),`<callData>`(#noDots(.KList),#SemanticCastToBytes(CD),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1079,10,1081,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`SSTORE_EVM_BinStackOp`(.KList),#SemanticCastToInt(INDEX),#SemanticCastToInt(NEW))=>.K,#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<storage>`(#noDots(.KList),#SemanticCastToMap(STORAGE)=>`Map:update`(#SemanticCastToMap(STORAGE),#SemanticCastToInt(INDEX),#SemanticCastToInt(NEW)),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1195,10,1201,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`REVERT_EVM_BinStackOp`(.KList),#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH))=>`#end__EVM_KItem_StatusCode`(`EVMC_REVERT_NETWORK_EndStatusCode`(.KList)),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH)),#noDots(.KList))),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1057,10,1059,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`RETURN_EVM_BinStackOp`(.KList),#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH))=>`#end__EVM_KItem_StatusCode`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList)),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH)),#noDots(.KList))),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1051,10,1053,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`SLOAD_EVM_UnStackOp`(.KList),#SemanticCastToInt(INDEX))=>`#lookup(_,_)_EVM-TYPES_Int_Map_Int`(#SemanticCastToMap(STORAGE),#SemanticCastToInt(INDEX))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<storage>`(#noDots(.KList),#SemanticCastToMap(STORAGE),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1185,10,1191,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`JUMP_EVM_UnStackOp`(.KList),#SemanticCastToInt(DEST))=>`#endBasicBlock_EVM_InternalOp`(.KList),#dots(.KList)),`<pc>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(DEST),#noDots(.KList))),`<jumpDests>`(#noDots(.KList),#SemanticCastToSet(DESTS),#noDots(.KList))) requires `Set:in`(#SemanticCastToInt(DEST),#SemanticCastToSet(DESTS)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1021,10,1024,29)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`BLOCKHASH_EVM_UnStackOp`(.KList),#SemanticCastToInt(N))=>`#blockhash(_,_,_,_)_EVM_Int_List_Int_Int_Int`(#SemanticCastToList(HASHES),#SemanticCastToInt(N),`_-Int_`(#SemanticCastToInt(HI),#token("1","Int")),#token("0","Int"))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<number>`(#noDots(.KList),#SemanticCastToInt(HI),#noDots(.KList))),`<blockhashes>`(#noDots(.KList),#SemanticCastToList(HASHES),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(994,10,996,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`SHA256_EVM_PrecompiledOp`(.KList)=>`#end__EVM_KItem_StatusCode`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList)),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#parseHexBytes(_)_SERIALIZATION_Bytes_String`(`Sha256(_)_KRYPTO_String_String`(unparseByteStack(#SemanticCastToBytes(DATA)))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1685,10,1687,81)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`SELFBALANCE_EVM_NullStackOp`(.KList)=>#SemanticCastToInt(BAL)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BAL),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(967,10,973,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`RIP160_EVM_PrecompiledOp`(.KList)=>`#end__EVM_KItem_StatusCode`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList)),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("32","Int"),`#parseHexBytes(_)_SERIALIZATION_Bytes_String`(`RipEmd160(_)_KRYPTO_String_String`(unparseByteStack(#SemanticCastToBytes(DATA))))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1691,10,1693,101)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`PUSH(_)_EVM_PushOp_Int`(#SemanticCastToInt(N))=>`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(PGM),`_+Int_`(#SemanticCastToInt(PCOUNT),#token("1","Int")),#SemanticCastToInt(N)))~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<pc>`(#noDots(.KList),#SemanticCastToInt(PCOUNT),#noDots(.KList))),`<program>`(#noDots(.KList),#SemanticCastToBytes(PGM),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(850,10,852,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`MODEXP_EVM_PrecompiledOp`(.KList)=>`#end__EVM_KItem_StatusCode`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList)),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#modexp1(_,_,_,_)_EVM_Bytes_Int_Int_Int_Bytes`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("0","Int"),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("32","Int"),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("64","Int"),#token("32","Int"))),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("96","Int"),`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#token("0","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(DATA)),#token("96","Int"))))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1703,10,1705,190)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`ID_EVM_PrecompiledOp`(.KList)=>`#end__EVM_KItem_StatusCode`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList)),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>#SemanticCastToBytes(DATA),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1697,10,1699,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`ECREC_EVM_PrecompiledOp`(.KList)=>`#end__EVM_KItem_StatusCode`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList)),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#ecrec(_,_,_,_)_EVM_Bytes_Bytes_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("0","Int"),#token("32","Int")),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("32","Int"),#token("32","Int")),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("64","Int"),#token("32","Int")),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("96","Int"),#token("32","Int"))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1671,10,1673,127)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`BLAKE2F_EVM_PrecompiledOp`(.KList)=>`#end__EVM_KItem_StatusCode`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList)),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#parseByteStack(_)_SERIALIZATION_Bytes_String`(`Blake2Compress(_)_KRYPTO_String_String`(unparseByteStack(#SemanticCastToBytes(DATA)))),#noDots(.KList))),`<callData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))) requires `_andBool_`(`_==Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(DATA)),#token("213","Int")),`_<=Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(DATA),#token("212","Int")),#token("1","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1771,10,1775,33)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#transferFunds____EVM_InternalOp_Int_Int_Int`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE))=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(ORIGFROM)=>`_-Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(ORIGFROM),#SemanticCastToInt(VALUE)),#noDots(.KList))),#dots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTTO),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(ORIGTO)=>`_+Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(ORIGTO),#SemanticCastToInt(VALUE)),#noDots(.KList))),#dots(.KList))) requires `_andBool_`(`_=/=K_`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO)),`_<=Int_`(#SemanticCastToInt(VALUE),#SemanticCastToInt(ORIGFROM))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(789,10,800,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#pushCallStack_EVM_InternalOp`(.KList)=>.K,#dots(.KList)),`<callStack>`(#noDots(.KList),#SemanticCastToList(STACK)=>`_List_`(`ListItem`(#SemanticCastToBag(CALLSTATE)),#SemanticCastToList(STACK)),#noDots(.KList))),`<callState>`(#noDots(.KList),#SemanticCastToBag(CALLSTATE),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(203,10,205,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#popCallStack_EVM_InternalOp`(.KList)=>.K,#dots(.KList)),`<callStack>`(#noDots(.KList),`_List_`(`ListItem`(#SemanticCastToBag(CALLSTATE)),#SemanticCastToList(REST))=>#SemanticCastToList(REST),#noDots(.KList))),`<callState>`(#noDots(.KList),#SemanticCastToBag(_)=>#SemanticCastToBag(CALLSTATE),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(209,10,211,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#next[_]_EVM_InternalOp_MaybeOpCode`(#SemanticCastToOpCode(OP))=>`#end__EVM_KItem_StatusCode`(`EVMC_STATIC_MODE_VIOLATION_NETWORK_ExceptionalStatusCode`(.KList)),#dots(.KList)),`<wordStack>`(#noDots(.KList),#SemanticCastToWordStack(WS),#noDots(.KList))),`<static>`(#noDots(.KList),#SemanticCastToBool(STATIC),#noDots(.KList))) requires `_andBool_`(`_andBool_`(#SemanticCastToBool(STATIC),`#changesState(_,_)_EVM_Bool_OpCode_WordStack`(#SemanticCastToOpCode(OP),#SemanticCastToWordStack(WS))),`notBool_`(`_orBool_`(`#stackUnderflow(_,_)_EVM_Bool_WordStack_OpCode`(#SemanticCastToWordStack(WS),#SemanticCastToOpCode(OP)),`#stackOverflow(_,_)_EVM_Bool_WordStack_OpCode`(#SemanticCastToWordStack(WS),#SemanticCastToOpCode(OP))))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(338,10,342,81)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#next[_]_EVM_InternalOp_MaybeOpCode`(#SemanticCastToOpCode(OP))=>`#addr[_]_EVM_InternalOp_OpCode`(#SemanticCastToOpCode(OP))~>`#exec[_]_EVM_InternalOp_OpCode`(#SemanticCastToOpCode(OP))~>`#pc[_]_EVM_InternalOp_OpCode`(#SemanticCastToOpCode(OP)),#dots(.KList)),`<wordStack>`(#noDots(.KList),#SemanticCastToWordStack(WS),#noDots(.KList))),`<static>`(#noDots(.KList),#SemanticCastToBool(STATIC),#noDots(.KList))) requires `_andBool_`(`notBool_`(`_orBool_`(`#stackUnderflow(_,_)_EVM_Bool_WordStack_OpCode`(#SemanticCastToWordStack(WS),#SemanticCastToOpCode(OP)),`#stackOverflow(_,_)_EVM_Bool_WordStack_OpCode`(#SemanticCastToWordStack(WS),#SemanticCastToOpCode(OP)))),`notBool_`(`_andBool_`(#SemanticCastToBool(STATIC),`#changesState(_,_)_EVM_Bool_OpCode_WordStack`(#SemanticCastToOpCode(OP),#SemanticCastToWordStack(WS))))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(319,10,328,64)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#mkCodeDeposit__EVM_KItem_Int`(#SemanticCastToInt(_ACCT))=>`#popCallStack_EVM_InternalOp`(.KList)~>`#popWorldState_EVM_InternalOp`(.KList)~>#token("0","Int")~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(OUT)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList))) requires `notBool_`(`_andBool_`(`_<=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(OUT)),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`maxCodeSize_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),`#isValidCode(_,_)_EVM_Bool_Bytes_Schedule`(#SemanticCastToBytes(OUT),#SemanticCastToSchedule(SCHED)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1529,10,1532,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#mkCodeDeposit__EVM_KItem_Int`(#SemanticCastToInt(ACCT))=>`_*Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcodedeposit_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(OUT)))~>`#deductGas_EVM_InternalOp`(.KList)~>`#finishCodeDeposit___EVM_KItem_Int_Bytes`(#SemanticCastToInt(ACCT),#SemanticCastToBytes(OUT)),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(OUT)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList))) requires `_andBool_`(`_<=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(OUT)),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`maxCodeSize_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),`#isValidCode(_,_)_EVM_Bool_Bytes_Schedule`(#SemanticCastToBytes(OUT),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1520,10,1527,93)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#loadProgram__EVM_KItem_Bytes`(#SemanticCastToBytes(BYTES))=>.K,#dots(.KList)),`<program>`(#noDots(.KList),#SemanticCastToBytes(_)=>#SemanticCastToBytes(BYTES),#noDots(.KList))),`<jumpDests>`(#noDots(.KList),#SemanticCastToSet(_)=>`#computeValidJumpDests(_)_EVM_Set_Bytes`(#SemanticCastToBytes(BYTES)),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1304,10,1306,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`_________EVM_InternalOp_CallOp_Int_Int_Int_Int_Int_Int_Int`(`CALL_EVM_CallOp`(.KList),#SemanticCastToInt(GCAP),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`Ccallgas(_,_,_,_,_,_)_EVM_Exp_Schedule_BExp_Gas_Gas_Int_Bool`(#SemanticCastToSchedule(SCHED),`#accountNonexistent(_)_EVM_BExp_Int`(#SemanticCastToInt(ACCTTO)),#SemanticCastToInt(GCAP),#SemanticCastToGas(GAVAIL),#SemanticCastToInt(VALUE),`Set:in`(#SemanticCastToInt(ACCTTO),#SemanticCastToSet(ACCTS)))~>`#allocateCallGas_EVM_InternalOp`(.KList)~>`Ccall(_,_,_,_,_,_)_EVM_Exp_Schedule_BExp_Gas_Gas_Int_Bool`(#SemanticCastToSchedule(SCHED),`#accountNonexistent(_)_EVM_BExp_Int`(#SemanticCastToInt(ACCTTO)),#SemanticCastToInt(GCAP),#SemanticCastToGas(GAVAIL),#SemanticCastToInt(VALUE),`Set:in`(#SemanticCastToInt(ACCTTO),#SemanticCastToSet(ACCTS))),#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL),#noDots(.KList))),`<accessedAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1974,10,1980,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`________EVM_InternalOp_CallSixOp_Int_Int_Int_Int_Int_Int`(`STATICCALL_EVM_CallSixOp`(.KList),#SemanticCastToInt(GCAP),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`Ccallgas(_,_,_,_,_,_)_EVM_Exp_Schedule_BExp_Gas_Gas_Int_Bool`(#SemanticCastToSchedule(SCHED),`#accountNonexistent(_)_EVM_BExp_Int`(#SemanticCastToInt(ACCTTO)),#SemanticCastToInt(GCAP),#SemanticCastToGas(GAVAIL),#token("0","Int"),`Set:in`(#SemanticCastToInt(ACCTTO),#SemanticCastToSet(ACCTS)))~>`#allocateCallGas_EVM_InternalOp`(.KList)~>`Ccall(_,_,_,_,_,_)_EVM_Exp_Schedule_BExp_Gas_Gas_Int_Bool`(#SemanticCastToSchedule(SCHED),`#accountNonexistent(_)_EVM_BExp_Int`(#SemanticCastToInt(ACCTTO)),#SemanticCastToInt(GCAP),#SemanticCastToGas(GAVAIL),#token("0","Int"),`Set:in`(#SemanticCastToInt(ACCTTO),#SemanticCastToSet(ACCTS))),#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL),#noDots(.KList))),`<accessedAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2000,10,2006,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`SLOAD_EVM_UnStackOp`(.KList),#SemanticCastToInt(INDEX)))=>`Csload(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(SCHED),`#inStorage(_,_,_)_EVM_Bool_Map_Account_Int`(#SemanticCastToMap(TS),#SemanticCastToAccount(ACCT),#SemanticCastToInt(INDEX))),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToAccount(ACCT),#noDots(.KList))),`<accessedStorage>`(#noDots(.KList),#SemanticCastToMap(TS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2033,10,2035,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#gasAccess(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`SSTORE_EVM_BinStackOp`(.KList),#SemanticCastToInt(INDEX),#SemanticCastToInt(_)))=>`#accessStorage___EVM_KItem_Account_Int`(#SemanticCastToAccount(ACCT),#SemanticCastToInt(INDEX))~>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`#inStorage(_,_,_)_EVM_Bool_Map_Account_Int`(#SemanticCastToMap(TS),#SemanticCastToAccount(ACCT),#SemanticCastToInt(INDEX)),#token("0","Int"),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcoldsload_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToAccount(ACCT),#noDots(.KList))),`<accessedStorage>`(#noDots(.KList),#SemanticCastToMap(TS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1932,10,1932,228)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#finishCodeDeposit___EVM_KItem_Int_Bytes`(#SemanticCastToInt(ACCT),#SemanticCastToBytes(OUT))=>`#popCallStack_EVM_InternalOp`(.KList)~>`#dropWorldState_EVM_InternalOp`(.KList)~>`#refund__EVM_InternalOp_Gas`(#SemanticCastToGas(GAVAIL))~>#SemanticCastToInt(ACCT)~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<code>`(#noDots(.KList),#SemanticCastToAccountCode(_)=>#SemanticCastToBytes(OUT),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1534,10,1544,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#checkCall___EVM_InternalOp_Int_Int`(#SemanticCastToInt(ACCT),#SemanticCastToInt(VALUE))=>.K,#dots(.KList)),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BAL),#noDots(.KList))),`<nonce>`(#noDots(.KList),#SemanticCastToInt(NONCE),#noDots(.KList))),#dots(.KList))) requires `notBool_`(`_orBool_`(`_orBool_`(`_>Int_`(#SemanticCastToInt(VALUE),#SemanticCastToInt(BAL)),`_>=Int_`(#SemanticCastToInt(CD),#token("1024","Int"))),`notBool_`(`#rangeNonce(_)_WORD_Bool_Int`(#SemanticCastToInt(NONCE))))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1236,11,1244,95)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#accountNonexistent(_)_EVM_BExp_Int`(#SemanticCastToInt(ACCT))=>`_andBool_`(accountEmpty(#SemanticCastToAccountCode(CODE),#SemanticCastToInt(NONCE),#SemanticCastToInt(BAL)),`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gemptyisnonexistent_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(#cells(#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BAL),#noDots(.KList))),`<nonce>`(#noDots(.KList),#SemanticCastToInt(NONCE),#noDots(.KList))),`<code>`(#noDots(.KList),#SemanticCastToAccountCode(CODE),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2162,10,2170,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),#SemanticCastToInt(MU')~>`#deductMemory_EVM_InternalOp`(.KList)=>`_-Int_`(`Cmem(_,_)_GAS-FEES_Int_Schedule_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(MU')),`Cmem(_,_)_GAS-FEES_Int_Schedule_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(MU)))~>`#deductMemoryGas_EVM_InternalOp`(.KList),#dots(.KList)),`<memoryUsed>`(#noDots(.KList),#SemanticCastToInt(MU)=>#SemanticCastToInt(MU'),#noDots(.KList))),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1820,10,1821,75)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(`<statusCode>`(#noDots(.KList),`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList),#noDots(.KList)),`<k>`(#noDots(.KList),`#halt_EVM_KItem`(.KList)~>`#return___EVM_KItem_Int_Int`(#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH))=>`#popCallStack_EVM_InternalOp`(.KList)~>`#dropWorldState_EVM_InternalOp`(.KList)~>#token("1","Int")~>`#push_EVM_InternalOp`(.KList)~>`#refund__EVM_InternalOp_Gas`(#SemanticCastToGas(GAVAIL))~>`#setLocalMem____EVM_InternalOp_Int_Int_Bytes`(#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH),#SemanticCastToBytes(OUT)),#dots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(OUT),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM.return.success), org.kframework.attributes.Location(Location(1379,10,1386,29)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(`<statusCode>`(#noDots(.KList),`EVMC_REVERT_NETWORK_EndStatusCode`(.KList),#noDots(.KList)),`<k>`(#noDots(.KList),`#halt_EVM_KItem`(.KList)~>`#return___EVM_KItem_Int_Int`(#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH))=>`#popCallStack_EVM_InternalOp`(.KList)~>`#popWorldState_EVM_InternalOp`(.KList)~>#token("0","Int")~>`#push_EVM_InternalOp`(.KList)~>`#refund__EVM_InternalOp_Gas`(#SemanticCastToGas(GAVAIL))~>`#setLocalMem____EVM_InternalOp_Int_Int_Bytes`(#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH),#SemanticCastToBytes(OUT)),#dots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(OUT),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM.return.revert), org.kframework.attributes.Location(Location(1369,10,1376,29)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(`<statusCode>`(#noDots(.KList),#SemanticCastToExceptionalStatusCode(_),#noDots(.KList)),`<k>`(#noDots(.KList),`#halt_EVM_KItem`(.KList)~>`#finishCodeDeposit___EVM_KItem_Int_Bytes`(#SemanticCastToInt(ACCT),#SemanticCastToBytes(_))=>`#popCallStack_EVM_InternalOp`(.KList)~>`#dropWorldState_EVM_InternalOp`(.KList)~>`#refund__EVM_InternalOp_Gas`(#SemanticCastToGas(GAVAIL))~>#SemanticCastToInt(ACCT)~>`#push_EVM_InternalOp`(.KList),#dots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL),#noDots(.KList))),`<schedule>`(#noDots(.KList),`FRONTIER_EVM`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1546,10,1553,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList)),`<k>`(#noDots(.KList),`#allocateCreateGas_EVM_InternalOp`(.KList)=>.K,#dots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gstaticcalldepth_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)),#token("0","Int"),`_/Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToGas(GAVAIL),#token("64","Int"))),#noDots(.KList))),`<callGas>`(#noDots(.KList),#SemanticCastToGas(_)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gstaticcalldepth_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToGas(GAVAIL),`#allBut64th(_)_GAS-FEES_Gas_Gas`(#SemanticCastToGas(GAVAIL))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2133,10,2136,116)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), preserves-definedness]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),``.K=>`#next[_]_EVM_InternalOp_MaybeOpCode`(`#lookupOpCode(_,_,_)_EVM_MaybeOpCode_Bytes_Int_Schedule`(#SemanticCastToBytes(PGM),#SemanticCastToInt(PCOUNT),#SemanticCastToSchedule(SCHED)))``~>`#execute_EVM_KItem`(.KList),#dots(.KList)),`<program>`(#noDots(.KList),#SemanticCastToBytes(PGM),#noDots(.KList))),`<pc>`(#noDots(.KList),#SemanticCastToInt(PCOUNT),#noDots(.KList))),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM.step), org.kframework.attributes.Location(Location(296,10,299,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`CREATE_EVM_TernStackOp`(.KList),#SemanticCastToInt(VALUE),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH))=>`#accessAccounts__EVM_KItem_Account`(`#newAddr(_,_)_SERIALIZATION_Int_Int_Int`(#SemanticCastToInt(ACCT),#SemanticCastToInt(NONCE)))~>`#checkCall___EVM_InternalOp_Int_Int`(#SemanticCastToInt(ACCT),#SemanticCastToInt(VALUE))~>`#create_____EVM_InternalOp_Int_Int_Int_Bytes`(#SemanticCastToInt(ACCT),`#newAddr(_,_)_SERIALIZATION_Int_Int_Int`(#SemanticCastToInt(ACCT),#SemanticCastToInt(NONCE)),#SemanticCastToInt(VALUE),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH)))~>`#codeDeposit__EVM_KItem_Int`(`#newAddr(_,_)_SERIALIZATION_Int_Int_Int`(#SemanticCastToInt(ACCT),#SemanticCastToInt(NONCE))),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<nonce>`(#noDots(.KList),#SemanticCastToInt(NONCE),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM.create), org.kframework.attributes.Location(Location(1567,10,1580,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#startBlock_EVM_EthereumCommand`(.KList)=>.K,#dots(.KList)),`<gasUsed>`(#noDots(.KList),#SemanticCastToGas(_)=>#token("0","Int"),#noDots(.KList))),`<log>`(#noDots(.KList),#SemanticCastToList(_)=>`.List`(.KList),#noDots(.KList))),`<logsBloom>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("256","Int"),`.Bytes_BYTES-HOOKED_Bytes`(.KList)),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(640,10,643,64)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#pushWorldState_EVM_InternalOp`(.KList)=>.K,#dots(.KList)),`<interimStates>`(#noDots(.KList),#SemanticCastToList(STATES)=>`_List_`(`ListItem`(`{_|_}_EVM_Accounts_AccountsCellFragment_SubstateCellFragment`(#SemanticCastToAccountsCellFragment(ACCTDATA),#SemanticCastToSubstateCellFragment(SUBSTATE))),#SemanticCastToList(STATES)),#noDots(.KList))),`<accounts>`(#noDots(.KList),#SemanticCastToAccountsCellFragment(ACCTDATA),#noDots(.KList))),`<substate>`(#noDots(.KList),#SemanticCastToSubstateCellFragment(SUBSTATE),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(233,10,236,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#popWorldState_EVM_InternalOp`(.KList)=>.K,#dots(.KList)),`<interimStates>`(#noDots(.KList),`_List_`(`ListItem`(`{_|_}_EVM_Accounts_AccountsCellFragment_SubstateCellFragment`(#SemanticCastToAccountsCellFragment(ACCTDATA),#SemanticCastToSubstateCellFragment(SUBSTATE))),#SemanticCastToList(REST))=>#SemanticCastToList(REST),#noDots(.KList))),`<accounts>`(#noDots(.KList),#SemanticCastToBag(_)=>#SemanticCastToAccountsCellFragment(ACCTDATA),#noDots(.KList))),`<substate>`(#noDots(.KList),#SemanticCastToBag(_)=>#SemanticCastToSubstateCellFragment(SUBSTATE),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(240,10,243,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`_________EVM_InternalOp_CallOp_Int_Int_Int_Int_Int_Int_Int`(`CALLCODE_EVM_CallOp`(.KList),#SemanticCastToInt(GCAP),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`Ccallgas(_,_,_,_,_,_)_EVM_Exp_Schedule_BExp_Gas_Gas_Int_Bool`(#SemanticCastToSchedule(SCHED),`#accountNonexistent(_)_EVM_BExp_Int`(#SemanticCastToInt(ACCTFROM)),#SemanticCastToInt(GCAP),#SemanticCastToGas(GAVAIL),#SemanticCastToInt(VALUE),`Set:in`(#SemanticCastToInt(ACCTTO),#SemanticCastToSet(ACCTS)))~>`#allocateCallGas_EVM_InternalOp`(.KList)~>`Ccall(_,_,_,_,_,_)_EVM_Exp_Schedule_BExp_Gas_Gas_Int_Bool`(#SemanticCastToSchedule(SCHED),`#accountNonexistent(_)_EVM_BExp_Int`(#SemanticCastToInt(ACCTFROM)),#SemanticCastToInt(GCAP),#SemanticCastToGas(GAVAIL),#SemanticCastToInt(VALUE),`Set:in`(#SemanticCastToInt(ACCTTO),#SemanticCastToSet(ACCTS))),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL),#noDots(.KList))),`<accessedAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1982,10,1989,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`________EVM_InternalOp_CallSixOp_Int_Int_Int_Int_Int_Int`(`DELEGATECALL_EVM_CallSixOp`(.KList),#SemanticCastToInt(GCAP),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>`Ccallgas(_,_,_,_,_,_)_EVM_Exp_Schedule_BExp_Gas_Gas_Int_Bool`(#SemanticCastToSchedule(SCHED),`#accountNonexistent(_)_EVM_BExp_Int`(#SemanticCastToInt(ACCTFROM)),#SemanticCastToInt(GCAP),#SemanticCastToGas(GAVAIL),#token("0","Int"),`Set:in`(#SemanticCastToInt(ACCTTO),#SemanticCastToSet(ACCTS)))~>`#allocateCallGas_EVM_InternalOp`(.KList)~>`Ccall(_,_,_,_,_,_)_EVM_Exp_Schedule_BExp_Gas_Gas_Int_Bool`(#SemanticCastToSchedule(SCHED),`#accountNonexistent(_)_EVM_BExp_Int`(#SemanticCastToInt(ACCTFROM)),#SemanticCastToInt(GCAP),#SemanticCastToGas(GAVAIL),#token("0","Int"),`Set:in`(#SemanticCastToInt(ACCTTO),#SemanticCastToSet(ACCTS))),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL),#noDots(.KList))),`<accessedAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1991,10,1998,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`________EVM_InternalOp_CallSixOp_Int_Int_Int_Int_Int_Int`(`DELEGATECALL_EVM_CallSixOp`(.KList),#SemanticCastToInt(_GCAP),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH),#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH))=>`#checkCall___EVM_InternalOp_Int_Int`(#SemanticCastToInt(ACCTFROM),#token("0","Int"))~>`#call________EVM_InternalOp_Int_Int_Int_Int_Int_Bytes_Bool`(#SemanticCastToInt(ACCTAPPFROM),#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#token("0","Int"),#SemanticCastToInt(VALUE),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH)),#token("false","Bool"))~>`#return___EVM_KItem_Int_Int`(#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH)),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<caller>`(#noDots(.KList),#SemanticCastToInt(ACCTAPPFROM),#noDots(.KList))),`<callValue>`(#noDots(.KList),#SemanticCastToInt(VALUE),#noDots(.KList))),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM.delegatecall), org.kframework.attributes.Location(Location(1432,10,1441,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`LOG(_)_EVM_LogOp_Int`(#SemanticCastToInt(N)),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH))=>.K,#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<wordStack>`(#noDots(.KList),#SemanticCastToWordStack(WS)=>`#drop(_,_)_EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(N),#SemanticCastToWordStack(WS)),#noDots(.KList))),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))),`<log>`(#noDots(.KList),#SemanticCastToList(L)=>`_List_`(#SemanticCastToList(L),`ListItem`(`{_|_|_}_EVM-TYPES_SubstateLogEntry_Int_List_Bytes`(#SemanticCastToInt(ACCT),`WordStack2List(_)_EVM-TYPES_List_WordStack`(`#take(_,_)_EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(N),#SemanticCastToWordStack(WS))),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH))))),#noDots(.KList))) requires `_>=Int_`(`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(#SemanticCastToWordStack(WS)),#SemanticCastToInt(N)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1112,10,1117,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`SELFDESTRUCT_EVM_UnStackOp`(.KList),#SemanticCastToInt(ACCTTO))=>`#touchAccounts___EVM_KItem_Account_Account`(#SemanticCastToInt(ACCT),#SemanticCastToInt(ACCTTO))~>`#transferFunds____EVM_InternalOp_Int_Int_Int`(#SemanticCastToInt(ACCT),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(BALFROM))~>`#end__EVM_KItem_StatusCode`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList)),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<selfDestruct>`(#noDots(.KList),#SemanticCastToSet(SDS)=>`_|Set__SET_Set_Set_Set`(#SemanticCastToSet(SDS),`SetItem`(#SemanticCastToInt(ACCT))),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BALFROM),#noDots(.KList))),#dots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList))) requires `_=/=Int_`(#SemanticCastToInt(ACCT),#SemanticCastToInt(ACCTTO)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1606,10,1615,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`___EVM_InternalOp_UnStackOp_Int`(`SELFDESTRUCT_EVM_UnStackOp`(.KList),#SemanticCastToInt(ACCT))=>`#touchAccounts__EVM_KItem_Account`(#SemanticCastToInt(ACCT))~>`#end__EVM_KItem_StatusCode`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList)),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<selfDestruct>`(#noDots(.KList),#SemanticCastToSet(SDS)=>`_|Set__SET_Set_Set_Set`(#SemanticCastToSet(SDS),`SetItem`(#SemanticCastToInt(ACCT))),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(_)=>#token("0","Int"),#noDots(.KList))),#dots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1617,10,1625,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`____EVM_InternalOp_BinStackOp_Int_Int`(`SSTORE_EVM_BinStackOp`(.KList),#SemanticCastToInt(INDEX),#SemanticCastToInt(NEW)))=>`Csstore(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(NEW),`#lookup(_,_)_EVM-TYPES_Int_Map_Int`(#SemanticCastToMap(STORAGE),#SemanticCastToInt(INDEX)),`#lookup(_,_)_EVM-TYPES_Int_Map_Int`(#SemanticCastToMap(ORIGSTORAGE),#SemanticCastToInt(INDEX))),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<storage>`(#noDots(.KList),#SemanticCastToMap(STORAGE),#noDots(.KList))),`<origStorage>`(#noDots(.KList),#SemanticCastToMap(ORIGSTORAGE),#noDots(.KList))),#dots(.KList))),`<refund>`(#noDots(.KList),#SemanticCastToInt(R)=>`_+Int_`(#SemanticCastToInt(R),`Rsstore(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(NEW),`#lookup(_,_)_EVM-TYPES_Int_Map_Int`(#SemanticCastToMap(STORAGE),#SemanticCastToInt(INDEX)),`#lookup(_,_)_EVM-TYPES_Int_Map_Int`(#SemanticCastToMap(ORIGSTORAGE),#SemanticCastToInt(INDEX)))),#noDots(.KList))) requires `_orBool_`(`notBool_`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghassstorestipend_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))),`notBool_`(`_<=Gas__GAS-SYNTAX_Bool_Gas_Gas`(#SemanticCastToGas(GAVAIL),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcallstipend_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1947,10,1958,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#gasExec(_,_)_EVM_InternalOp_Schedule_OpCode`(#SemanticCastToSchedule(SCHED),`___EVM_InternalOp_UnStackOp_Int`(`SELFDESTRUCT_EVM_UnStackOp`(.KList),#SemanticCastToInt(ACCTTO)))=>`Cselfdestruct(_,_,_)_EVM_Exp_Schedule_BExp_Int`(#SemanticCastToSchedule(SCHED),`#accountNonexistent(_)_EVM_BExp_Int`(#SemanticCastToInt(ACCTTO)),#SemanticCastToInt(BAL)),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<selfDestruct>`(#noDots(.KList),#SemanticCastToSet(SDS),#noDots(.KList))),`<refund>`(#noDots(.KList),#SemanticCastToInt(RF)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`Set:in`(#SemanticCastToInt(ACCTFROM),#SemanticCastToSet(SDS)),#SemanticCastToInt(RF),`_+Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(RF),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rselfdestruct_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)))),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BAL),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2008,10,2016,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#checkCall___EVM_InternalOp_Int_Int`(#SemanticCastToInt(ACCT),#SemanticCastToInt(VALUE))=>`#refund__EVM_InternalOp_Gas`(#SemanticCastToGas(GCALL))~>`#pushCallStack_EVM_InternalOp`(.KList)~>`#pushWorldState_EVM_InternalOp`(.KList)~>`#end__EVM_KItem_StatusCode`(`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_>Int_`(#SemanticCastToInt(VALUE),#SemanticCastToInt(BAL)),`EVMC_BALANCE_UNDERFLOW_NETWORK_ExceptionalStatusCode`(.KList),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_>=Int_`(#SemanticCastToInt(CD),#token("1024","Int")),`EVMC_CALL_DEPTH_EXCEEDED_NETWORK_ExceptionalStatusCode`(.KList),`EVMC_NONCE_EXCEEDED_NETWORK_ExceptionalStatusCode`(.KList)))),#dots(.KList)),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BAL),#noDots(.KList))),`<nonce>`(#noDots(.KList),#SemanticCastToInt(NONCE),#noDots(.KList))),#dots(.KList))),`<callGas>`(#noDots(.KList),#SemanticCastToGas(GCALL),#noDots(.KList))) requires `_orBool_`(`_orBool_`(`_>Int_`(#SemanticCastToInt(VALUE),#SemanticCastToInt(BAL)),`_>=Int_`(#SemanticCastToInt(CD),#token("1024","Int"))),`notBool_`(`#rangeNonce(_)_WORD_Bool_Int`(#SemanticCastToInt(NONCE)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1220,10,1234,85)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#rewardOmmers(_)_EVM_EthereumCommand_JSONs`(`JSONs`(`JSONList`(`JSONs`(#SemanticCastToJSON(_),`JSONs`(#SemanticCastToJSON(_),`JSONs`(#SemanticCastToInt(OMMER),`JSONs`(#SemanticCastToJSON(_),`JSONs`(#SemanticCastToJSON(_),`JSONs`(#SemanticCastToJSON(_),`JSONs`(#SemanticCastToJSON(_),`JSONs`(#SemanticCastToJSON(_),`JSONs`(#SemanticCastToInt(OMMNUM),#SemanticCastToJSONs(_))))))))))),#SemanticCastToJSONs(REST)))=>`#rewardOmmers(_)_EVM_EthereumCommand_JSONs`(#SemanticCastToJSONs(REST)),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<coinbase>`(#noDots(.KList),#SemanticCastToInt(MINER),#noDots(.KList))),`<number>`(#noDots(.KList),#SemanticCastToInt(CURNUM),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(MINER),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(MINBAL)=>`_+Int_`(#SemanticCastToInt(MINBAL),`_/Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rb_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#token("32","Int"))),#noDots(.KList))),#dots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(OMMER),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(OMMBAL)=>`_+Int_`(`_+Int_`(#SemanticCastToInt(OMMBAL),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rb_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),`_*Int_`(`_-Int_`(#SemanticCastToInt(OMMNUM),#SemanticCastToInt(CURNUM)),`_/Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rb_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#token("8","Int")))),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(663,10,676,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#initVM_EVM_KItem`(.KList)=>.K,#dots(.KList)),`<pc>`(#noDots(.KList),#SemanticCastToInt(_)=>#token("0","Int"),#noDots(.KList))),`<memoryUsed>`(#noDots(.KList),#SemanticCastToInt(_)=>#token("0","Int"),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList))),`<wordStack>`(#noDots(.KList),#SemanticCastToWordStack(_)=>`.WordStack_EVM-TYPES_WordStack`(.KList),#noDots(.KList))),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(_)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1295,10,1300,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#finalizeTx(_)_EVM_InternalOp_Bool`(#token("true","Bool"))=>`#finalizeStorage(_)_EVM_InternalOp_List`(`Set2List(_)_COLLECTIONS_List_Set`(`_|Set__SET_Set_Set_Set`(`SetItem`(#SemanticCastToInt(MINER)),#SemanticCastToSet(ACCTS)))),#dots(.KList)),`<selfDestruct>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList))),`<coinbase>`(#noDots(.KList),#SemanticCastToInt(MINER),#noDots(.KList))),`<touchedAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))),`<accessedAccounts>`(#noDots(.KList),#SemanticCastToSet(_)=>`.Set`(.KList),#noDots(.KList))),`<accessedStorage>`(#noDots(.KList),#SemanticCastToMap(_)=>`.Map`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(545,10,550,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#finalizeTx(_)_EVM_InternalOp_Bool`(#token("false","Bool")),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL)=>`G*(_,_,_,_)_GAS-FEES_Gas_Gas_Int_Int_Schedule`(#SemanticCastToGas(GAVAIL),#SemanticCastToInt(GLIMIT),#SemanticCastToInt(REFUND),#SemanticCastToSchedule(SCHED)),#noDots(.KList))),`<refund>`(#noDots(.KList),#SemanticCastToInt(REFUND)=>#token("0","Int"),#noDots(.KList))),`<txPending>`(#noDots(.KList),`ListItem`(#SemanticCastToInt(MSGID)),#dots(.KList))),`<message>`(#noDots(.KList),#cells(`<msgID>`(#noDots(.KList),#SemanticCastToInt(MSGID),#noDots(.KList)),`<txGasLimit>`(#noDots(.KList),#SemanticCastToInt(GLIMIT),#noDots(.KList))),#dots(.KList))) requires `_=/=Int_`(#SemanticCastToInt(REFUND),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(552,10,562,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#finalizeBlock_EVM_EthereumCommand`(.KList)=>`#rewardOmmers(_)_EVM_EthereumCommand_JSONs`(#SemanticCastToJSONs(OMMERS)),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<ommerBlockHeaders>`(#noDots(.KList),`JSONList`(#SemanticCastToJSONs(OMMERS)),#noDots(.KList))),`<coinbase>`(#noDots(.KList),#SemanticCastToInt(MINER),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(MINER),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(MINBAL)=>`_+Int_`(#SemanticCastToInt(MINBAL),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rb_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),#noDots(.KList))),#dots(.KList))),`<log>`(#noDots(.KList),#SemanticCastToList(LOGS),#noDots(.KList))),`<logsBloom>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#bloomFilter(_)_EVM_Bytes_List`(#SemanticCastToList(LOGS)),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(647,10,657,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#mkCreate_____EVM_InternalOp_Int_Int_Int_Bytes`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE),#SemanticCastToBytes(INITCODE))=>`#touchAccounts___EVM_KItem_Account_Account`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO))~>`#accessAccounts___EVM_KItem_Account_Account`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO))~>`#loadProgram__EVM_KItem_Bytes`(#SemanticCastToBytes(INITCODE))~>`#initVM_EVM_KItem`(.KList)~>`#execute_EVM_KItem`(.KList),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToAccount(_)=>#SemanticCastToInt(ACCTTO),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(_)=>#SemanticCastToGas(GCALL),#noDots(.KList))),`<callGas>`(#noDots(.KList),#SemanticCastToGas(GCALL)=>#token("0","Int"),#noDots(.KList))),`<caller>`(#noDots(.KList),#SemanticCastToAccount(_)=>#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD)=>`_+Int_`(#SemanticCastToInt(CD),#token("1","Int")),#noDots(.KList))),`<callData>`(#noDots(.KList),#SemanticCastToBytes(_)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList))),`<callValue>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(VALUE),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTTO),#noDots(.KList)),`<nonce>`(#noDots(.KList),#SemanticCastToInt(NONCE)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gemptyisnonexistent_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)),`_+Int_`(#SemanticCastToInt(NONCE),#token("1","Int")),#SemanticCastToInt(NONCE)),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1476,10,1492,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#mkCall________EVM_InternalOp_Int_Int_Int_Bytes_Int_Bytes_Bool`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(ACCTCODE),#SemanticCastToBytes(BYTES),#SemanticCastToInt(APPVALUE),#SemanticCastToBytes(ARGS),#SemanticCastToBool(STATIC))=>`#touchAccounts___EVM_KItem_Account_Account`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO))~>`#accessAccounts___EVM_KItem_Account_Account`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO))~>`#loadProgram__EVM_KItem_Bytes`(#SemanticCastToBytes(BYTES))~>`#initVM_EVM_KItem`(.KList)~>`#precompiled?(_,_)_EVM_InternalOp_Int_Schedule`(#SemanticCastToInt(ACCTCODE),#SemanticCastToSchedule(SCHED))~>`#execute_EVM_KItem`(.KList),#dots(.KList)),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD)=>`_+Int_`(#SemanticCastToInt(CD),#token("1","Int")),#noDots(.KList))),`<callData>`(#noDots(.KList),#SemanticCastToBytes(_)=>#SemanticCastToBytes(ARGS),#noDots(.KList))),`<callValue>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(APPVALUE),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToAccount(_)=>#SemanticCastToInt(ACCTTO),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(_)=>#SemanticCastToGas(GCALL),#noDots(.KList))),`<callGas>`(#noDots(.KList),#SemanticCastToGas(GCALL)=>#token("0","Int"),#noDots(.KList))),`<caller>`(#noDots(.KList),#SemanticCastToAccount(_)=>#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<static>`(#noDots(.KList),#SemanticCastToBool(OLDSTATIC)=>`_orBool_`(#SemanticCastToBool(OLDSTATIC),#SemanticCastToBool(STATIC)),#noDots(.KList))),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1268,10,1280,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#finalizeTx(_)_EVM_InternalOp_Bool`(#token("false","Bool")=>#token("true","Bool")),#dots(.KList)),`<baseFee>`(#noDots(.KList),#SemanticCastToInt(BFEE),#noDots(.KList))),`<origin>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<coinbase>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL),#noDots(.KList))),`<gasUsed>`(#noDots(.KList),#SemanticCastToGas(GUSED)=>`_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(`_+Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToGas(GUSED),#SemanticCastToInt(GLIMIT)),#SemanticCastToGas(GAVAIL)),#noDots(.KList))),`<gasPrice>`(#noDots(.KList),#SemanticCastToInt(GPRICE),#noDots(.KList))),`<refund>`(#noDots(.KList),#token("0","Int"),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BAL)=>`_+Int_`(#SemanticCastToInt(BAL),`_*Int_`(#SemanticCastToInt(GLIMIT),`_-Int_`(#SemanticCastToInt(GPRICE),#SemanticCastToInt(BFEE)))),#noDots(.KList))),#dots(.KList))),`<txPending>`(#noDots(.KList),`_List_`(`ListItem`(#SemanticCastToInt(MsgId)),#SemanticCastToList(REST))=>#SemanticCastToList(REST),#noDots(.KList))),`<message>`(#noDots(.KList),#cells(`<msgID>`(#noDots(.KList),#SemanticCastToInt(MsgId),#noDots(.KList)),`<txGasLimit>`(#noDots(.KList),#SemanticCastToInt(GLIMIT),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(590,10,608,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#finalizeTx(_)_EVM_InternalOp_Bool`(#token("false","Bool")=>#token("true","Bool")),#dots(.KList)),`<baseFee>`(#noDots(.KList),#SemanticCastToInt(BFEE),#noDots(.KList))),`<origin>`(#noDots(.KList),#SemanticCastToInt(ORG),#noDots(.KList))),`<coinbase>`(#noDots(.KList),#SemanticCastToInt(MINER),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL),#noDots(.KList))),`<gasUsed>`(#noDots(.KList),#SemanticCastToGas(GUSED)=>`_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(`_+Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToGas(GUSED),#SemanticCastToInt(GLIMIT)),#SemanticCastToInt(GAVAIL)),#noDots(.KList))),`<gasPrice>`(#noDots(.KList),#SemanticCastToInt(GPRICE),#noDots(.KList))),`<refund>`(#noDots(.KList),#token("0","Int"),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ORG),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(ORGBAL)=>`_+Int_`(#SemanticCastToInt(ORGBAL),`_*Int_`(#SemanticCastToInt(GAVAIL),#SemanticCastToInt(GPRICE))),#noDots(.KList))),#dots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(MINER),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(MINBAL)=>`_+Int_`(#SemanticCastToInt(MINBAL),`_*Int_`(`_-Int_`(#SemanticCastToInt(GLIMIT),#SemanticCastToInt(GAVAIL)),`_-Int_`(#SemanticCastToInt(GPRICE),#SemanticCastToInt(BFEE)))),#noDots(.KList))),#dots(.KList))),`<txPending>`(#noDots(.KList),`_List_`(`ListItem`(#SemanticCastToInt(TXID)),#SemanticCastToList(REST))=>#SemanticCastToList(REST),#noDots(.KList))),`<message>`(#noDots(.KList),#cells(`<msgID>`(#noDots(.KList),#SemanticCastToInt(TXID),#noDots(.KList)),`<txGasLimit>`(#noDots(.KList),#SemanticCastToInt(GLIMIT),#noDots(.KList))),#dots(.KList))) requires `_=/=Int_`(#SemanticCastToInt(ORG),#SemanticCastToInt(MINER)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(564,10,588,32)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
endmodule


module EVM-ABI [digest(Z���Rc5.g��a��N~HX
�>��d�w�), org.kframework.attributes.Location(Location(8,1,466,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md))]
  imports EVM
  imports BUF
  syntax TypedArgs ::= TypedArg "," TypedArgs [klabel(typedArgs), userList(*)]
  syntax TypedArgs ::= ".TypedArgs" [klabel(.List{"typedArgs"}), userList(*)]
  syntax TypedArgs ::= "#getTypedArgs" "(" EventArgs ")" [function, klabel(#getTypedArgs)]
  syntax TypedArgs ::= "#getNonIndexedArgs" "(" EventArgs ")" [function, klabel(#getNonIndexedArgs)]
  syntax TypedArg ::= "#uint96" "(" Int ")" [klabel(abi_type_uint96), symbol]
  syntax TypedArg ::= "#uint88" "(" Int ")" [klabel(abi_type_uint88), symbol]
  syntax TypedArg ::= "#uint80" "(" Int ")" [klabel(abi_type_uint80), symbol]
  syntax TypedArg ::= "#uint8" "(" Int ")" [klabel(abi_type_uint8), symbol]
  syntax TypedArg ::= "#uint72" "(" Int ")" [klabel(abi_type_uint72), symbol]
  syntax TypedArg ::= "#uint64" "(" Int ")" [klabel(abi_type_uint64), symbol]
  syntax TypedArg ::= "#uint56" "(" Int ")" [klabel(abi_type_uint56), symbol]
  syntax TypedArg ::= "#uint48" "(" Int ")" [klabel(abi_type_uint48), symbol]
  syntax TypedArg ::= "#uint40" "(" Int ")" [klabel(abi_type_uint40), symbol]
  syntax TypedArg ::= "#uint32" "(" Int ")" [klabel(abi_type_uint32), symbol]
  syntax TypedArg ::= "#uint256" "(" Int ")" [klabel(abi_type_uint256), symbol]
  syntax TypedArg ::= "#uint248" "(" Int ")" [klabel(abi_type_uint248), symbol]
  syntax TypedArg ::= "#uint240" "(" Int ")" [klabel(abi_type_uint240), symbol]
  syntax TypedArg ::= "#uint24" "(" Int ")" [klabel(abi_type_uint24), symbol]
  syntax TypedArg ::= "#uint232" "(" Int ")" [klabel(abi_type_uint232), symbol]
  syntax TypedArg ::= "#uint224" "(" Int ")" [klabel(abi_type_uint224), symbol]
  syntax TypedArg ::= "#uint216" "(" Int ")" [klabel(abi_type_uint216), symbol]
  syntax TypedArg ::= "#uint208" "(" Int ")" [klabel(abi_type_uint208), symbol]
  syntax TypedArg ::= "#uint200" "(" Int ")" [klabel(abi_type_uint200), symbol]
  syntax TypedArg ::= "#uint192" "(" Int ")" [klabel(abi_type_uint192), symbol]
  syntax TypedArg ::= "#uint184" "(" Int ")" [klabel(abi_type_uint184), symbol]
  syntax TypedArg ::= "#uint176" "(" Int ")" [klabel(abi_type_uint176), symbol]
  syntax TypedArg ::= "#uint168" "(" Int ")" [klabel(abi_type_uint168), symbol]
  syntax TypedArg ::= "#uint160" "(" Int ")" [klabel(abi_type_uint160), symbol]
  syntax TypedArg ::= "#uint16" "(" Int ")" [klabel(abi_type_uint16), symbol]
  syntax TypedArg ::= "#uint152" "(" Int ")" [klabel(abi_type_uint152), symbol]
  syntax TypedArg ::= "#uint144" "(" Int ")" [klabel(abi_type_uint144), symbol]
  syntax TypedArg ::= "#uint136" "(" Int ")" [klabel(abi_type_uint136), symbol]
  syntax TypedArg ::= "#uint128" "(" Int ")" [klabel(abi_type_uint128), symbol]
  syntax TypedArg ::= "#uint120" "(" Int ")" [klabel(abi_type_uint120), symbol]
  syntax TypedArg ::= "#uint112" "(" Int ")" [klabel(abi_type_uint112), symbol]
  syntax TypedArg ::= "#uint104" "(" Int ")" [klabel(abi_type_uint104), symbol]
  syntax TypedArg ::= "#string" "(" String ")" [klabel(abi_type_string), symbol]
  syntax TypedArg ::= "#int256" "(" Int ")" [klabel(abi_type_int256), symbol]
  syntax TypedArg ::= "#int128" "(" Int ")" [klabel(abi_type_int128), symbol]
  syntax TypedArg ::= "#bytes4" "(" Int ")" [klabel(abi_type_bytes4), symbol]
  syntax TypedArg ::= "#bytes32" "(" Int ")" [klabel(abi_type_bytes32), symbol]
  syntax TypedArg ::= "#bytes" "(" Bytes ")" [klabel(abi_type_bytes), symbol]
  syntax TypedArg ::= "#bool" "(" Int ")" [klabel(abi_type_bool), symbol]
  syntax TypedArg ::= "#array" "(" TypedArg "," Int "," TypedArgs ")" [klabel(abi_type_array), symbol]
  syntax TypedArg ::= "#address" "(" Int ")" [klabel(abi_type_address), symbol]
  syntax SubstateLogEntry ::= "#abiEventLog" "(" Int "," String "," EventArgs ")" [function, klabel(#abiEventLog)]
  syntax String ::= "#typeName" "(" TypedArg ")" [function, klabel(#typeName), total]
  syntax String ::= "#generateSignatureArgs" "(" TypedArgs ")" [function, klabel(#generateSignatureArgs), total]
  syntax String ::= "#generateSignature" "(" String "," TypedArgs ")" [function, klabel(#generateSignature), total]
  syntax List ::= "#getIndexedArgs" "(" EventArgs ")" [function, klabel(#getIndexedArgs)]
  syntax List ::= "#getEventTopics" "(" String "," EventArgs ")" [function, klabel(#getEventTopics)]
  syntax Int ::= "selector" "(" String ")" [alias, function, klabel(abi_selector), no-evaluators, symbol]
  syntax Int ::= "#sizeOfDynamicTypeAux" "(" TypedArgs ")" [function, klabel(#sizeOfDynamicTypeAux)]
  syntax Int ::= "#sizeOfDynamicType" "(" TypedArg ")" [function, klabel(#sizeOfDynamicType)]
  syntax Int ::= "#lenOfHeads" "(" TypedArgs ")" [function, klabel(#lenOfHeads), total]
  syntax Int ::= "#lenOfHead" "(" TypedArg ")" [function, klabel(#lenOfHead), total]
  syntax Int ::= "#getValue" "(" TypedArg ")" [function, klabel(#getValue)]
  syntax EventArgs ::= EventArg "," EventArgs [klabel(eventArgs), userList(*)]
  syntax EventArgs ::= ".EventArgs" [klabel(.List{"eventArgs"}), userList(*)]
  syntax EventArg ::= TypedArg
  syntax EventArg ::= "#indexed" "(" TypedArg ")" [klabel(#indexed)]
  syntax Bytes ::= "#signatureCallData" "(" String "," TypedArgs ")" [function, klabel(#signatureCallData)]
  syntax Bytes ::= "#encodeArgsAux" "(" TypedArgs "," Int "," Bytes "," Bytes ")" [function, klabel(#encodeArgsAux)]
  syntax Bytes ::= "#encodeArgs" "(" TypedArgs ")" [function, klabel(#encodeArgs)]
  syntax Bytes ::= "#encBytes" "(" Int "," Bytes ")" [function, klabel(#encBytes)]
  syntax Bytes ::= "#enc" "(" TypedArg ")" [function, klabel(#enc)]
  syntax Bytes ::= "#abiCallData" "(" String "," TypedArgs ")" [function, klabel(#abiCallData)]
  syntax Bool ::= "#isStaticType" "(" TypedArg ")" [function, klabel(#isStaticType), total]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint96`(#SemanticCastToInt(_)))=>#token("\"uint96\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(121,10,121,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint8`(#SemanticCastToInt(_)))=>#token("\"uint8\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(132,10,132,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint88`(#SemanticCastToInt(_)))=>#token("\"uint88\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(122,10,122,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint80`(#SemanticCastToInt(_)))=>#token("\"uint80\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(123,10,123,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint72`(#SemanticCastToInt(_)))=>#token("\"uint72\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(124,10,124,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint64`(#SemanticCastToInt(_)))=>#token("\"uint64\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(125,10,125,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint56`(#SemanticCastToInt(_)))=>#token("\"uint56\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(126,10,126,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint48`(#SemanticCastToInt(_)))=>#token("\"uint48\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(127,10,127,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint40`(#SemanticCastToInt(_)))=>#token("\"uint40\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(128,10,128,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint32`(#SemanticCastToInt(_)))=>#token("\"uint32\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(129,10,129,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint256`(#SemanticCastToInt(_)))=>#token("\"uint256\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(101,10,101,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint24`(#SemanticCastToInt(_)))=>#token("\"uint24\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(130,10,130,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint248`(#SemanticCastToInt(_)))=>#token("\"uint248\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(102,10,102,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint240`(#SemanticCastToInt(_)))=>#token("\"uint240\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(103,10,103,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint232`(#SemanticCastToInt(_)))=>#token("\"uint232\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(104,10,104,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint224`(#SemanticCastToInt(_)))=>#token("\"uint224\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(105,10,105,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint216`(#SemanticCastToInt(_)))=>#token("\"uint216\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(106,10,106,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint208`(#SemanticCastToInt(_)))=>#token("\"uint208\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(107,10,107,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint200`(#SemanticCastToInt(_)))=>#token("\"uint200\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(108,10,108,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint192`(#SemanticCastToInt(_)))=>#token("\"uint192\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(109,10,109,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint184`(#SemanticCastToInt(_)))=>#token("\"uint184\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(110,10,110,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint176`(#SemanticCastToInt(_)))=>#token("\"uint176\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(111,10,111,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint16`(#SemanticCastToInt(_)))=>#token("\"uint16\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(131,10,131,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint168`(#SemanticCastToInt(_)))=>#token("\"uint168\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(112,10,112,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint160`(#SemanticCastToInt(_)))=>#token("\"uint160\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(113,10,113,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint152`(#SemanticCastToInt(_)))=>#token("\"uint152\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(114,10,114,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint144`(#SemanticCastToInt(_)))=>#token("\"uint144\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(115,10,115,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint136`(#SemanticCastToInt(_)))=>#token("\"uint136\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(116,10,116,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint128`(#SemanticCastToInt(_)))=>#token("\"uint128\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(117,10,117,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint120`(#SemanticCastToInt(_)))=>#token("\"uint120\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(118,10,118,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint112`(#SemanticCastToInt(_)))=>#token("\"uint112\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(119,10,119,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_uint104`(#SemanticCastToInt(_)))=>#token("\"uint104\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(120,10,120,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_string`(#SemanticCastToString(_)))=>#token("\"string\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(144,10,144,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_int256`(#SemanticCastToInt(_)))=>#token("\"int256\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(134,10,134,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_int128`(#SemanticCastToInt(_)))=>#token("\"int128\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(135,10,135,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_bytes`(#SemanticCastToBytes(_)))=>#token("\"bytes\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(142,10,142,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_bytes4`(#SemanticCastToInt(_)))=>#token("\"bytes4\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(137,10,137,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_bytes32`(#SemanticCastToInt(_)))=>#token("\"bytes32\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(138,10,138,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_bool`(#SemanticCastToInt(_)))=>#token("\"bool\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(140,10,140,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_array`(#SemanticCastToTypedArg(T),#SemanticCastToInt(_),#SemanticCastToTypedArgs(_)))=>`_+String__STRING-COMMON_String_String_String`(`#typeName(_)_EVM-ABI_String_TypedArg`(#SemanticCastToTypedArg(T)),#token("\"[]\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(146,10,146,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#typeName(_)_EVM-ABI_String_TypedArg`(`abi_type_address`(#SemanticCastToInt(_)))=>#token("\"address\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(99,10,99,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#sizeOfDynamicTypeAux(_)_EVM-ABI_Int_TypedArgs`(`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(#SemanticCastToTypedArg(TARG),#SemanticCastToTypedArgs(TARGS)))=>`_+Int_`(`#sizeOfDynamicType(_)_EVM-ABI_Int_TypedArg`(#SemanticCastToTypedArg(TARG)),`#sizeOfDynamicTypeAux(_)_EVM-ABI_Int_TypedArgs`(#SemanticCastToTypedArgs(TARGS))) requires `notBool_`(`#isStaticType(_)_EVM-ABI_Bool_TypedArg`(#SemanticCastToTypedArg(TARG))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(282,10,283,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#sizeOfDynamicTypeAux(_)_EVM-ABI_Int_TypedArgs`(`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(285,10,285,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#sizeOfDynamicType(_)_EVM-ABI_Int_TypedArg`(`abi_type_bytes`(#SemanticCastToBytes(BS)))=>`_+Int_`(#token("32","Int"),`#ceil32(_)_BUF-SYNTAX_Int_Int`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(BS)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(272,10,272,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#sizeOfDynamicType(_)_EVM-ABI_Int_TypedArg`(`abi_type_array`(#SemanticCastToTypedArg(T),#SemanticCastToInt(N),#SemanticCastToTypedArgs(_)))=>`_*Int_`(#token("32","Int"),`_+Int_`(#token("1","Int"),#SemanticCastToInt(N))) requires `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(#SemanticCastToTypedArg(T)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(274,10,275,32)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#sizeOfDynamicType(_)_EVM-ABI_Int_TypedArg`(`abi_type_array`(#SemanticCastToTypedArg(T),#SemanticCastToInt(N),#SemanticCastToTypedArgs(ELEMS)))=>`_*Int_`(#token("32","Int"),`_+Int_`(`_+Int_`(#token("1","Int"),#SemanticCastToInt(N)),`#sizeOfDynamicTypeAux(_)_EVM-ABI_Int_TypedArgs`(#SemanticCastToTypedArgs(ELEMS)))) requires `notBool_`(`#isStaticType(_)_EVM-ABI_Bool_TypedArg`(#SemanticCastToTypedArg(T))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(277,10,278,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#signatureCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#SemanticCastToString(FNAME),#SemanticCastToTypedArgs(ARGS))=>`#parseByteStack(_)_SERIALIZATION_Bytes_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(`Keccak256(_)_KRYPTO_String_String`(`#generateSignature(_,_)_EVM-ABI_String_String_TypedArgs`(#SemanticCastToString(FNAME),#SemanticCastToTypedArgs(ARGS))),#token("0","Int"),#token("8","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(86,10,86,127)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHeads(_)_EVM-ABI_Int_TypedArgs`(`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(#SemanticCastToTypedArg(ARG),#SemanticCastToTypedArgs(ARGS)))=>`_+Int_`(`#lenOfHead(_)_EVM-ABI_Int_TypedArg`(#SemanticCastToTypedArg(ARG)),`#lenOfHeads(_)_EVM-ABI_Int_TypedArgs`(#SemanticCastToTypedArgs(ARGS))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(166,10,166,75)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHeads(_)_EVM-ABI_Int_TypedArgs`(`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(165,10,165,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint96`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(192,10,192,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint8`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(203,10,203,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint88`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(193,10,193,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint80`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(194,10,194,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint72`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(195,10,195,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint64`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(196,10,196,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint56`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(197,10,197,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint48`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(198,10,198,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint40`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(199,10,199,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint32`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(200,10,200,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint256`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(172,10,172,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint24`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(201,10,201,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint248`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(173,10,173,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint240`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(174,10,174,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint232`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(175,10,175,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint224`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(176,10,176,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint216`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(177,10,177,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint208`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(178,10,178,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint200`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(179,10,179,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint192`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(180,10,180,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint184`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(181,10,181,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint176`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(182,10,182,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint16`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(202,10,202,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint168`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(183,10,183,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint160`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(184,10,184,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint152`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(185,10,185,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint144`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(186,10,186,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint136`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(187,10,187,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint128`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(188,10,188,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint120`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(189,10,189,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint112`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(190,10,190,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint104`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(191,10,191,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_string`(#SemanticCastToString(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(215,10,215,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_int256`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(205,10,205,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_int128`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(206,10,206,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_bytes`(#SemanticCastToBytes(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(213,10,213,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_bytes4`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(208,10,208,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_bytes32`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(209,10,209,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_bool`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(211,10,211,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_array`(#SemanticCastToTypedArg(_),#SemanticCastToInt(_),#SemanticCastToTypedArgs(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(217,10,217,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lenOfHead(_)_EVM-ABI_Int_TypedArg`(`abi_type_address`(#SemanticCastToInt(_)))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(170,10,170,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint96`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(243,10,243,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint8`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(254,10,254,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint88`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(244,10,244,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint80`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(245,10,245,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint72`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(246,10,246,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint64`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(247,10,247,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint56`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(248,10,248,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint48`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(249,10,249,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint40`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(250,10,250,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint32`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(251,10,251,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint256`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(223,10,223,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint24`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(252,10,252,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint248`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(224,10,224,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint240`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(225,10,225,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint232`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(226,10,226,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint224`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(227,10,227,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint216`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(228,10,228,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint208`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(229,10,229,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint200`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(230,10,230,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint192`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(231,10,231,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint184`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(232,10,232,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint176`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(233,10,233,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint16`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(253,10,253,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint168`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(234,10,234,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint160`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(235,10,235,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint152`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(236,10,236,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint144`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(237,10,237,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint136`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(238,10,238,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint128`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(239,10,239,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint120`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(240,10,240,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint112`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(241,10,241,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_uint104`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(242,10,242,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_string`(#SemanticCastToString(_)))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(266,10,266,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_int256`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(256,10,256,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_int128`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(257,10,257,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_bytes`(#SemanticCastToBytes(_)))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(264,10,264,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_bytes4`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(259,10,259,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_bytes32`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(260,10,260,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_bool`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(262,10,262,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_array`(#SemanticCastToTypedArg(_),#SemanticCastToInt(_),#SemanticCastToTypedArgs(_)))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(268,10,268,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(`abi_type_address`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(221,10,221,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint96`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("96","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(361,10,361,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint8`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("8","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(350,10,350,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint88`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("88","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(360,10,360,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint80`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("80","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(359,10,359,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint72`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("72","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(358,10,358,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint64`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("64","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(357,10,357,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint56`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("56","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(356,10,356,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint48`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("48","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(355,10,355,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint40`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("40","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(354,10,354,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint32`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("32","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(353,10,353,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint256`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(381,10,381,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint24`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("24","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(352,10,352,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint248`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("248","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(380,10,380,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint240`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("240","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(379,10,379,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint232`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("232","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(378,10,378,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint224`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("224","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(377,10,377,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint216`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("216","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(376,10,376,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint208`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("208","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(375,10,375,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint200`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("200","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(374,10,374,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint192`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("192","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(373,10,373,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint184`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("184","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(372,10,372,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint176`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("176","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(371,10,371,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint16`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("16","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(351,10,351,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint168`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("168","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(370,10,370,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint160`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("160","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(369,10,369,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint152`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("152","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(368,10,368,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint144`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("144","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(367,10,367,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint136`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("136","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(366,10,366,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint128`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("128","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(365,10,365,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint120`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("120","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(364,10,364,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint112`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("112","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(363,10,363,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint104`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("104","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(362,10,362,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_int256`(#SemanticCastToInt(X)))=>`chop(_)_WORD_Int_Int`(#SemanticCastToInt(X)) requires `#rangeSInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(384,10,384,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_int128`(#SemanticCastToInt(X)))=>`chop(_)_WORD_Int_Int`(#SemanticCastToInt(X)) requires `#rangeSInt(_,_)_WORD_Bool_Int_Int`(#token("128","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(383,10,383,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_bytes4`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("32","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(386,10,386,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_bytes32`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(387,10,387,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_bool`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(346,10,346,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_address`(#SemanticCastToInt(X)))=>#SemanticCastToInt(X) requires `#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(348,10,348,71)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#getTypedArgs(_)_EVM-ABI_TypedArgs_EventArgs`(`_,__EVM-ABI_EventArgs_EventArg_EventArgs`(`#indexed(_)_EVM-ABI_EventArg_TypedArg`(#SemanticCastToTypedArg(E)),#SemanticCastToEventArgs(ES)))=>`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(#SemanticCastToTypedArg(E),`#getTypedArgs(_)_EVM-ABI_TypedArgs_EventArgs`(#SemanticCastToEventArgs(ES))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(441,10,441,64)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#getTypedArgs(_)_EVM-ABI_TypedArgs_EventArgs`(`_,__EVM-ABI_EventArgs_EventArg_EventArgs`(#SemanticCastToTypedArg(E),#SemanticCastToEventArgs(ES)))=>`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(#SemanticCastToTypedArg(E),`#getTypedArgs(_)_EVM-ABI_TypedArgs_EventArgs`(#SemanticCastToEventArgs(ES))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(442,10,442,64)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#getTypedArgs(_)_EVM-ABI_TypedArgs_EventArgs`(`.List{"_,__EVM-ABI_EventArgs_EventArg_EventArgs"}_EventArgs`(.KList))=>`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(443,10,443,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#getNonIndexedArgs(_)_EVM-ABI_TypedArgs_EventArgs`(`_,__EVM-ABI_EventArgs_EventArg_EventArgs`(`#indexed(_)_EVM-ABI_EventArg_TypedArg`(#SemanticCastToTypedArg(_)),#SemanticCastToEventArgs(ES)))=>`#getNonIndexedArgs(_)_EVM-ABI_TypedArgs_EventArgs`(#SemanticCastToEventArgs(ES)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(453,10,453,74)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#getNonIndexedArgs(_)_EVM-ABI_TypedArgs_EventArgs`(`_,__EVM-ABI_EventArgs_EventArg_EventArgs`(#SemanticCastToTypedArg(E),#SemanticCastToEventArgs(ES)))=>`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(#SemanticCastToTypedArg(E),`#getNonIndexedArgs(_)_EVM-ABI_TypedArgs_EventArgs`(#SemanticCastToEventArgs(ES))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(454,10,454,74)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#getNonIndexedArgs(_)_EVM-ABI_TypedArgs_EventArgs`(`.List{"_,__EVM-ABI_EventArgs_EventArg_EventArgs"}_EventArgs`(.KList))=>`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(455,10,455,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#getIndexedArgs(_)_EVM-ABI_List_EventArgs`(`_,__EVM-ABI_EventArgs_EventArg_EventArgs`(`#indexed(_)_EVM-ABI_EventArg_TypedArg`(#SemanticCastToTypedArg(E)),#SemanticCastToEventArgs(ES)))=>`_List_`(`ListItem`(`#getValue(_)_EVM-ABI_Int_TypedArg`(#SemanticCastToTypedArg(E))),`#getIndexedArgs(_)_EVM-ABI_List_EventArgs`(#SemanticCastToEventArgs(ES))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(447,10,447,88)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#getIndexedArgs(_)_EVM-ABI_List_EventArgs`(`_,__EVM-ABI_EventArgs_EventArg_EventArgs`(#SemanticCastToTypedArg(_),#SemanticCastToEventArgs(ES)))=>`#getIndexedArgs(_)_EVM-ABI_List_EventArgs`(#SemanticCastToEventArgs(ES)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(448,10,448,88)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#getIndexedArgs(_)_EVM-ABI_List_EventArgs`(`.List{"_,__EVM-ABI_EventArgs_EventArg_EventArgs"}_EventArgs`(.KList))=>`.List`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(449,10,449,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#getEventTopics(_,_)_EVM-ABI_List_String_EventArgs`(#SemanticCastToString(ENAME),#SemanticCastToEventArgs(EARGS))=>`_List_`(`ListItem`(`#parseHexWord(_)_SERIALIZATION_Int_String`(`Keccak256(_)_KRYPTO_String_String`(`#generateSignature(_,_)_EVM-ABI_String_String_TypedArgs`(#SemanticCastToString(ENAME),`#getTypedArgs(_)_EVM-ABI_TypedArgs_EventArgs`(#SemanticCastToEventArgs(EARGS)))))),`#getIndexedArgs(_)_EVM-ABI_List_EventArgs`(#SemanticCastToEventArgs(EARGS))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(435,10,437,32)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#generateSignatureArgs(_)_EVM-ABI_String_TypedArgs`(`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(#SemanticCastToTypedArg(TARGA),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(#SemanticCastToTypedArg(TARGB),#SemanticCastToTypedArgs(TARGS))))=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`#typeName(_)_EVM-ABI_String_TypedArg`(#SemanticCastToTypedArg(TARGA)),#token("\",\"","String")),`#generateSignatureArgs(_)_EVM-ABI_String_TypedArgs`(`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(#SemanticCastToTypedArg(TARGB),#SemanticCastToTypedArgs(TARGS)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(95,10,95,148)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#generateSignatureArgs(_)_EVM-ABI_String_TypedArgs`(`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(#SemanticCastToTypedArg(TARGA),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))=>`#typeName(_)_EVM-ABI_String_TypedArg`(#SemanticCastToTypedArg(TARGA)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(94,10,94,91)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#generateSignatureArgs(_)_EVM-ABI_String_TypedArgs`(`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))=>#token("\"\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(93,10,93,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#generateSignature(_,_)_EVM-ABI_String_String_TypedArgs`(#SemanticCastToString(FNAME),#SemanticCastToTypedArgs(ARGS))=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(#SemanticCastToString(FNAME),#token("\"(\"","String")),`#generateSignatureArgs(_)_EVM-ABI_String_TypedArgs`(#SemanticCastToTypedArgs(ARGS))),#token("\")\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(91,10,91,114)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#encodeArgsAux(_,_,_,_)_EVM-ABI_Bytes_TypedArgs_Int_Bytes_Bytes`(`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(#SemanticCastToTypedArg(ARG),#SemanticCastToTypedArgs(ARGS)),#SemanticCastToInt(OFFSET),#SemanticCastToBytes(HEADS),#SemanticCastToBytes(TAILS))=>`#encodeArgsAux(_,_,_,_)_EVM-ABI_Bytes_TypedArgs_Int_Bytes_Bytes`(#SemanticCastToTypedArgs(ARGS),`_+Int_`(#SemanticCastToInt(OFFSET),`#sizeOfDynamicType(_)_EVM-ABI_Int_TypedArg`(#SemanticCastToTypedArg(ARG))),`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(HEADS),`#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint256`(#SemanticCastToInt(OFFSET)))),`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(TAILS),`#enc(_)_EVM-ABI_Bytes_TypedArg`(#SemanticCastToTypedArg(ARG)))) requires `notBool_`(`#isStaticType(_)_EVM-ABI_Bool_TypedArg`(#SemanticCastToTypedArg(ARG))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(159,10,161,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#encodeArgsAux(_,_,_,_)_EVM-ABI_Bytes_TypedArgs_Int_Bytes_Bytes`(`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(#SemanticCastToTypedArg(ARG),#SemanticCastToTypedArgs(ARGS)),#SemanticCastToInt(OFFSET),#SemanticCastToBytes(HEADS),#SemanticCastToBytes(TAILS))=>`#encodeArgsAux(_,_,_,_)_EVM-ABI_Bytes_TypedArgs_Int_Bytes_Bytes`(#SemanticCastToTypedArgs(ARGS),#SemanticCastToInt(OFFSET),`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(HEADS),`#enc(_)_EVM-ABI_Bytes_TypedArg`(#SemanticCastToTypedArg(ARG))),#SemanticCastToBytes(TAILS)) requires `#isStaticType(_)_EVM-ABI_Bool_TypedArg`(#SemanticCastToTypedArg(ARG)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(155,10,157,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#encodeArgsAux(_,_,_,_)_EVM-ABI_Bytes_TypedArgs_Int_Bytes_Bytes`(`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList),#SemanticCastToInt(_),#SemanticCastToBytes(HEADS),#SemanticCastToBytes(TAILS))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(HEADS),#SemanticCastToBytes(TAILS)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(153,10,153,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#encodeArgs(_)_EVM-ABI_Bytes_TypedArgs`(#SemanticCastToTypedArgs(ARGS))=>`#encodeArgsAux(_,_,_,_)_EVM-ABI_Bytes_TypedArgs_Int_Bytes_Bytes`(#SemanticCastToTypedArgs(ARGS),`#lenOfHeads(_)_EVM-ABI_Int_TypedArgs`(#SemanticCastToTypedArgs(ARGS)),`.Bytes_BYTES-HOOKED_Bytes`(.KList),`.Bytes_BYTES-HOOKED_Bytes`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(151,10,151,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#encBytes(_,_)_EVM-ABI_Bytes_Int_Bytes`(#SemanticCastToInt(N),#SemanticCastToBytes(BS))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint256`(#SemanticCastToInt(N))),`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(BS),`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(`_-Int_`(`#ceil32(_)_BUF-SYNTAX_Int_Int`(#SemanticCastToInt(N)),#SemanticCastToInt(N)),#token("0","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(340,10,340,97)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint96`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint96`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(312,10,312,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint8`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint8`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(323,10,323,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint88`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint88`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(313,10,313,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint80`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint80`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(314,10,314,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint72`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint72`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(315,10,315,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint64`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint64`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(316,10,316,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint56`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint56`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(317,10,317,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint48`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint48`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(318,10,318,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint40`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint40`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(319,10,319,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint32`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint32`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(320,10,320,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint256`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint256`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(292,10,292,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint24`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint24`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(321,10,321,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint248`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint248`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(293,10,293,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint240`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint240`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(294,10,294,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint232`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint232`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(295,10,295,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint224`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint224`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(296,10,296,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint216`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint216`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(297,10,297,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint208`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint208`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(298,10,298,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint200`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint200`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(299,10,299,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint192`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint192`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(300,10,300,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint184`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint184`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(301,10,301,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint176`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint176`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(302,10,302,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint16`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint16`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(322,10,322,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint168`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint168`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(303,10,303,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint160`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint160`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(304,10,304,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint152`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint152`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(305,10,305,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint144`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint144`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(306,10,306,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint136`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint136`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(307,10,307,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint128`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint128`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(308,10,308,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint120`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint120`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(309,10,309,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint112`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint112`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(310,10,310,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint104`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_uint104`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(311,10,311,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_string`(#SemanticCastToString(STR)))=>`#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_bytes`(`#parseByteStackRaw(_)_SERIALIZATION_Bytes_String`(#SemanticCastToString(STR)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(336,10,336,75)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_int256`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_int256`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(325,10,325,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_int128`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_int128`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(326,10,326,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_bytes`(#SemanticCastToBytes(BS)))=>`#encBytes(_,_)_EVM-ABI_Bytes_Int_Bytes`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(BS)),#SemanticCastToBytes(BS)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(334,10,334,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_bytes4`(#SemanticCastToInt(DATA)))=>`#padRightToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("32","Int"),`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("4","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_bytes4`(#SemanticCastToInt(DATA))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(328,10,328,99)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_bytes32`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_bytes32`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(329,10,329,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_bool`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_bool`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(331,10,331,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_array`(#SemanticCastToTypedArg(_),#SemanticCastToInt(N),#SemanticCastToTypedArgs(DATA)))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_uint256`(#SemanticCastToInt(N))),`#encodeArgs(_)_EVM-ABI_Bytes_TypedArgs`(#SemanticCastToTypedArgs(DATA))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(335,10,335,80)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#enc(_)_EVM-ABI_Bytes_TypedArg`(`abi_type_address`(#SemanticCastToInt(DATA)))=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#getValue(_)_EVM-ABI_Int_TypedArg`(`abi_type_address`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(290,10,290,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#abiEventLog(_,_,_)_EVM-ABI_SubstateLogEntry_Int_String_EventArgs`(#SemanticCastToInt(ACCT_ID),#SemanticCastToString(EVENT_NAME),#SemanticCastToEventArgs(EVENT_ARGS))=>`{_|_|_}_EVM-TYPES_SubstateLogEntry_Int_List_Bytes`(#SemanticCastToInt(ACCT_ID),`#getEventTopics(_,_)_EVM-ABI_List_String_EventArgs`(#SemanticCastToString(EVENT_NAME),#SemanticCastToEventArgs(EVENT_ARGS)),`#encodeArgs(_)_EVM-ABI_Bytes_TypedArgs`(`#getNonIndexedArgs(_)_EVM-ABI_TypedArgs_EventArgs`(#SemanticCastToEventArgs(EVENT_ARGS)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(430,10,431,109)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#SemanticCastToString(FNAME),#SemanticCastToTypedArgs(ARGS))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#signatureCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#SemanticCastToString(FNAME),#SemanticCastToTypedArgs(ARGS)),`#encodeArgs(_)_EVM-ABI_Bytes_TypedArgs`(#SemanticCastToTypedArgs(ARGS))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(82,10,82,98)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module EVM-DATA [digest(r����C;��y!���e������vx�C�	�l), org.kframework.attributes.Location(Location(11,1,22,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md))]
  imports STRING-BUFFER
  imports SET-SYMBOLIC
  imports SERIALIZATION
  imports MAP-SYMBOLIC
  imports JSON-EXT
  imports EVM-TYPES
  imports COLLECTIONS
endmodule


module EVM-INT-SIMPLIFICATION [digest(P�(l�ȔX��H�TP`���{52v���ke�), org.kframework.attributes.Location(Location(3,1,5,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/evm-int-simplification.k))]
  imports EVM-INT-SIMPLIFICATION-HASKELL
endmodule


module EVM-INT-SIMPLIFICATION-COMMON [digest(�U��|=��4��� E�*n�j�>|���Z(��K�), org.kframework.attributes.Location(Location(11,1,55,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/evm-int-simplification.k))]
  imports INT
  imports EVM-TYPES
  imports BOOL
  rule `_==Int_`(#SemanticCastToInt(X),`_*Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Y)))=>`_==Int_`(`_modInt_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#token("0","Int")) requires `_<Int_`(#token("0","Int"),#SemanticCastToInt(Y)) ensures #token("true","Bool") [comm, label(EVM-INT-SIMPLIFICATION-COMMON.upInt-ref-eq), org.kframework.attributes.Location(Location(46,7,47,24)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/evm-int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_=/=Int_`(#SemanticCastToInt(X),`_*Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Y)))=>`_=/=Int_`(`_modInt_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#token("0","Int")) requires `_<Int_`(#token("0","Int"),#SemanticCastToInt(Y)) ensures #token("true","Bool") [comm, label(EVM-INT-SIMPLIFICATION-COMMON.upInt-refl-neq), org.kframework.attributes.Location(Location(51,7,52,24)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/evm-int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(`_*Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Y)),#SemanticCastToInt(Z))=>#token("true","Bool") requires `_andBool_`(`_<=Int_`(`_+Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Z)),`_<Int_`(#token("0","Int"),#SemanticCastToInt(Y))) ensures #token("true","Bool") [label(EVM-INT-SIMPLIFICATION-COMMON.upInt-lt-true), org.kframework.attributes.Location(Location(21,7,22,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/evm-int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(`_*Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Y)),#SemanticCastToInt(Z))=>#token("false","Bool") requires `_andBool_`(`_<=Int_`(#SemanticCastToInt(Z),#SemanticCastToInt(X)),`_<Int_`(#token("0","Int"),#SemanticCastToInt(Y))) ensures #token("true","Bool") [label(EVM-INT-SIMPLIFICATION-COMMON.upInt-lt-false), org.kframework.attributes.Location(Location(26,7,27,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/evm-int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(#SemanticCastToInt(X),`_*Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Y)))=>`_=/=Int_`(`_modInt_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#token("0","Int")) requires `_<Int_`(#token("0","Int"),#SemanticCastToInt(Y)) ensures #token("true","Bool") [label(EVM-INT-SIMPLIFICATION-COMMON.upInt-refl-gt), org.kframework.attributes.Location(Location(36,7,37,24)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/evm-int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(`_*Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Y)),#SemanticCastToInt(X))=>`_==Int_`(`_modInt_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#token("0","Int")) requires `_<Int_`(#token("0","Int"),#SemanticCastToInt(Y)) ensures #token("true","Bool") [label(EVM-INT-SIMPLIFICATION-COMMON.upInt-refl-leq), org.kframework.attributes.Location(Location(31,7,32,24)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/evm-int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(#SemanticCastToInt(X),`_*Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Y)))=>#token("true","Bool") requires `_<Int_`(#token("0","Int"),#SemanticCastToInt(Y)) ensures #token("true","Bool") [label(EVM-INT-SIMPLIFICATION-COMMON.upInt-refl-geq), org.kframework.attributes.Location(Location(41,7,42,24)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/evm-int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
endmodule


module EVM-INT-SIMPLIFICATION-HASKELL [digest(��PKz�r;Í��eR�C�ްT������), kore, org.kframework.attributes.Location(Location(7,1,9,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/evm-int-simplification.k)), symbolic]
  imports EVM-INT-SIMPLIFICATION-COMMON
endmodule


module EVM-OPTIMIZATIONS [digest(��!��kg����`�!8~�ƾ܎|�-=���), kore, org.kframework.attributes.Location(Location(20,1,289,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md))]
  imports INT-SIMPLIFICATION
  imports EVM-OPTIMIZATIONS-LEMMAS
  imports EVM
  rule `<kevm>`(#noDots(.KList),#cells(#cells(`<k>`(#noDots(.KList),`#next[_]_EVM_InternalOp_MaybeOpCode`(`SWAP(_)_EVM_StackOp_Int`(#SemanticCastToInt(N)))=>.K,#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<ethereum>`(#noDots(.KList),`<evm>`(#noDots(.KList),`<callState>`(#noDots(.KList),#cells(#cells(`<wordStack>`(#noDots(.KList),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),#SemanticCastToWordStack(WS))=>`_:__EVM-TYPES_WordStack_Int_WordStack`(`_[_]_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(WS),`_+Int_`(#SemanticCastToInt(N),#token("-1","Int"))),`_[_:=_]_EVM-TYPES_WordStack_WordStack_Int_Int`(#SemanticCastToWordStack(WS),`_+Int_`(#SemanticCastToInt(N),#token("-1","Int")),#SemanticCastToInt(W0))),#noDots(.KList)),`<pc>`(#noDots(.KList),#SemanticCastToInt(PCOUNT)=>`_+Int_`(#SemanticCastToInt(PCOUNT),#token("1","Int")),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL)=>`_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToGas(GAVAIL),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),#noDots(.KList))),#dots(.KList)),#dots(.KList)),#dots(.KList))),#dots(.KList)) requires `_andBool_`(`_andBool_`(`_<=Int_`(`#stackNeeded(_)_EVM_Int_OpCode`(`SWAP(_)_EVM_StackOp_Int`(#SemanticCastToInt(N))),`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),#SemanticCastToWordStack(WS)))),`_<=Gas__GAS-SYNTAX_Bool_Gas_Gas`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToGas(GAVAIL))),`_<=Int_`(`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(`_:__EVM-TYPES_WordStack_Int_WordStack`(`_[_]_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(WS),`_+Int_`(#SemanticCastToInt(N),#token("-1","Int"))),`_[_:=_]_EVM-TYPES_WordStack_WordStack_Int_Int`(#SemanticCastToWordStack(WS),`_+Int_`(#SemanticCastToInt(N),#token("-1","Int")),#SemanticCastToInt(W0)))),#token("1024","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(93,6,122,98)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule `<kevm>`(#noDots(.KList),#cells(#cells(`<k>`(#noDots(.KList),`#next[_]_EVM_InternalOp_MaybeOpCode`(`SUB_EVM_BinStackOp`(.KList))=>.K,#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<ethereum>`(#noDots(.KList),`<evm>`(#noDots(.KList),`<callState>`(#noDots(.KList),#cells(#cells(`<wordStack>`(#noDots(.KList),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W1),#SemanticCastToWordStack(WS)))=>`_:__EVM-TYPES_WordStack_Int_WordStack`(`chop(_)_WORD_Int_Int`(`_-Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#SemanticCastToWordStack(WS)),#noDots(.KList)),`<pc>`(#noDots(.KList),#SemanticCastToInt(PCOUNT)=>`_+Int_`(#SemanticCastToInt(PCOUNT),#token("1","Int")),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL)=>`_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToGas(GAVAIL),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),#noDots(.KList))),#dots(.KList)),#dots(.KList)),#dots(.KList))),#dots(.KList)) requires `_andBool_`(`_<=Gas__GAS-SYNTAX_Bool_Gas_Gas`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToGas(GAVAIL)),`_<=Int_`(`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(`_:__EVM-TYPES_WordStack_Int_WordStack`(`chop(_)_WORD_Int_Int`(`_-Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#SemanticCastToWordStack(WS))),#token("1024","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(158,6,186,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule `<kevm>`(#noDots(.KList),#cells(#cells(`<k>`(#noDots(.KList),`#next[_]_EVM_InternalOp_MaybeOpCode`(`PUSH(_)_EVM_PushOp_Int`(#SemanticCastToInt(N)))=>.K,#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<ethereum>`(#noDots(.KList),`<evm>`(#noDots(.KList),`<callState>`(#noDots(.KList),#cells(#cells(#cells(`<program>`(#noDots(.KList),#SemanticCastToBytes(PGM),#noDots(.KList)),`<wordStack>`(#noDots(.KList),#SemanticCastToWordStack(WS)=>`_:__EVM-TYPES_WordStack_Int_WordStack`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(PGM),`_+Int_`(#SemanticCastToInt(PCOUNT),#token("1","Int")),#SemanticCastToInt(N))),#SemanticCastToWordStack(WS)),#noDots(.KList))),`<pc>`(#noDots(.KList),#SemanticCastToInt(PCOUNT)=>`_+Int_`(`_+Int_`(#SemanticCastToInt(PCOUNT),#SemanticCastToInt(N)),#token("1","Int")),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL)=>`_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToGas(GAVAIL),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),#noDots(.KList))),#dots(.KList)),#dots(.KList)),#dots(.KList))),#dots(.KList)) requires `_andBool_`(`_<=Gas__GAS-SYNTAX_Bool_Gas_Gas`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToGas(GAVAIL)),`_<=Int_`(`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(`_:__EVM-TYPES_WordStack_Int_WordStack`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(PGM),`_+Int_`(#SemanticCastToInt(PCOUNT),#token("1","Int")),#SemanticCastToInt(N))),#SemanticCastToWordStack(WS))),#token("1024","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(25,6,56,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule `<kevm>`(#noDots(.KList),#cells(#cells(`<k>`(#noDots(.KList),`#next[_]_EVM_InternalOp_MaybeOpCode`(`LT_EVM_BinStackOp`(.KList))=>.K,#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<ethereum>`(#noDots(.KList),`<evm>`(#noDots(.KList),`<callState>`(#noDots(.KList),#cells(#cells(`<wordStack>`(#noDots(.KList),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W1),#SemanticCastToWordStack(WS)))=>`_:__EVM-TYPES_WordStack_Int_WordStack`(`bool2Word(_)_EVM-TYPES_Int_Bool`(`_<Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#SemanticCastToWordStack(WS)),#noDots(.KList)),`<pc>`(#noDots(.KList),#SemanticCastToInt(PCOUNT)=>`_+Int_`(#SemanticCastToInt(PCOUNT),#token("1","Int")),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL)=>`_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToGas(GAVAIL),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),#noDots(.KList))),#dots(.KList)),#dots(.KList)),#dots(.KList))),#dots(.KList)) requires `_andBool_`(`_<=Gas__GAS-SYNTAX_Bool_Gas_Gas`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToGas(GAVAIL)),`_<=Int_`(`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(`_:__EVM-TYPES_WordStack_Int_WordStack`(`bool2Word(_)_EVM-TYPES_Int_Bool`(`_<Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#SemanticCastToWordStack(WS))),#token("1024","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(222,6,250,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule `<kevm>`(#noDots(.KList),#cells(#cells(`<k>`(#noDots(.KList),`#next[_]_EVM_InternalOp_MaybeOpCode`(`GT_EVM_BinStackOp`(.KList))=>.K,#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<ethereum>`(#noDots(.KList),`<evm>`(#noDots(.KList),`<callState>`(#noDots(.KList),#cells(#cells(`<wordStack>`(#noDots(.KList),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W1),#SemanticCastToWordStack(WS)))=>`_:__EVM-TYPES_WordStack_Int_WordStack`(`bool2Word(_)_EVM-TYPES_Int_Bool`(`_<Int_`(#SemanticCastToInt(W1),#SemanticCastToInt(W0))),#SemanticCastToWordStack(WS)),#noDots(.KList)),`<pc>`(#noDots(.KList),#SemanticCastToInt(PCOUNT)=>`_+Int_`(#SemanticCastToInt(PCOUNT),#token("1","Int")),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL)=>`_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToGas(GAVAIL),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),#noDots(.KList))),#dots(.KList)),#dots(.KList)),#dots(.KList))),#dots(.KList)) requires `_andBool_`(`_<=Gas__GAS-SYNTAX_Bool_Gas_Gas`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToGas(GAVAIL)),`_<=Int_`(`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(`_:__EVM-TYPES_WordStack_Int_WordStack`(`bool2Word(_)_EVM-TYPES_Int_Bool`(`_<Int_`(#SemanticCastToInt(W1),#SemanticCastToInt(W0))),#SemanticCastToWordStack(WS))),#token("1024","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(254,6,282,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule `<kevm>`(#noDots(.KList),#cells(#cells(`<k>`(#noDots(.KList),`#next[_]_EVM_InternalOp_MaybeOpCode`(`DUP(_)_EVM_StackOp_Int`(#SemanticCastToInt(N)))=>.K,#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<ethereum>`(#noDots(.KList),`<evm>`(#noDots(.KList),`<callState>`(#noDots(.KList),#cells(#cells(`<wordStack>`(#noDots(.KList),#SemanticCastToWordStack(WS)=>`_:__EVM-TYPES_WordStack_Int_WordStack`(`_[_]_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(WS),`_+Int_`(#SemanticCastToInt(N),#token("-1","Int"))),#SemanticCastToWordStack(WS)),#noDots(.KList)),`<pc>`(#noDots(.KList),#SemanticCastToInt(PCOUNT)=>`_+Int_`(#SemanticCastToInt(PCOUNT),#token("1","Int")),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL)=>`_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToGas(GAVAIL),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),#noDots(.KList))),#dots(.KList)),#dots(.KList)),#dots(.KList))),#dots(.KList)) requires `_andBool_`(`_andBool_`(`_<=Int_`(`#stackNeeded(_)_EVM_Int_OpCode`(`DUP(_)_EVM_StackOp_Int`(#SemanticCastToInt(N))),`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(#SemanticCastToWordStack(WS))),`_<=Gas__GAS-SYNTAX_Bool_Gas_Gas`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToGas(GAVAIL))),`_<=Int_`(`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(`_:__EVM-TYPES_WordStack_Int_WordStack`(`_[_]_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(WS),`_+Int_`(#SemanticCastToInt(N),#token("-1","Int"))),#SemanticCastToWordStack(WS))),#token("1024","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(60,6,89,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule `<kevm>`(#noDots(.KList),#cells(#cells(`<k>`(#noDots(.KList),`#next[_]_EVM_InternalOp_MaybeOpCode`(`AND_EVM_BinStackOp`(.KList))=>.K,#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<ethereum>`(#noDots(.KList),`<evm>`(#noDots(.KList),`<callState>`(#noDots(.KList),#cells(#cells(`<wordStack>`(#noDots(.KList),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W1),#SemanticCastToWordStack(WS)))=>`_:__EVM-TYPES_WordStack_Int_WordStack`(`_&Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToWordStack(WS)),#noDots(.KList)),`<pc>`(#noDots(.KList),#SemanticCastToInt(PCOUNT)=>`_+Int_`(#SemanticCastToInt(PCOUNT),#token("1","Int")),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL)=>`_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToGas(GAVAIL),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),#noDots(.KList))),#dots(.KList)),#dots(.KList)),#dots(.KList))),#dots(.KList)) requires `_andBool_`(`_<=Gas__GAS-SYNTAX_Bool_Gas_Gas`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToGas(GAVAIL)),`_<=Int_`(`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(`_:__EVM-TYPES_WordStack_Int_WordStack`(`_&Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToWordStack(WS))),#token("1024","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(190,6,218,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule `<kevm>`(#noDots(.KList),#cells(#cells(`<k>`(#noDots(.KList),`#next[_]_EVM_InternalOp_MaybeOpCode`(`ADD_EVM_BinStackOp`(.KList))=>.K,#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<ethereum>`(#noDots(.KList),`<evm>`(#noDots(.KList),`<callState>`(#noDots(.KList),#cells(#cells(`<wordStack>`(#noDots(.KList),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W1),#SemanticCastToWordStack(WS)))=>`_:__EVM-TYPES_WordStack_Int_WordStack`(`chop(_)_WORD_Int_Int`(`_+Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#SemanticCastToWordStack(WS)),#noDots(.KList)),`<pc>`(#noDots(.KList),#SemanticCastToInt(PCOUNT)=>`_+Int_`(#SemanticCastToInt(PCOUNT),#token("1","Int")),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToGas(GAVAIL)=>`_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToGas(GAVAIL),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),#noDots(.KList))),#dots(.KList)),#dots(.KList)),#dots(.KList))),#dots(.KList)) requires `_andBool_`(`_<=Gas__GAS-SYNTAX_Bool_Gas_Gas`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToGas(GAVAIL)),`_<=Int_`(`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(`_:__EVM-TYPES_WordStack_Int_WordStack`(`chop(_)_WORD_Int_Int`(`_+Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#SemanticCastToWordStack(WS))),#token("1024","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(126,6,154,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
endmodule


module EVM-OPTIMIZATIONS-LEMMAS [digest(J���{�|�I6�l&�r�Z��_��$U�	@Zc�), kore, org.kframework.attributes.Location(Location(10,1,18,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)), symbolic]
  imports EVM
  rule `_<Int_`(`#sizeWordStack(_,_)_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(_),#token("0","Int")),#SemanticCastToInt(N))=>#token("false","Bool") requires `_<=Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(16,10,16,93)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`#sizeWordStack(_,_)_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(_),#token("0","Int")))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(15,10,15,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `#sizeWordStack(_,_)_EVM-TYPES_Int_WordStack_Int`(`_[_:=_]_EVM-TYPES_WordStack_WordStack_Int_Int`(#SemanticCastToWordStack(WS),#SemanticCastToInt(I),#SemanticCastToInt(_)),#SemanticCastToInt(N))=>`#sizeWordStack(_,_)_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(WS),#SemanticCastToInt(N)) requires `_<Int_`(#SemanticCastToInt(I),`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(#SemanticCastToWordStack(WS))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(14,10,14,109)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#sizeWordStack(_,_)_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(WS),#SemanticCastToInt(N))=>`_+Int_`(`#sizeWordStack(_,_)_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(WS),#token("0","Int")),#SemanticCastToInt(N)) requires `_=/=Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(13,10,13,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
endmodule


module EVM-TYPES [digest(!�aY����'a�,��@HH�<�&��)M�ѯ!^9o), org.kframework.attributes.Location(Location(11,1,468,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md))]
  imports WORD
  imports STRING
  imports K-EQUAL
  imports JSON
  imports COLLECTIONS
  syntax WordStack ::= WordStack "[" Int ":=" Int "]" [function, total]
  syntax WordStack ::= Int ":" WordStack [klabel(_:_WS), smtlib(_WS_)]
  syntax WordStack ::= ".WordStack" [smtlib(_dotWS)]
  syntax WordStack ::= "#take" "(" Int "," WordStack ")" [function, klabel(takeWordStack), total]
  syntax WordStack ::= "#replicateAux" "(" Int "," Int "," WordStack ")" [function, klabel(#replicateAux), total]
  syntax WordStack ::= "#replicate" "(" Int "," Int ")" [function, klabel(#replicate), total]
  syntax WordStack ::= "#drop" "(" Int "," WordStack ")" [function, klabel(dropWordStack), total]
  syntax TxType ::= "Legacy"
  syntax TxType ::= "DynamicFee"
  syntax TxType ::= "AccessList"
  syntax TxType ::= ".TxType"
  syntax TxType ::= "#asmTxPrefix" "(" Int ")" [function, klabel(#asmTxPrefix)]
  syntax TxData ::= LegacyTx
  syntax TxData ::= DynamicFeeTx
  syntax TxData ::= AccessListTx
  syntax SubstateLogEntry ::= "{" Int "|" List "|" Bytes "}" [klabel(logEntry)]
  syntax List ::= "WordStack2List" "(" WordStack ")" [function, klabel(WordStack2List), total]
  syntax LegacyTx ::= "LegacyTxData" "(" nonce:Int "," gasPrice:Int "," gasLimit:Int "," to:Account "," value:Int "," data:Bytes ")" [klabel(LegacyTxData)]
  syntax LegacyTx ::= "LegacyProtectedTxData" "(" nonce:Int "," gasPrice:Int "," gasLimit:Int "," to:Account "," value:Int "," data:Bytes "," chainId:Int ")" [klabel(LegacyProtectedTxData)]
  syntax Int ::= WordStack "[" Int "]" [function, total]
  syntax Int ::= Int "|Word" Int [function, total]
  syntax Int ::= Int "xorWord" Int [function, total]
  syntax Int ::= Int "up/Int" Int [function, smtlib(upDivInt), total]
  syntax Int ::= Int "s<Word" Int [function, total]
  syntax Int ::= Int "^Word" Int [function]
  syntax Int ::= Int ">Word" Int [function, total]
  syntax Int ::= Int ">>sWord" Int [function, total]
  syntax Int ::= Int ">>Word" Int [function, total]
  syntax Int ::= Int ">=Word" Int [function, total]
  syntax Int ::= Int "==Word" Int [function, total]
  syntax Int ::= Int "<Word" Int [function, total]
  syntax Int ::= Int "<=Word" Int [function, total]
  syntax Int ::= Int "<<Word" Int [function, total]
  syntax Int ::= Int "/sWord" Int [function]
  syntax Int ::= Int "/Word" Int [function, total]
  syntax Int ::= Int "-Word" Int [function, total]
  syntax Int ::= Int "+Word" Int [function, total]
  syntax Int ::= Int "*Word" Int [function, total]
  syntax Int ::= Int "&Word" Int [function, total]
  syntax Int ::= Int "%sWord" Int [function]
  syntax Int ::= Int "%Word" Int [function, total]
  syntax Int ::= "~Word" Int [function, total]
  syntax Int ::= "signextend" "(" Int "," Int ")" [function, klabel(signextend), total]
  syntax Int ::= "sgn" "(" Int ")" [function, klabel(sgn), total]
  syntax Int ::= "powmod" "(" Int "," Int "," Int ")" [function, klabel(powmod), total]
  syntax Int ::= "log256Int" "(" Int ")" [function, klabel(log256Int)]
  syntax Int ::= "byte" "(" Int "," Int ")" [function, klabel(byte)]
  syntax Int ::= "bool2Word" "(" Bool ")" [function, klabel(bool2Word), smtlib(bool2Word), total]
  syntax Int ::= "bit" "(" Int "," Int ")" [function, klabel(bit)]
  syntax Int ::= "abs" "(" Int ")" [function, klabel(abs), total]
  syntax Int ::= "#sizeWordStack" "(" WordStack "," Int ")" [function, klabel(sizeWordStackAux), smtlib(sizeWordStackAux), total]
  syntax Int ::= "#sizeWordStack" "(" WordStack ")" [function, klabel(#sizeWordStack), smtlib(sizeWordStack), total]
  syntax Int ::= "#nBytes" "(" Int ")" [function, klabel(#nBytes)]
  syntax Int ::= "#nBits" "(" Int ")" [function, klabel(#nBits)]
  syntax Int ::= "#lookupMemory" "(" Map "," Int ")" [function, klabel(#lookupMemory), smtlib(lookupMemory), total]
  syntax Int ::= "#lookup" "(" Map "," Int ")" [function, klabel(#lookup), smtlib(lookup), total]
  syntax Int ::= "#dasmTxPrefix" "(" TxType ")" [function, klabel(#dasmTxPrefix)]
  syntax Int ::= "#asWord" "(" Bytes ")" [function, klabel(#asWord), smtlib(asWord), total]
  syntax Int ::= "#asInteger" "(" Bytes ")" [function, klabel(#asInteger), total]
  syntax Int ::= "#addr" "(" Int ")" [function, klabel(#addr), total]
  syntax DynamicFeeTx ::= "DynamicFeeTxData" "(" nonce:Int "," priorityGasFee:Int "," maxGasFee:Int "," gasLimit:Int "," to:Account "," value:Int "," data:Bytes "," chainId:Int "," accessLists:JSONs ")" [klabel(DynamicFeeTxData)]
  syntax Bytes ::= Int ":" Bytes [function]
  syntax Bytes ::= Bytes "[" Int ":=" Bytes "]" [function, klabel(mapWriteRange), total]
  syntax Bytes ::= "#write" "(" Bytes "," Int "," Int ")" [function]
  syntax Bytes ::= "#range" "(" Bytes "," Int "," Int ")" [function, klabel(#range), total]
  syntax Bytes ::= "#padToWidth" "(" Int "," Bytes ")" [function, klabel(#padToWidth), total]
  syntax Bytes ::= "#padRightToWidth" "(" Int "," Bytes ")" [function, klabel(#padRightToWidth), total]
  syntax Bytes ::= "#asByteStack" "(" Int ")" [function, klabel(#asByteStack), total]
  syntax Bool ::= Int "in" WordStack [function]
  syntax Bool ::= "word2Bool" "(" Int ")" [function, klabel(word2Bool), total]
  syntax AccountCode ::= Bytes
  syntax Account ::= Int
  syntax Account ::= ".Account"
  syntax Account ::= "#asAccount" "(" Bytes ")" [function, klabel(#asAccount)]
  syntax AccessListTx ::= "AccessListTxData" "(" nonce:Int "," gasPrice:Int "," gasLimit:Int "," to:Account "," value:Int "," data:Bytes "," chainId:Int "," accessLists:JSONs ")" [klabel(AccessListTxData)]
  rule `~Word__EVM-TYPES_Int_Int`(#SemanticCastToInt(W))=>`_xorInt_`(#SemanticCastToInt(W),`maxUInt256_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(171,10,171,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `word2Bool(_)_EVM-TYPES_Bool_Int`(#SemanticCastToInt(W))=>#token("true","Bool") requires `_=/=Int_`(#SemanticCastToInt(W),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(38,10,38,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `word2Bool(_)_EVM-TYPES_Bool_Int`(#SemanticCastToInt(W))=>#token("false","Bool") requires `_==Int_`(#SemanticCastToInt(W),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(37,10,37,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `signextend(_,_)_EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(N),#SemanticCastToInt(W))=>`chop(_)_WORD_Int_Int`(`_|Int_`(`_<<Byte__WORD_Int_Int_Int`(`#nBytes(_)_EVM-TYPES_Int_Int`(`_-Int_`(#token("31","Int"),#SemanticCastToInt(N))),`_+Int_`(#SemanticCastToInt(N),#token("1","Int"))),#SemanticCastToInt(W))) requires `_andBool_`(`_andBool_`(`_<Int_`(#SemanticCastToInt(N),#token("32","Int")),`_>=Int_`(#SemanticCastToInt(N),#token("0","Int"))),`word2Bool(_)_EVM-TYPES_Bool_Int`(`bit(_,_)_EVM-TYPES_Int_Int_Int`(`_-Int_`(#token("256","Int"),`_*Int_`(#token("8","Int"),`_+Int_`(#SemanticCastToInt(N),#token("1","Int")))),#SemanticCastToInt(W)))) ensures #token("true","Bool") [concrete, label(EVM-TYPES.signextend.negative), org.kframework.attributes.Location(Location(214,33,214,207)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `signextend(_,_)_EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(N),#SemanticCastToInt(W))=>`chop(_)_WORD_Int_Int`(`_&Int_`(`#nBytes(_)_EVM-TYPES_Int_Int`(`_+Int_`(#SemanticCastToInt(N),#token("1","Int"))),#SemanticCastToInt(W))) requires `_andBool_`(`_andBool_`(`_<Int_`(#SemanticCastToInt(N),#token("32","Int")),`_>=Int_`(#SemanticCastToInt(N),#token("0","Int"))),`notBool_`(`word2Bool(_)_EVM-TYPES_Bool_Int`(`bit(_,_)_EVM-TYPES_Int_Int_Int`(`_-Int_`(#token("256","Int"),`_*Int_`(#token("8","Int"),`_+Int_`(#SemanticCastToInt(N),#token("1","Int")))),#SemanticCastToInt(W))))) ensures #token("true","Bool") [concrete, label(EVM-TYPES.signextend.positive), org.kframework.attributes.Location(Location(215,33,215,207)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `signextend(_,_)_EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(N),#SemanticCastToInt(W))=>#SemanticCastToInt(W) requires `_orBool_`(`_>=Int_`(#SemanticCastToInt(N),#token("32","Int")),`_<Int_`(#SemanticCastToInt(N),#token("0","Int"))) ensures #token("true","Bool") [concrete, label(EVM-TYPES.signextend.invalid), org.kframework.attributes.Location(Location(213,33,213,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(I))=>#token("1","Int") requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(I)),`_<Int_`(#SemanticCastToInt(I),`pow255_WORD_Int`(.KList))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(49,10,49,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(I))=>#token("0","Int") requires `_orBool_`(`_<Int_`(#SemanticCastToInt(I),#token("0","Int")),`_<=Int_`(`pow256_WORD_Int`(.KList),#SemanticCastToInt(I))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(50,10,50,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(I))=>#token("-1","Int") requires `_andBool_`(`_<=Int_`(`pow255_WORD_Int`(.KList),#SemanticCastToInt(I)),`_<Int_`(#SemanticCastToInt(I),`pow256_WORD_Int`(.KList))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(48,10,48,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `powmod(_,_,_)_EVM-TYPES_Int_Int_Int_Int`(#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(W2))=>#token("0","Int") requires `_==Int_`(#SemanticCastToInt(W2),#token("0","Int")) ensures #token("true","Bool") [concrete, label(EVM-TYPES.powmod.zero), org.kframework.attributes.Location(Location(114,28,114,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `powmod(_,_,_)_EVM-TYPES_Int_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2))=>`_^%Int__`(#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2)) requires `_=/=Int_`(#SemanticCastToInt(W2),#token("0","Int")) ensures #token("true","Bool") [concrete, label(EVM-TYPES.powmod.nonzero), org.kframework.attributes.Location(Location(113,28,113,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `log256Int(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(N))=>`_/Int_`(`log2Int(_)_INT-COMMON_Int_Int`(#SemanticCastToInt(N)),#token("8","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(81,10,81,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `byte(_,_)_EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(N),#SemanticCastToInt(_))=>#token("0","Int") requires `notBool_`(`_andBool_`(`_>=Int_`(#SemanticCastToInt(N),#token("0","Int")),`_<Int_`(#SemanticCastToInt(N),#token("32","Int")))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(191,10,191,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `byte(_,_)_EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(N),#SemanticCastToInt(W))=>`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(#SemanticCastToInt(W),`_*Int_`(`_-Int_`(#token("31","Int"),#SemanticCastToInt(N)),#token("8","Int")),#token("8","Int")) requires `_andBool_`(`_>=Int_`(#SemanticCastToInt(N),#token("0","Int")),`_<Int_`(#SemanticCastToInt(N),#token("32","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(194,10,194,102)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `bool2Word(_)_EVM-TYPES_Int_Bool`(#token("true","Bool"))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(32,10,32,33)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `bool2Word(_)_EVM-TYPES_Int_Bool`(#token("false","Bool"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(33,10,33,33)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `bit(_,_)_EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(N),#SemanticCastToInt(_))=>#token("0","Int") requires `notBool_`(`_andBool_`(`_>=Int_`(#SemanticCastToInt(N),#token("0","Int")),`_<Int_`(#SemanticCastToInt(N),#token("256","Int")))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(190,10,190,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `bit(_,_)_EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(N),#SemanticCastToInt(W))=>`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(#SemanticCastToInt(W),`_-Int_`(#token("255","Int"),#SemanticCastToInt(N)),#token("1","Int")) requires `_andBool_`(`_>=Int_`(#SemanticCastToInt(N),#token("0","Int")),`_<Int_`(#SemanticCastToInt(N),#token("256","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(193,10,193,102)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `abs(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(I))=>`_-Word__EVM-TYPES_Int_Int_Int`(#token("0","Int"),#SemanticCastToInt(I)) requires `_==Int_`(`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(I)),#token("-1","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(52,10,52,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `abs(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(I))=>#token("0","Int") requires `_==Int_`(`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(I)),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(54,10,54,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `abs(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(I))=>#SemanticCastToInt(I) requires `_==Int_`(`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(I)),#token("1","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(53,10,53,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_|Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_|Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(172,10,172,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_xorWord__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_xorInt_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(174,10,174,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(_I1),#token("0","Int"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(70,10,70,28)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(_I1),#SemanticCastToInt(I2))=>#token("0","Int") requires `_<=Int_`(#SemanticCastToInt(I2),#token("0","Int")) ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(71,10,71,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(I1),#token("1","Int"))=>#SemanticCastToInt(I1) requires #token("true","Bool") ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(72,11,72,29)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_/Int_`(`_+Int_`(#SemanticCastToInt(I1),`_-Int_`(#SemanticCastToInt(I2),#token("1","Int"))),#SemanticCastToInt(I2)) requires `_<Int_`(#token("1","Int"),#SemanticCastToInt(I2)) ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(73,11,73,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_s<Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`bool2Word(_)_EVM-TYPES_Int_Bool`(#token("true","Bool")) requires `_andBool_`(`_==K_`(`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0)),#token("-1","Int")),`_==K_`(`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W1)),#token("1","Int"))) ensures #token("true","Bool") [label(EVM-TYPES.s<Word.np), org.kframework.attributes.Location(Location(154,23,154,106)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_s<Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`bool2Word(_)_EVM-TYPES_Int_Bool`(#token("false","Bool")) requires `_andBool_`(`_==K_`(`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0)),#token("1","Int")),`_==K_`(`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W1)),#token("-1","Int"))) ensures #token("true","Bool") [label(EVM-TYPES.s<Word.pn), org.kframework.attributes.Location(Location(153,23,153,107)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_s<Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_<Word__EVM-TYPES_Int_Int_Int`(`abs(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W1)),`abs(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0))) requires `_andBool_`(`_==K_`(`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0)),#token("-1","Int")),`_==K_`(`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W1)),#token("-1","Int"))) ensures #token("true","Bool") [label(EVM-TYPES.s<Word.nn), org.kframework.attributes.Location(Location(155,23,155,107)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_s<Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_<Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) requires `_andBool_`(`_==K_`(`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0)),#token("1","Int")),`_==K_`(`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W1)),#token("1","Int"))) ensures #token("true","Bool") [label(EVM-TYPES.s<Word.pp), org.kframework.attributes.Location(Location(152,23,152,106)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_in__EVM-TYPES_Bool_Int_WordStack`(#SemanticCastToInt(_),`.WordStack_EVM-TYPES_WordStack`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(292,10,292,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_in__EVM-TYPES_Bool_Int_WordStack`(#SemanticCastToInt(W),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W'),#SemanticCastToWordStack(WS)))=>`_orElseBool_`(`_==K_`(#SemanticCastToInt(W),#SemanticCastToInt(W')),`_in__EVM-TYPES_Bool_Int_WordStack`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(293,10,293,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_^Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`powmod(_,_,_)_EVM-TYPES_Int_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1),`pow256_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(111,10,111,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_[_]_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W),#SemanticCastToWordStack(_))),#SemanticCastToInt(N))=>#SemanticCastToInt(W) requires `_==Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(267,10,267,74)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_[_]_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(_),#SemanticCastToInt(N))=>#token("0","Int") requires `_<Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(269,11,269,74)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_[_]_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(WS),#SemanticCastToInt(N))=>`_[_]_EVM-TYPES_Int_WordStack_Int`(`#drop(_,_)_EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(N),#SemanticCastToWordStack(WS)),#token("0","Int")) requires `_>Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(268,10,268,74)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_[_:=_]_EVM-TYPES_WordStack_WordStack_Int_Int`(`.WordStack_EVM-TYPES_WordStack`(.KList),#SemanticCastToInt(N),#SemanticCastToInt(W))=>`_[_:=_]_EVM-TYPES_WordStack_WordStack_Int_Int`(`_:__EVM-TYPES_WordStack_Int_WordStack`(#token("0","Int"),`.WordStack_EVM-TYPES_WordStack`(.KList)),#SemanticCastToInt(N),#SemanticCastToInt(W)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(276,10,276,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_[_:=_]_EVM-TYPES_WordStack_WordStack_Int_Int`(#SemanticCastToWordStack(`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(_W0),#SemanticCastToWordStack(WS))),#SemanticCastToInt(N),#SemanticCastToInt(W))=>`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS)) requires `_==Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(273,10,273,91)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_[_:=_]_EVM-TYPES_WordStack_WordStack_Int_Int`(#SemanticCastToWordStack(`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),#SemanticCastToWordStack(WS))),#SemanticCastToInt(N),#SemanticCastToInt(W))=>`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W0),`_[_:=_]_EVM-TYPES_WordStack_WordStack_Int_Int`(#SemanticCastToWordStack(WS),`_-Int_`(#SemanticCastToInt(N),#token("1","Int")),#SemanticCastToInt(W))) requires `_>Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(274,10,274,91)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_[_:=_]_EVM-TYPES_WordStack_WordStack_Int_Int`(#SemanticCastToWordStack(WS),#SemanticCastToInt(N),#SemanticCastToInt(_))=>#SemanticCastToWordStack(WS) requires `_<Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(275,17,275,91)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(_),#SemanticCastToInt(START),#SemanticCastToBytes(_))=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires `_<Int_`(#SemanticCastToInt(START),#token("0","Int")) ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(330,10,330,133)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(WS),#SemanticCastToInt(START),#SemanticCastToBytes(WS'))=>`replaceAtBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Bytes`(`padRightBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(WS),`_+Int_`(#SemanticCastToInt(START),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(WS'))),#token("0","Int")),#SemanticCastToInt(START),#SemanticCastToBytes(WS')) requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(START)),`_=/=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(WS')),#token("0","Int"))) ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(329,10,329,171)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_[_:=_]_EVM-TYPES_Bytes_Bytes_Int_Bytes`(#SemanticCastToBytes(WS),#SemanticCastToInt(START),#SemanticCastToBytes(WS'))=>#SemanticCastToBytes(WS) requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(START)),`_==Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(WS')),#token("0","Int"))) ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(328,10,328,171)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_>Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`bool2Word(_)_EVM-TYPES_Int_Bool`(`_>Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(141,10,141,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_>>sWord__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(_),#SemanticCastToInt(_))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(180,11,180,28)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `_>>sWord__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`chop(_)_WORD_Int_Int`(`_>>Int_`(`_*Int_`(`abs(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0)),`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0))),#SemanticCastToInt(W1))) requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W0)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W1))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(179,10,179,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_>>Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(_),#SemanticCastToInt(_))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(178,11,178,28)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `_>>Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_>>Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W0)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W1))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(177,10,177,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_>=Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`bool2Word(_)_EVM-TYPES_Int_Bool`(`_>=Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(143,10,143,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_==Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`bool2Word(_)_EVM-TYPES_Int_Bool`(`_==Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(144,10,144,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`bool2Word(_)_EVM-TYPES_Int_Bool`(`_<Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(140,10,140,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<=Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`bool2Word(_)_EVM-TYPES_Int_Bool`(`_<=Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(142,10,142,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(_),#SemanticCastToInt(_))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(176,11,176,28)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `_<<Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`chop(_)_WORD_Int_Int`(`_<<Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))) requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W0)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(W1))),`_<Int_`(#SemanticCastToInt(W1),#token("256","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(175,10,175,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_:__EVM-TYPES_Bytes_Int_Bytes`(#SemanticCastToInt(I),#SemanticCastToBytes(BS))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(#token("1","Int"),#SemanticCastToInt(I),bigEndianBytes(.KList)),#SemanticCastToBytes(BS)) requires `_<Int_`(#SemanticCastToInt(I),#token("256","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(238,10,238,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_/sWord__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_/Word__EVM-TYPES_Int_Int_Int`(`abs(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0)),`abs(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W1))) requires `_==Int_`(`_*Int_`(`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0)),`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W1))),#token("1","Int")) ensures #token("true","Bool") [label(EVM-TYPES.divSWord.same), org.kframework.attributes.Location(Location(123,27,123,113)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_/sWord__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_-Word__EVM-TYPES_Int_Int_Int`(#token("0","Int"),`_/Word__EVM-TYPES_Int_Int_Int`(`abs(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0)),`abs(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W1)))) requires `_==Int_`(`_*Int_`(`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0)),`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W1))),#token("-1","Int")) ensures #token("true","Bool") [label(EVM-TYPES.divSWord.diff), org.kframework.attributes.Location(Location(124,27,124,113)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_/Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(_),#SemanticCastToInt(W1))=>#token("0","Int") requires `_==Int_`(#SemanticCastToInt(W1),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(97,11,97,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_/Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_/Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) requires `_=/=Int_`(#SemanticCastToInt(W1),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(98,10,98,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_-Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`chop(_)_WORD_Int_Int`(`_-Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(95,10,95,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_+Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`chop(_)_WORD_Int_Int`(`_+Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(94,10,94,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_*Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`chop(_)_WORD_Int_Int`(`_*Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(96,10,96,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_&Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_&Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(173,10,173,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_%sWord__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_-Word__EVM-TYPES_Int_Int_Int`(#token("0","Int"),`_%Word__EVM-TYPES_Int_Int_Int`(`abs(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0)),`abs(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W1)))) requires `_==Int_`(`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0)),#token("-1","Int")) ensures #token("true","Bool") [label(EVM-TYPES.modSWord.neg), org.kframework.attributes.Location(Location(126,27,126,100)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_%sWord__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_%Word__EVM-TYPES_Int_Int_Int`(`abs(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0)),`abs(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W1))) requires `_==Int_`(`sgn(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W0)),#token("1","Int")) ensures #token("true","Bool") [label(EVM-TYPES.modSWord.pos), org.kframework.attributes.Location(Location(125,27,125,100)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_%Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(_),#SemanticCastToInt(W1))=>#token("0","Int") requires `_==Int_`(#SemanticCastToInt(W1),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(99,11,99,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_%Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))=>`_modInt_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) requires `_=/=Int_`(#SemanticCastToInt(W1),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(100,10,100,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `WordStack2List(_)_EVM-TYPES_List_WordStack`(`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS)))=>`_List_`(`ListItem`(#SemanticCastToInt(W)),`WordStack2List(_)_EVM-TYPES_List_WordStack`(#SemanticCastToWordStack(WS))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(314,10,314,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `WordStack2List(_)_EVM-TYPES_List_WordStack`(`.WordStack_EVM-TYPES_WordStack`(.KList))=>`.List`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(313,10,313,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#write(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(WM),#SemanticCastToInt(IDX),#SemanticCastToInt(VAL))=>`_[_<-_]_BYTES-HOOKED_Bytes_Bytes_Int_Int`(`padRightBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(WM),`_+Int_`(#SemanticCastToInt(IDX),#token("1","Int")),#token("0","Int")),#SemanticCastToInt(IDX),#SemanticCastToInt(VAL)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(326,10,326,81)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#take(_,_)_EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(N),`.WordStack_EVM-TYPES_WordStack`(.KList))=>`_:__EVM-TYPES_WordStack_Int_WordStack`(#token("0","Int"),`#take(_,_)_EVM-TYPES_WordStack_Int_WordStack`(`_-Int_`(#SemanticCastToInt(N),#token("1","Int")),`.WordStack_EVM-TYPES_WordStack`(.KList))) requires `_>Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [label(EVM-TYPES.#take.zero-pad), org.kframework.attributes.Location(Location(248,29,248,110)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#take(_,_)_EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(N),#SemanticCastToWordStack(`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS))))=>`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W),`#take(_,_)_EVM-TYPES_WordStack_Int_WordStack`(`_-Int_`(#SemanticCastToInt(N),#token("1","Int")),#SemanticCastToWordStack(WS))) requires `_>Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [label(EVM-TYPES.#take.recursive), org.kframework.attributes.Location(Location(249,29,249,110)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#take(_,_)_EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(N),#SemanticCastToWordStack(_WS))=>`.WordStack_EVM-TYPES_WordStack`(.KList) requires `notBool_`(`_>Int_`(#SemanticCastToInt(N),#token("0","Int"))) ensures #token("true","Bool") [label(EVM-TYPES.#take.base), org.kframework.attributes.Location(Location(247,29,247,118)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#sizeWordStack(_,_)_EVM-TYPES_Int_WordStack_Int`(`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(_),#SemanticCastToWordStack(WS)),#SemanticCastToInt(SIZE))=>`#sizeWordStack(_,_)_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(WS),`_+Int_`(#SemanticCastToInt(SIZE),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(288,10,288,80)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#sizeWordStack(_,_)_EVM-TYPES_Int_WordStack_Int`(`.WordStack_EVM-TYPES_WordStack`(.KList),#SemanticCastToInt(SIZE))=>#SemanticCastToInt(SIZE) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(287,10,287,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(#SemanticCastToWordStack(WS))=>`#sizeWordStack(_,_)_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(WS),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(286,10,286,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#replicateAux(_,_,_)_EVM-TYPES_WordStack_Int_Int_WordStack`(#SemanticCastToInt(N),#SemanticCastToInt(_A),#SemanticCastToWordStack(WS))=>#SemanticCastToWordStack(WS) requires `notBool_`(`_>Int_`(#SemanticCastToInt(N),#token("0","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(305,10,305,100)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#replicateAux(_,_,_)_EVM-TYPES_WordStack_Int_Int_WordStack`(#SemanticCastToInt(N),#SemanticCastToInt(A),#SemanticCastToWordStack(WS))=>`#replicateAux(_,_,_)_EVM-TYPES_WordStack_Int_Int_WordStack`(`_-Int_`(#SemanticCastToInt(N),#token("1","Int")),#SemanticCastToInt(A),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(A),#SemanticCastToWordStack(WS))) requires `_>Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(304,10,304,100)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#replicate(_,_)_EVM-TYPES_WordStack_Int_Int`(#SemanticCastToInt(N),#SemanticCastToInt(A))=>`#replicateAux(_,_,_)_EVM-TYPES_WordStack_Int_Int_WordStack`(#SemanticCastToInt(N),#SemanticCastToInt(A),`.WordStack_EVM-TYPES_WordStack`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(303,10,303,71)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(_),#SemanticCastToInt(_),#SemanticCastToInt(WIDTH))=>`padRightBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Int`(`.Bytes_BYTES-HOOKED_Bytes`(.KList),#SemanticCastToInt(WIDTH),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(366,25,366,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(_),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH))=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires `notBool_`(`_andBool_`(`_>=Int_`(#SemanticCastToInt(WIDTH),#token("0","Int")),`_>=Int_`(#SemanticCastToInt(START),#token("0","Int")))) ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(364,25,364,184)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(WS),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH))=>`substrBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Int`(`padRightBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(WS),`_+Int_`(#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)),#token("0","Int")),#SemanticCastToInt(START),`_+Int_`(#SemanticCastToInt(START),#SemanticCastToInt(WIDTH))) requires `_andBool_`(`_andBool_`(`_>=Int_`(#SemanticCastToInt(WIDTH),#token("0","Int")),`_>=Int_`(#SemanticCastToInt(START),#token("0","Int"))),`_<Int_`(#SemanticCastToInt(START),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(WS)))) ensures #token("true","Bool") [concrete, label(EVM-TYPES.bytesRange), org.kframework.attributes.Location(Location(365,25,365,209)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#SemanticCastToInt(N),#SemanticCastToBytes(BS))=>`padLeftBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(BS),#SemanticCastToInt(N),#token("0","Int")) requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(N)) ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(372,10,372,88)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#SemanticCastToInt(N),#SemanticCastToBytes(BS))=>#SemanticCastToBytes(BS) requires `notBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(N))) ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(371,10,371,89)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#padRightToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#SemanticCastToInt(N),#SemanticCastToBytes(BS))=>`padRightBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(BS),#SemanticCastToInt(N),#token("0","Int")) requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(N)) ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(374,10,374,88)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#padRightToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#SemanticCastToInt(N),#SemanticCastToBytes(BS))=>#SemanticCastToBytes(BS) requires `notBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(N))) ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(373,10,373,89)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#nBytes(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(N))=>`#nBits(_)_EVM-TYPES_Int_Int`(`_*Int_`(#SemanticCastToInt(N),#token("8","Int"))) requires `_>=Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(205,10,205,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#nBits(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(N))=>`_-Int_`(`_<<Int_`(#token("1","Int"),#SemanticCastToInt(N)),#token("1","Int")) requires `_>=Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(204,10,204,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#lookupMemory(_,_)_EVM-TYPES_Int_Map_Int`(`_Map_`(`_|->_`(#SemanticCastToInt(KEY),#SemanticCastToKItem(VAL)),#SemanticCastToMap(_M)),#SemanticCastToInt(KEY))=>#token("0","Int") requires `notBool_`(isInt(#SemanticCastToKItem(VAL))) ensures #token("true","Bool") [label(EVM-TYPES.#lookupMemory.notInt), org.kframework.attributes.Location(Location(421,34,421,125)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#lookupMemory(_,_)_EVM-TYPES_Int_Map_Int`(`_Map_`(`_|->_`(#SemanticCastToInt(KEY),#SemanticCastToInt(VAL)),#SemanticCastToMap(_M)),#SemanticCastToInt(KEY))=>`_modInt_`(#SemanticCastToInt(VAL),#token("256","Int")) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM-TYPES.#lookupMemory.some), org.kframework.attributes.Location(Location(418,34,418,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lookupMemory(_,_)_EVM-TYPES_Int_Map_Int`(#SemanticCastToMap(M),#SemanticCastToInt(KEY))=>#token("0","Int") requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToInt(KEY),#SemanticCastToMap(M))) ensures #token("true","Bool") [label(EVM-TYPES.#lookupMemory.none), org.kframework.attributes.Location(Location(419,34,419,129)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#lookup(_,_)_EVM-TYPES_Int_Map_Int`(`_Map_`(`_|->_`(#SemanticCastToInt(KEY),#SemanticCastToKItem(VAL)),#SemanticCastToMap(_M)),#SemanticCastToInt(KEY))=>#token("0","Int") requires `notBool_`(isInt(#SemanticCastToKItem(VAL))) ensures #token("true","Bool") [label(EVM-TYPES.#lookup.notInt), org.kframework.attributes.Location(Location(416,34,416,125)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#lookup(_,_)_EVM-TYPES_Int_Map_Int`(`_Map_`(`_|->_`(#SemanticCastToInt(KEY),#SemanticCastToInt(VAL)),#SemanticCastToMap(_M)),#SemanticCastToInt(KEY))=>`_modInt_`(#SemanticCastToInt(VAL),`pow256_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [label(EVM-TYPES.#lookup.some), org.kframework.attributes.Location(Location(413,34,413,97)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#lookup(_,_)_EVM-TYPES_Int_Map_Int`(#SemanticCastToMap(M),#SemanticCastToInt(KEY))=>#token("0","Int") requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToInt(KEY),#SemanticCastToMap(M))) ensures #token("true","Bool") [label(EVM-TYPES.#lookup.none), org.kframework.attributes.Location(Location(414,34,414,129)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#drop(_,_)_EVM-TYPES_WordStack_Int_WordStack`(#token("1","Int"),#SemanticCastToWordStack(`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(_),#SemanticCastToWordStack(WS))))=>#SemanticCastToWordStack(WS) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(256,10,256,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#drop(_,_)_EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(N),`.WordStack_EVM-TYPES_WordStack`(.KList))=>`.WordStack_EVM-TYPES_WordStack`(.KList) requires `_>Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(254,10,254,103)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#drop(_,_)_EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(N),#SemanticCastToWordStack(`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS))))=>`#drop(_,_)_EVM-TYPES_WordStack_Int_WordStack`(#token("1","Int"),`#drop(_,_)_EVM-TYPES_WordStack_Int_WordStack`(`_-Int_`(#SemanticCastToInt(N),#token("1","Int")),`_:__EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS)))) requires `_>Int_`(#SemanticCastToInt(N),#token("1","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(255,10,255,103)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#drop(_,_)_EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(N),#SemanticCastToWordStack(WS))=>#SemanticCastToWordStack(WS) requires `notBool_`(`_>Int_`(#SemanticCastToInt(N),#token("0","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(253,10,253,103)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#dasmTxPrefix(_)_EVM-TYPES_Int_TxType`(`Legacy_EVM-TYPES_TxType`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(449,10,449,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmTxPrefix(_)_EVM-TYPES_Int_TxType`(`DynamicFee_EVM-TYPES_TxType`(.KList))=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(451,10,451,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#dasmTxPrefix(_)_EVM-TYPES_Int_TxType`(`AccessList_EVM-TYPES_TxType`(.KList))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(450,10,450,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#asmTxPrefix(_)_EVM-TYPES_TxType_Int`(#token("2","Int"))=>`DynamicFee_EVM-TYPES_TxType`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(457,10,457,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#asmTxPrefix(_)_EVM-TYPES_TxType_Int`(#token("1","Int"))=>`AccessList_EVM-TYPES_TxType`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(456,10,456,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#asmTxPrefix(_)_EVM-TYPES_TxType_Int`(#token("0","Int"))=>`Legacy_EVM-TYPES_TxType`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(455,10,455,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(WS))=>`chop(_)_WORD_Int_Int`(`Bytes2Int(_,_,_)_BYTES-HOOKED_Int_Bytes_Endianness_Signedness`(#SemanticCastToBytes(WS),bigEndianBytes(.KList),unsignedBytes(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(347,10,347,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#asInteger(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(WS))=>`Bytes2Int(_,_,_)_BYTES-HOOKED_Int_Bytes_Endianness_Signedness`(#SemanticCastToBytes(WS),bigEndianBytes(.KList),unsignedBytes(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(351,10,351,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(W))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(#SemanticCastToInt(W),bigEndianBytes(.KList),unsignedBytes(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(360,10,360,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#asAccount(_)_EVM-TYPES_Account_Bytes`(#SemanticCastToBytes(BS))=>`.Account_EVM-TYPES_Account`(.KList) requires `_==Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(BS)),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(355,10,355,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#asAccount(_)_EVM-TYPES_Account_Bytes`(#SemanticCastToBytes(BS))=>`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(BS)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(356,10,356,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#addr(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(W))=>`_%Word__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(W),`pow160_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(401,10,401,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module FLOAT-SYNTAX [digest(w�[�&!����һa��#g�-��)=�	��), org.kframework.attributes.Location(Location(1471,1,1476,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  syntax Float [hook(FLOAT.Float), org.kframework.attributes.Location(Location(1472,3,1472,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  syntax Float ::= r"[\\+-]?Infinity([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3), token]
  syntax Float ::= r"NaN([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3), token]
  syntax Float ::= r"([\\+-]?[0-9]+(\\.[0-9]*)?|\\.[0-9]+)([eE][\\+-]?[0-9]+)?([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(1), token]
endmodule


module FOUNDRY [digest(�!jJ��;@����	X�1�m,�V�; �{:&�), org.kframework.attributes.Location(Location(91,1,103,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md))]
  imports MAP
  imports LEMMAS
  imports FOUNDRY-SUCCESS
  imports FOUNDRY-CHEAT-CODES
  imports FOUNDRY-ACCOUNTS
  imports EDSL
  syntax KevmCellOpt ::= KevmCell
  syntax KevmCellOpt ::= "noKevmCell" [cellOptAbsent(KevmCell)]
  syntax FoundryCellFragment ::= "<foundry>-fragment" KevmCellOpt CheatcodesCellOpt "</foundry>-fragment" [cellFragment(FoundryCell)]
  syntax FoundryCell ::= "initFoundryCell" "(" Map ")" [function, initializer, noThread]
  syntax FoundryCell ::= "<foundry>" KevmCell CheatcodesCell "</foundry>" [cell, cellName(foundry), format(%1%i%n%2%n%3%d%n%4), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), topcell]
  syntax CheatcodesCellOpt ::= CheatcodesCell
  syntax CheatcodesCellOpt ::= "noCheatcodesCell" [cellOptAbsent(CheatcodesCell)]
  rule initFoundryCell(Init)=>`<foundry>`(#noDots(.KList),#cells(initKevmCell(Init),initCheatcodesCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
endmodule


module FOUNDRY-ACCOUNTS [digest(���� 5�*�\�,h9k�4������tE), org.kframework.attributes.Location(Location(112,1,128,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md))]
  imports SOLIDITY-FIELDS
  syntax Int ::= "#address" "(" Contract ")" [klabel(#address), macro]
  syntax FoundryField ::= "Failed" [klabel(slot_failed)]
  syntax FoundryContract ::= "FoundryTest" [klabel(contract_FoundryTest)]
  syntax FoundryContract ::= "FoundryCheat" [klabel(contract_FoundryCheat)]
  syntax Field ::= FoundryField
  syntax Contract ::= FoundryContract
  rule `contract_access_loc`(`contract_access_field`(`FoundryCheat_FOUNDRY-ACCOUNTS_FoundryContract`(.KList),`Failed_FOUNDRY-ACCOUNTS_FoundryField`(.KList)))=>#token("46308022326495007027972728677917914892729792999299745830475596687180801507328","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(126,10,126,118)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#address(_)_FOUNDRY-ACCOUNTS_Int_Contract`(`FoundryTest_FOUNDRY-ACCOUNTS_FoundryContract`(.KList))=>#token("728815563385977040452943777879061427756277306518","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(121,10,121,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#address(_)_FOUNDRY-ACCOUNTS_Int_Contract`(`FoundryCheat_FOUNDRY-ACCOUNTS_FoundryContract`(.KList))=>#token("645326474426547203313410069153905908525362434349","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(122,10,122,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module FOUNDRY-CHEAT-CODES [digest(�̗:o��M'��~�$zuk�Ĉ��:���), org.kframework.attributes.Location(Location(197,1,1535,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md))]
  imports MAP
  imports INFINITE-GAS
  imports FOUNDRY-ACCOUNTS
  imports EVM-ABI
  imports EVM
  syntax WhitelistCellOpt ::= WhitelistCell
  syntax WhitelistCellOpt ::= "noWhitelistCell" [cellOptAbsent(WhitelistCell)]
  syntax WhitelistCellFragment ::= "<whitelist>-fragment" IsCallWhitelistActiveCellOpt IsStorageWhitelistActiveCellOpt AddressSetCellOpt StorageSlotSetCellOpt "</whitelist>-fragment" [cellFragment(WhitelistCell)]
  syntax WhitelistCell ::= "initWhitelistCell" [function, initializer, noThread]
  syntax WhitelistCell ::= "<whitelist>" IsCallWhitelistActiveCell IsStorageWhitelistActiveCell AddressSetCell StorageSlotSetCell "</whitelist>" [cell, cellName(whitelist), format(%1%i%n%2%n%3%n%4%n%5%d%n%6), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax StorageSlotSetCellOpt ::= StorageSlotSetCell
  syntax StorageSlotSetCellOpt ::= "noStorageSlotSetCell" [cellOptAbsent(StorageSlotSetCell)]
  syntax StorageSlotSetCell ::= "initStorageSlotSetCell" [function, initializer, noThread]
  syntax StorageSlotSetCell ::= "<storageSlotSet>" Set "</storageSlotSet>" [cell, cellName(storageSlotSet), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax StorageSlot ::= "{" Int "|" Int "}"
  syntax SingleCallCellOpt ::= SingleCallCell
  syntax SingleCallCellOpt ::= "noSingleCallCell" [cellOptAbsent(SingleCallCell)]
  syntax SingleCallCell ::= "initSingleCallCell" [function, initializer, noThread]
  syntax SingleCallCell ::= "<singleCall>" Bool "</singleCall>" [cell, cellName(singleCall), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax RecordEventCellOpt ::= RecordEventCell
  syntax RecordEventCellOpt ::= "noRecordEventCell" [cellOptAbsent(RecordEventCell)]
  syntax RecordEventCell ::= "initRecordEventCell" [function, initializer, noThread]
  syntax RecordEventCell ::= "<recordEvent>" Bool "</recordEvent>" [cell, cellName(recordEvent), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax PrevOriginCellOpt ::= PrevOriginCell
  syntax PrevOriginCellOpt ::= "noPrevOriginCell" [cellOptAbsent(PrevOriginCell)]
  syntax PrevOriginCell ::= "initPrevOriginCell" [function, initializer, noThread]
  syntax PrevOriginCell ::= "<prevOrigin>" Account "</prevOrigin>" [cell, cellName(prevOrigin), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax PrevCallerCellOpt ::= PrevCallerCell
  syntax PrevCallerCellOpt ::= "noPrevCallerCell" [cellOptAbsent(PrevCallerCell)]
  syntax PrevCallerCell ::= "initPrevCallerCell" [function, initializer, noThread]
  syntax PrevCallerCell ::= "<prevCaller>" Account "</prevCaller>" [cell, cellName(prevCaller), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax PrankCellOpt ::= PrankCell
  syntax PrankCellOpt ::= "noPrankCell" [cellOptAbsent(PrankCell)]
  syntax PrankCellFragment ::= "<prank>-fragment" PrevCallerCellOpt PrevOriginCellOpt NewCallerCellOpt NewOriginCellOpt ActiveCellOpt DepthCellOpt SingleCallCellOpt "</prank>-fragment" [cellFragment(PrankCell)]
  syntax PrankCell ::= "initPrankCell" [function, initializer, noThread]
  syntax PrankCell ::= "<prank>" PrevCallerCell PrevOriginCell NewCallerCell NewOriginCell ActiveCell DepthCell SingleCallCell "</prank>" [cell, cellName(prank), format(%1%i%n%2%n%3%n%4%n%5%n%6%n%7%n%8%d%n%9), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax OpcodeTypeCellOpt ::= OpcodeTypeCell
  syntax OpcodeTypeCellOpt ::= "noOpcodeTypeCell" [cellOptAbsent(OpcodeTypeCell)]
  syntax OpcodeTypeCell ::= "initOpcodeTypeCell" [function, initializer, noThread]
  syntax OpcodeTypeCell ::= "<opcodeType>" OpcodeType "</opcodeType>" [cell, cellName(opcodeType), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax OpcodeType ::= "Static"
  syntax OpcodeType ::= "Delegate"
  syntax OpcodeType ::= "Create2"
  syntax OpcodeType ::= "Create"
  syntax OpcodeType ::= "Call"
  syntax OpcodeType ::= ".OpcodeType"
  syntax NewOriginCellOpt ::= NewOriginCell
  syntax NewOriginCellOpt ::= "noNewOriginCell" [cellOptAbsent(NewOriginCell)]
  syntax NewOriginCell ::= "initNewOriginCell" [function, initializer, noThread]
  syntax NewOriginCell ::= "<newOrigin>" Account "</newOrigin>" [cell, cellName(newOrigin), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax NewCallerCellOpt ::= NewCallerCell
  syntax NewCallerCellOpt ::= "noNewCallerCell" [cellOptAbsent(NewCallerCell)]
  syntax NewCallerCell ::= "initNewCallerCell" [function, initializer, noThread]
  syntax NewCallerCell ::= "<newCaller>" Account "</newCaller>" [cell, cellName(newCaller), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax KItem ::= "#setSymbolicStorage" Int [klabel(foundry_setSymbolicStorage)]
  syntax KItem ::= "#setStorage" Int Int Int [klabel(foundry_setStorage)]
  syntax KItem ::= "#setPrank" Int Account Bool [klabel(foundry_setPrank)]
  syntax KItem ::= "#setNonce" Int Int [klabel(foundry_setNonce)]
  syntax KItem ::= "#setExpectRevert" Bytes [klabel(foundry_setExpectRevert)]
  syntax KItem ::= "#setExpectOpcode" Account Bytes Int OpcodeType [klabel(foundry_setExpectOpcode)]
  syntax KItem ::= "#setExpectEmit" Bool Bool Bool Bool Account [klabel(foundry_setExpectEmit)]
  syntax KItem ::= "#setCode" Int Bytes [klabel(foundry_setCode)]
  syntax KItem ::= "#setBalance" Int Int [klabel(foundry_setBalance)]
  syntax KItem ::= "#return_foundry" Int Int [klabel(foundry_return)]
  syntax KItem ::= "#returnStorage" Int Int [klabel(foundry_returnStorage)]
  syntax KItem ::= "#returnNonce" Int [klabel(foundry_returnNonce)]
  syntax KItem ::= "#markAsFailed" [klabel(foundry_markAsFailed)]
  syntax KItem ::= "#loadAccount" Int [klabel(foundry_loadAccount)]
  syntax KItem ::= "#error_foundry" Int Bytes [klabel(foundry_error)]
  syntax KItem ::= "#endPrank" [klabel(foundry_endPrank)]
  syntax KItem ::= "#clearPrank" [klabel(foundry_clearPrank)]
  syntax KItem ::= "#clearExpectRevert" [klabel(foundry_clearExpectRevert)]
  syntax KItem ::= "#clearExpectOpcode" [klabel(foundry_clearExpectOpcode)]
  syntax KItem ::= "#clearExpectEmit" [klabel(foundry_clearExpectEmit)]
  syntax KItem ::= "#checkRevertReason" [klabel(foundry_checkRevertReason)]
  syntax KItem ::= "#call_foundry" Int Bytes [klabel(foundry_call)]
  syntax KItem ::= "#assume" "(" Bool ")" [klabel(foundry_assume), symbol]
  syntax KItem ::= "#addStorageSlotToWhitelist" StorageSlot [klabel(foundry_addStorageSlotToWhitelist)]
  syntax KItem ::= "#addAddressToWhitelist" Int [klabel(foundry_addAddressToWhitelist)]
  syntax IsStorageWhitelistActiveCellOpt ::= IsStorageWhitelistActiveCell
  syntax IsStorageWhitelistActiveCellOpt ::= "noIsStorageWhitelistActiveCell" [cellOptAbsent(IsStorageWhitelistActiveCell)]
  syntax IsStorageWhitelistActiveCell ::= "initIsStorageWhitelistActiveCell" [function, initializer, noThread]
  syntax IsStorageWhitelistActiveCell ::= "<isStorageWhitelistActive>" Bool "</isStorageWhitelistActive>" [cell, cellName(isStorageWhitelistActive), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax IsRevertExpectedCellOpt ::= IsRevertExpectedCell
  syntax IsRevertExpectedCellOpt ::= "noIsRevertExpectedCell" [cellOptAbsent(IsRevertExpectedCell)]
  syntax IsRevertExpectedCell ::= "initIsRevertExpectedCell" [function, initializer, noThread]
  syntax IsRevertExpectedCell ::= "<isRevertExpected>" Bool "</isRevertExpected>" [cell, cellName(isRevertExpected), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax IsOpcodeExpectedCellOpt ::= IsOpcodeExpectedCell
  syntax IsOpcodeExpectedCellOpt ::= "noIsOpcodeExpectedCell" [cellOptAbsent(IsOpcodeExpectedCell)]
  syntax IsOpcodeExpectedCell ::= "initIsOpcodeExpectedCell" [function, initializer, noThread]
  syntax IsOpcodeExpectedCell ::= "<isOpcodeExpected>" Bool "</isOpcodeExpected>" [cell, cellName(isOpcodeExpected), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax IsEventExpectedCellOpt ::= IsEventExpectedCell
  syntax IsEventExpectedCellOpt ::= "noIsEventExpectedCell" [cellOptAbsent(IsEventExpectedCell)]
  syntax IsEventExpectedCell ::= "initIsEventExpectedCell" [function, initializer, noThread]
  syntax IsEventExpectedCell ::= "<isEventExpected>" Bool "</isEventExpected>" [cell, cellName(isEventExpected), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax IsCallWhitelistActiveCellOpt ::= IsCallWhitelistActiveCell
  syntax IsCallWhitelistActiveCellOpt ::= "noIsCallWhitelistActiveCell" [cellOptAbsent(IsCallWhitelistActiveCell)]
  syntax IsCallWhitelistActiveCell ::= "initIsCallWhitelistActiveCell" [function, initializer, noThread]
  syntax IsCallWhitelistActiveCell ::= "<isCallWhitelistActive>" Bool "</isCallWhitelistActive>" [cell, cellName(isCallWhitelistActive), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ExpectedValueCellOpt ::= ExpectedValueCell
  syntax ExpectedValueCellOpt ::= "noExpectedValueCell" [cellOptAbsent(ExpectedValueCell)]
  syntax ExpectedValueCell ::= "initExpectedValueCell" [function, initializer, noThread]
  syntax ExpectedValueCell ::= "<expectedValue>" Int "</expectedValue>" [cell, cellName(expectedValue), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ExpectedRevertCellOpt ::= ExpectedRevertCell
  syntax ExpectedRevertCellOpt ::= "noExpectedRevertCell" [cellOptAbsent(ExpectedRevertCell)]
  syntax ExpectedRevertCellFragment ::= "<expectedRevert>-fragment" IsRevertExpectedCellOpt ExpectedReasonCellOpt ExpectedDepthCellOpt "</expectedRevert>-fragment" [cellFragment(ExpectedRevertCell)]
  syntax ExpectedRevertCell ::= "initExpectedRevertCell" [function, initializer, noThread]
  syntax ExpectedRevertCell ::= "<expectedRevert>" IsRevertExpectedCell ExpectedReasonCell ExpectedDepthCell "</expectedRevert>" [cell, cellName(expectedRevert), format(%1%i%n%2%n%3%n%4%d%n%5), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ExpectedReasonCellOpt ::= ExpectedReasonCell
  syntax ExpectedReasonCellOpt ::= "noExpectedReasonCell" [cellOptAbsent(ExpectedReasonCell)]
  syntax ExpectedReasonCell ::= "initExpectedReasonCell" [function, initializer, noThread]
  syntax ExpectedReasonCell ::= "<expectedReason>" Bytes "</expectedReason>" [cell, cellName(expectedReason), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ExpectedOpcodeCellOpt ::= ExpectedOpcodeCell
  syntax ExpectedOpcodeCellOpt ::= "noExpectedOpcodeCell" [cellOptAbsent(ExpectedOpcodeCell)]
  syntax ExpectedOpcodeCellFragment ::= "<expectedOpcode>-fragment" IsOpcodeExpectedCellOpt ExpectedAddressCellOpt ExpectedValueCellOpt ExpectedDataCellOpt OpcodeTypeCellOpt "</expectedOpcode>-fragment" [cellFragment(ExpectedOpcodeCell)]
  syntax ExpectedOpcodeCell ::= "initExpectedOpcodeCell" [function, initializer, noThread]
  syntax ExpectedOpcodeCell ::= "<expectedOpcode>" IsOpcodeExpectedCell ExpectedAddressCell ExpectedValueCell ExpectedDataCell OpcodeTypeCell "</expectedOpcode>" [cell, cellName(expectedOpcode), format(%1%i%n%2%n%3%n%4%n%5%n%6%d%n%7), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ExpectedEventAddressCellOpt ::= ExpectedEventAddressCell
  syntax ExpectedEventAddressCellOpt ::= "noExpectedEventAddressCell" [cellOptAbsent(ExpectedEventAddressCell)]
  syntax ExpectedEventAddressCell ::= "initExpectedEventAddressCell" [function, initializer, noThread]
  syntax ExpectedEventAddressCell ::= "<expectedEventAddress>" Account "</expectedEventAddress>" [cell, cellName(expectedEventAddress), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ExpectedDepthCellOpt ::= ExpectedDepthCell
  syntax ExpectedDepthCellOpt ::= "noExpectedDepthCell" [cellOptAbsent(ExpectedDepthCell)]
  syntax ExpectedDepthCell ::= "initExpectedDepthCell" [function, initializer, noThread]
  syntax ExpectedDepthCell ::= "<expectedDepth>" Int "</expectedDepth>" [cell, cellName(expectedDepth), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ExpectedDataCellOpt ::= ExpectedDataCell
  syntax ExpectedDataCellOpt ::= "noExpectedDataCell" [cellOptAbsent(ExpectedDataCell)]
  syntax ExpectedDataCell ::= "initExpectedDataCell" [function, initializer, noThread]
  syntax ExpectedDataCell ::= "<expectedData>" Bytes "</expectedData>" [cell, cellName(expectedData), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ExpectedAddressCellOpt ::= ExpectedAddressCell
  syntax ExpectedAddressCellOpt ::= "noExpectedAddressCell" [cellOptAbsent(ExpectedAddressCell)]
  syntax ExpectedAddressCell ::= "initExpectedAddressCell" [function, initializer, noThread]
  syntax ExpectedAddressCell ::= "<expectedAddress>" Account "</expectedAddress>" [cell, cellName(expectedAddress), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ExpectEmitCellOpt ::= ExpectEmitCell
  syntax ExpectEmitCellOpt ::= "noExpectEmitCell" [cellOptAbsent(ExpectEmitCell)]
  syntax ExpectEmitCellFragment ::= "<expectEmit>-fragment" RecordEventCellOpt IsEventExpectedCellOpt CheckedTopicsCellOpt CheckedDataCellOpt ExpectedEventAddressCellOpt "</expectEmit>-fragment" [cellFragment(ExpectEmitCell)]
  syntax ExpectEmitCell ::= "initExpectEmitCell" [function, initializer, noThread]
  syntax ExpectEmitCell ::= "<expectEmit>" RecordEventCell IsEventExpectedCell CheckedTopicsCell CheckedDataCell ExpectedEventAddressCell "</expectEmit>" [cell, cellName(expectEmit), format(%1%i%n%2%n%3%n%4%n%5%n%6%d%n%7), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ExceptionalStatusCode ::= "FOUNDRY_WHITELISTSTORAGE"
  syntax ExceptionalStatusCode ::= "FOUNDRY_WHITELISTCALL"
  syntax ExceptionalStatusCode ::= "FOUNDRY_UNIMPLEMENTED"
  syntax DepthCellOpt ::= DepthCell
  syntax DepthCellOpt ::= "noDepthCell" [cellOptAbsent(DepthCell)]
  syntax DepthCell ::= "initDepthCell" [function, initializer, noThread]
  syntax DepthCell ::= "<depth>" Int "</depth>" [cell, cellName(depth), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax CheckedTopicsCellOpt ::= CheckedTopicsCell
  syntax CheckedTopicsCellOpt ::= "noCheckedTopicsCell" [cellOptAbsent(CheckedTopicsCell)]
  syntax CheckedTopicsCell ::= "initCheckedTopicsCell" [function, initializer, noThread]
  syntax CheckedTopicsCell ::= "<checkedTopics>" List "</checkedTopics>" [cell, cellName(checkedTopics), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax CheckedDataCellOpt ::= CheckedDataCell
  syntax CheckedDataCellOpt ::= "noCheckedDataCell" [cellOptAbsent(CheckedDataCell)]
  syntax CheckedDataCell ::= "initCheckedDataCell" [function, initializer, noThread]
  syntax CheckedDataCell ::= "<checkedData>" Bool "</checkedData>" [cell, cellName(checkedData), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax CheatcodesCellFragment ::= "<cheatcodes>-fragment" PrankCellOpt ExpectedRevertCellOpt ExpectedOpcodeCellOpt ExpectEmitCellOpt WhitelistCellOpt "</cheatcodes>-fragment" [cellFragment(CheatcodesCell)]
  syntax CheatcodesCell ::= "initCheatcodesCell" [function, initializer, noThread]
  syntax CheatcodesCell ::= "<cheatcodes>" PrankCell ExpectedRevertCell ExpectedOpcodeCell ExpectEmitCell WhitelistCell "</cheatcodes>" [cell, cellName(cheatcodes), format(%1%i%n%2%n%3%n%4%n%5%n%6%d%n%7), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), topcell]
  syntax Bytes ::= "#sign" "(" Bytes "," Bytes ")" [function, klabel(foundry_sign)]
  syntax Bytes ::= "#encodeOutput" "(" Bytes ")" [function, klabel(foundry_encodeOutput), total]
  syntax Bool ::= "#matchReason" "(" Bytes "," Bytes ")" [function, klabel(foundry_matchReason)]
  syntax Bool ::= "#checkTopics" "(" List "," List "," List ")" [function, klabel(foundry_checkTopics)]
  syntax Bool ::= "#checkTopic" "(" Bool "," Int "," Int ")" [function, klabel(foundry_checkTopic)]
  syntax AddressSetCellOpt ::= AddressSetCell
  syntax AddressSetCellOpt ::= "noAddressSetCell" [cellOptAbsent(AddressSetCell)]
  syntax AddressSetCell ::= "initAddressSetCell" [function, initializer, noThread]
  syntax AddressSetCell ::= "<addressSet>" Set "</addressSet>" [cell, cellName(addressSet), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax ActiveCellOpt ::= ActiveCell
  syntax ActiveCellOpt ::= "noActiveCell" [cellOptAbsent(ActiveCell)]
  syntax ActiveCell ::= "initActiveCell" [function, initializer, noThread]
  syntax ActiveCell ::= "<active>" Bool "</active>" [cell, cellName(active), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule initWhitelistCell(.KList)=>`<whitelist>`(#noDots(.KList),#cells(initIsCallWhitelistActiveCell(.KList),initIsStorageWhitelistActiveCell(.KList),initAddressSetCell(.KList),initStorageSlotSetCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initStorageSlotSetCell(.KList)=>`<storageSlotSet>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initSingleCallCell(.KList)=>`<singleCall>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initRecordEventCell(.KList)=>`<recordEvent>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initPrevOriginCell(.KList)=>`<prevOrigin>`(#noDots(.KList),`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initPrevCallerCell(.KList)=>`<prevCaller>`(#noDots(.KList),`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initPrankCell(.KList)=>`<prank>`(#noDots(.KList),#cells(initPrevCallerCell(.KList),initPrevOriginCell(.KList),initNewCallerCell(.KList),initNewOriginCell(.KList),initActiveCell(.KList),initDepthCell(.KList),initSingleCallCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initOpcodeTypeCell(.KList)=>`<opcodeType>`(#noDots(.KList),`.OpcodeType_FOUNDRY-CHEAT-CODES_OpcodeType`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initNewOriginCell(.KList)=>`<newOrigin>`(#noDots(.KList),`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initNewCallerCell(.KList)=>`<newCaller>`(#noDots(.KList),`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initIsStorageWhitelistActiveCell(.KList)=>`<isStorageWhitelistActive>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initIsRevertExpectedCell(.KList)=>`<isRevertExpected>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initIsOpcodeExpectedCell(.KList)=>`<isOpcodeExpected>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initIsEventExpectedCell(.KList)=>`<isEventExpected>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initIsCallWhitelistActiveCell(.KList)=>`<isCallWhitelistActive>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initExpectedValueCell(.KList)=>`<expectedValue>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initExpectedRevertCell(.KList)=>`<expectedRevert>`(#noDots(.KList),#cells(initIsRevertExpectedCell(.KList),initExpectedReasonCell(.KList),initExpectedDepthCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initExpectedReasonCell(.KList)=>`<expectedReason>`(#noDots(.KList),`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initExpectedOpcodeCell(.KList)=>`<expectedOpcode>`(#noDots(.KList),#cells(initIsOpcodeExpectedCell(.KList),initExpectedAddressCell(.KList),initExpectedValueCell(.KList),initExpectedDataCell(.KList),initOpcodeTypeCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initExpectedEventAddressCell(.KList)=>`<expectedEventAddress>`(#noDots(.KList),`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initExpectedDepthCell(.KList)=>`<expectedDepth>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initExpectedDataCell(.KList)=>`<expectedData>`(#noDots(.KList),`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initExpectedAddressCell(.KList)=>`<expectedAddress>`(#noDots(.KList),`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initExpectEmitCell(.KList)=>`<expectEmit>`(#noDots(.KList),#cells(initRecordEventCell(.KList),initIsEventExpectedCell(.KList),initCheckedTopicsCell(.KList),initCheckedDataCell(.KList),initExpectedEventAddressCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initDepthCell(.KList)=>`<depth>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initCheckedTopicsCell(.KList)=>`<checkedTopics>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initCheckedDataCell(.KList)=>`<checkedData>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initCheatcodesCell(.KList)=>`<cheatcodes>`(#noDots(.KList),#cells(initPrankCell(.KList),initExpectedRevertCell(.KList),initExpectedOpcodeCell(.KList),initExpectEmitCell(.KList),initWhitelistCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initAddressSetCell(.KList)=>`<addressSet>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initActiveCell(.KList)=>`<active>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule `abi_selector`(#token("\"writeLine(string,string)\"","String"))=>#token("1637714303","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1503,10,1503,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"writeFile(string,string)\"","String"))=>#token("2306738839","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1502,10,1502,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"warp(uint256)\"","String"))=>#token("3856056066","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1431,10,1431,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"toString(uint256)\"","String"))=>#token("1761649582","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1510,10,1510,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"toString(int256)\"","String"))=>#token("2736964622","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1511,10,1511,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"toString(bytes32)\"","String"))=>#token("2971277800","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1508,10,1508,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"toString(bytes)\"","String"))=>#token("1907020045","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1507,10,1507,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"toString(bool)\"","String"))=>#token("1910302682","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1509,10,1509,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"toString(address)\"","String"))=>#token("1456103998","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1506,10,1506,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"symbolicStorage(address)\"","String"))=>#token("769677742","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1455,10,1455,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"store(address,bytes32,bytes32)\"","String"))=>#token("1892290747","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1440,10,1440,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"stopPrank()\"","String"))=>#token("2428830011","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1446,10,1446,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"stopBroadcast()\"","String"))=>#token("1995103542","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1499,10,1499,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"startPrank(address,address)\"","String"))=>#token("1169514616","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1445,10,1445,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"startPrank(address)\"","String"))=>#token("105151830","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1444,10,1444,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"startBroadcast(address)\"","String"))=>#token("2146183821","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1498,10,1498,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"startBroadcast()\"","String"))=>#token("2142579071","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1497,10,1497,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"snapshot()\"","String"))=>#token("2534502746","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1514,10,1514,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"sign(uint256,bytes32)\"","String"))=>#token("3812747940","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1454,10,1454,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"setNonce(address,uint64)\"","String"))=>#token("4175530839","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1441,10,1441,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"setEnv(string,string)\"","String"))=>#token("1029252078","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1471,10,1471,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"selectFork(uint256)\"","String"))=>#token("2663344167","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1520,10,1520,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"rpcUrls()\"","String"))=>#token("2824504344","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1525,10,1525,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"rpcUrl(string)\"","String"))=>#token("2539285737","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1524,10,1524,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"rollFork(uint256,uint256)\"","String"))=>#token("3612115876","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1523,10,1523,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"rollFork(uint256)\"","String"))=>#token("3652973473","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1522,10,1522,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"roll(uint256)\"","String"))=>#token("528174896","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1432,10,1432,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"revertTo(uint256)\"","String"))=>#token("1155002532","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1515,10,1515,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"removeFile(string)\"","String"))=>#token("4054835277","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1505,10,1505,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"recordLogs()\"","String"))=>#token("1101999954","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1512,10,1512,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"record()\"","String"))=>#token("644673801","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1487,10,1487,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"readLine(string)\"","String"))=>#token("1895126824","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1501,10,1501,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"readFile(string)\"","String"))=>#token("1626979089","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1500,10,1500,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"prank(address,address)\"","String"))=>#token("1206193358","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1459,10,1459,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"prank(address)\"","String"))=>#token("3395723175","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1458,10,1458,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"mockCall(address,uint256,bytes,bytes)\"","String"))=>#token("2168494993","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1490,10,1490,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"mockCall(address,bytes calldata,bytes)\"","String"))=>#token("378193464","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1489,10,1489,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"load(address,bytes32)\"","String"))=>#token("1719639408","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1439,10,1439,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"label(address,string)\"","String"))=>#token("3327641368","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1436,10,1436,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"infiniteGas()\"","String"))=>#token("3986649939","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1462,10,1462,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"getRecordedLogs()\"","String"))=>#token("420828068","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1513,10,1513,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"getNonce(address)\"","String"))=>#token("755185067","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1437,10,1437,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"getCode(string)\"","String"))=>#token("2367473957","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1494,10,1494,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"freshUInt(uint8)\"","String"))=>#token("625253732","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1456,10,1456,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"freshBool()\"","String"))=>#token("2935720297","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1457,10,1457,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"ffi(string[])\"","String"))=>#token("2299921511","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1470,10,1470,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"fee(uint256)\"","String"))=>#token("968063664","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1433,10,1433,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectStaticCall(address,bytes)\"","String"))=>#token("2232945516","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1447,10,1447,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectRevert(bytes4)\"","String"))=>#token("3273568480","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1486,10,1486,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectRevert(bytes)\"","String"))=>#token("4069379763","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1443,10,1443,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectRevert()\"","String"))=>#token("4102309908","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1442,10,1442,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectRegularCall(address,uint256,bytes)\"","String"))=>#token("1973496647","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1449,10,1449,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectRegularCall(address,bytes)\"","String"))=>#token("3178868520","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1468,10,1468,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectNoCall()\"","String"))=>#token("3861374088","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1469,10,1469,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectEmit(bool,bool,bool,bool,address)\"","String"))=>#token("2176505587","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1453,10,1453,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectEmit(bool,bool,bool,bool)\"","String"))=>#token("1226622914","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1452,10,1452,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectDelegateCall(address,bytes)\"","String"))=>#token("1030406631","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1448,10,1448,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectCreate2(address,uint256,bytes)\"","String"))=>#token("3854582462","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1451,10,1451,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectCreate(address,uint256,bytes)\"","String"))=>#token("658968394","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1450,10,1450,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectCall(address,uint256,bytes)\"","String"))=>#token("4077681571","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1493,10,1493,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectCall(address,bytes)\"","String"))=>#token("3177903156","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1492,10,1492,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"etch(address,bytes)\"","String"))=>#token("3033974658","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1430,10,1430,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envUint(string,string)\"","String"))=>#token("4091461785","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1480,10,1480,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envUint(string)\"","String"))=>#token("3247934751","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1473,10,1473,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envString(string,string)\"","String"))=>#token("347089865","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1484,10,1484,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envString(string)\"","String"))=>#token("4168600345","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1477,10,1477,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envInt(string,string)\"","String"))=>#token("1108873552","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1481,10,1481,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envInt(string)\"","String"))=>#token("2301234273","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1474,10,1474,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envBytes32(string,string)\"","String"))=>#token("1525821889","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1483,10,1483,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envBytes32(string)\"","String"))=>#token("2543095874","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1476,10,1476,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envBytes(string,string)\"","String"))=>#token("3720504603","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1485,10,1485,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envBytes(string)\"","String"))=>#token("1299951366","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1478,10,1478,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envBool(string,string)\"","String"))=>#token("2863521455","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1479,10,1479,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envBool(string)\"","String"))=>#token("2127686781","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1472,10,1472,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envAddress(string,string)\"","String"))=>#token("2905717242","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1482,10,1482,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envAddress(string)\"","String"))=>#token("890066623","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1475,10,1475,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"deriveKey(string,uint32)\"","String"))=>#token("1646872971","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1526,10,1526,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"deal(address,uint256)\"","String"))=>#token("3364511341","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1429,10,1429,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"createSelectFork(string,uint256)\"","String"))=>#token("1911440973","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1518,10,1518,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"createSelectFork(string)\"","String"))=>#token("2556952628","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1519,10,1519,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"createFork(string,uint256)\"","String"))=>#token("1805892139","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1516,10,1516,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"createFork(string)\"","String"))=>#token("834286744","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1517,10,1517,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"coinbase(address)\"","String"))=>#token("4282924116","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1435,10,1435,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"closeFile(string)\"","String"))=>#token("1220748319","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1504,10,1504,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"clearMockedCalls()\"","String"))=>#token("1071599125","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1491,10,1491,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"chainId(uint256)\"","String"))=>#token("1078582738","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1434,10,1434,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"broadcast(address)\"","String"))=>#token("3868601563","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1496,10,1496,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"broadcast()\"","String"))=>#token("2949218368","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1495,10,1495,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"assume(bool)\"","String"))=>#token("1281615202","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1428,10,1428,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"allowChangesToStorage(address,uint256)\"","String"))=>#token("4207417100","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1461,10,1461,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"allowCallsToAddress(address)\"","String"))=>#token("1850795572","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1460,10,1460,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"addr(uint256)\"","String"))=>#token("4288775753","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1438,10,1438,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"activeFork()\"","String"))=>#token("789593890","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1521,10,1521,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"accesses(address)\"","String"))=>#token("1706857601","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1488,10,1488,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"Error(string)\"","String"))=>#token("147028384","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1532,10,1532,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<k>`(#noDots(.KList),`foundry_assume`(#SemanticCastToBool(B))=>.K,#dots(.KList)) requires #token("true","Bool") ensures #SemanticCastToBool(B) [org.kframework.attributes.Location(Location(249,10,249,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `<k>`(#noDots(.KList),`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(#SemanticCastToInt(ACCT))=>`#newAccount__EVM_InternalOp_Int`(#SemanticCastToInt(ACCT))~>`#accessAccounts__EVM_KItem_Account`(#SemanticCastToInt(ACCT)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1087,10,1087,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(_ARGS))=>.K,#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"label(address,string)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.label), org.kframework.attributes.Location(Location(458,10,459,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(_))=>`#endPrank_FOUNDRY-CHEAT-CODES_KItem`(.KList),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"stopPrank()\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.stopPrank), org.kframework.attributes.Location(Location(881,10,882,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`foundry_assume`(`_==K_`(#SemanticCastToBytes(ARGS),`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),#token("1","Int")))),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"assume(bool)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.assume), org.kframework.attributes.Location(Location(326,10,327,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), preserves-definedness]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#setExpectRevert__FOUNDRY-CHEAT-CODES_KItem_Bytes`(#SemanticCastToBytes(ARGS)),#dots(.KList)) requires `_orBool_`(`_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"expectRevert()\"","String"))),`_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"expectRevert(bytes)\"","String")))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.expectRevert), org.kframework.attributes.Location(Location(649,10,651,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#setExpectEmit______FOUNDRY-CHEAT-CODES_KItem_Bool_Bool_Bool_Bool_Account`(`word2Bool(_)_EVM-TYPES_Bool_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int")))),`word2Bool(_)_EVM-TYPES_Bool_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("32","Int"),#token("32","Int")))),`word2Bool(_)_EVM-TYPES_Bool_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("64","Int"),#token("32","Int")))),`word2Bool(_)_EVM-TYPES_Bool_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("96","Int"),#token("32","Int")))),`.Account_EVM-TYPES_Account`(.KList)),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"expectEmit(bool,bool,bool,bool)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.expectEmit), org.kframework.attributes.Location(Location(925,10,926,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#setExpectEmit______FOUNDRY-CHEAT-CODES_KItem_Bool_Bool_Bool_Bool_Account`(`word2Bool(_)_EVM-TYPES_Bool_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int")))),`word2Bool(_)_EVM-TYPES_Bool_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("32","Int"),#token("32","Int")))),`word2Bool(_)_EVM-TYPES_Bool_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("64","Int"),#token("32","Int")))),`word2Bool(_)_EVM-TYPES_Bool_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("96","Int"),#token("32","Int")))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("128","Int"),#token("32","Int")))),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"expectEmit(bool,bool,bool,bool,address)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.expectEmitAddr), org.kframework.attributes.Location(Location(929,10,930,85)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))))~>`#setStorage____FOUNDRY-CHEAT-CODES_KItem_Int_Int_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("32","Int"),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("64","Int"),#token("32","Int")))),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"store(address,bytes32,bytes32)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.store), org.kframework.attributes.Location(Location(536,10,537,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))))~>`#setNonce___FOUNDRY-CHEAT-CODES_KItem_Int_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("32","Int"),#token("32","Int")))),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"setNonce(address,uint64)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.setNonce), org.kframework.attributes.Location(Location(488,10,489,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))))~>`#setExpectOpcode_____FOUNDRY-CHEAT-CODES_KItem_Account_Bytes_Int_OpcodeType`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("96","Int"),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("64","Int"),#token("32","Int")))),#token("0","Int"),`Static_FOUNDRY-CHEAT-CODES_OpcodeType`(.KList)),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"expectStaticCall(address,bytes)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.expectStaticCall), org.kframework.attributes.Location(Location(667,10,672,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))))~>`#setExpectOpcode_____FOUNDRY-CHEAT-CODES_KItem_Account_Bytes_Int_OpcodeType`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("96","Int"),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("64","Int"),#token("32","Int")))),#token("0","Int"),`Delegate_FOUNDRY-CHEAT-CODES_OpcodeType`(.KList)),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"expectDelegateCall(address,bytes)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.expectDelegateCall), org.kframework.attributes.Location(Location(675,10,680,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))))~>`#setExpectOpcode_____FOUNDRY-CHEAT-CODES_KItem_Account_Bytes_Int_OpcodeType`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("128","Int"),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("96","Int"),#token("32","Int")))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("32","Int"),#token("32","Int"))),`Create_FOUNDRY-CHEAT-CODES_OpcodeType`(.KList)),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"expectCreate(address,uint256,bytes)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.expectCreate), org.kframework.attributes.Location(Location(691,10,696,81)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))))~>`#setExpectOpcode_____FOUNDRY-CHEAT-CODES_KItem_Account_Bytes_Int_OpcodeType`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("128","Int"),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("96","Int"),#token("32","Int")))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("32","Int"),#token("32","Int"))),`Create2_FOUNDRY-CHEAT-CODES_OpcodeType`(.KList)),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"expectCreate2(address,uint256,bytes)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.expectCreate2), org.kframework.attributes.Location(Location(699,10,704,82)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))))~>`#setExpectOpcode_____FOUNDRY-CHEAT-CODES_KItem_Account_Bytes_Int_OpcodeType`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("128","Int"),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("96","Int"),#token("32","Int")))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("32","Int"),#token("32","Int"))),`Call_FOUNDRY-CHEAT-CODES_OpcodeType`(.KList)),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"expectRegularCall(address,uint256,bytes)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.expectRegularCall), org.kframework.attributes.Location(Location(683,10,688,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))))~>`#setCode___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("96","Int"),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("64","Int"),#token("32","Int"))))),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"etch(address,bytes)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.etch), org.kframework.attributes.Location(Location(358,10,363,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))))~>`#setBalance___FOUNDRY-CHEAT-CODES_KItem_Int_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("32","Int"),#token("32","Int")))),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"deal(address,uint256)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.deal), org.kframework.attributes.Location(Location(342,10,343,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))))~>`#returnStorage___FOUNDRY-CHEAT-CODES_KItem_Int_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("32","Int"),#token("32","Int")))),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"load(address,bytes32)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.load), org.kframework.attributes.Location(Location(521,10,522,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))))~>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("32","Int"),#token("32","Int"))))~>`#setPrank____FOUNDRY-CHEAT-CODES_KItem_Int_Account_Bool`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("32","Int"),#token("32","Int"))),#token("true","Bool")),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"prank(address,address)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.prankWithOrigin), org.kframework.attributes.Location(Location(867,10,868,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))))~>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("32","Int"),#token("32","Int"))))~>`#setPrank____FOUNDRY-CHEAT-CODES_KItem_Int_Account_Bool`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("32","Int"),#token("32","Int"))),#token("false","Bool")),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"startPrank(address,address)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.startPrankWithOrigin), org.kframework.attributes.Location(Location(850,10,851,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)))~>`#setSymbolicStorage__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS))),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"symbolicStorage(address)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.symbolicStorage), org.kframework.attributes.Location(Location(551,10,552,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)))~>`#setPrank____FOUNDRY-CHEAT-CODES_KItem_Int_Account_Bool`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)),`.Account_EVM-TYPES_Account`(.KList),#token("true","Bool")),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"prank(address)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.prank), org.kframework.attributes.Location(Location(863,10,864,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)))~>`#setPrank____FOUNDRY-CHEAT-CODES_KItem_Int_Account_Bool`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)),`.Account_EVM-TYPES_Account`(.KList),#token("false","Bool")),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"startPrank(address)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.startPrank), org.kframework.attributes.Location(Location(846,10,847,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)))~>`#returnNonce__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS))),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"getNonce(address)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.getNonce), org.kframework.attributes.Location(Location(473,10,474,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)))~>`#addStorageSlotToWhitelist__FOUNDRY-CHEAT-CODES_KItem_StorageSlot`(`{_|_}_FOUNDRY-CHEAT-CODES_StorageSlot_Int_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("32","Int"),#token("32","Int"))))),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"allowChangesToStorage(address,uint256)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.allowStorageSlotToAddress), org.kframework.attributes.Location(Location(1045,10,1046,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)))~>`#addAddressToWhitelist__FOUNDRY-CHEAT-CODES_KItem_Int`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS))),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"allowCallsToAddress(address)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.allowCallsToAddress), org.kframework.attributes.Location(Location(1033,10,1034,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#sign(_,_)_FOUNDRY-CHEAT-CODES_Bytes_Bytes_Bytes`(#SemanticCastToBytes(BA1),#SemanticCastToBytes(BA2))=>`#parseByteStack(_)_SERIALIZATION_Bytes_String`(`ECDSASign(_,_)_KRYPTO_String_String_String`(unparseByteStack(#SemanticCastToBytes(BA1)),unparseByteStack(#SemanticCastToBytes(BA2)))) requires #token("true","Bool") ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(1352,10,1352,103)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#matchReason(_,_)_FOUNDRY-CHEAT-CODES_Bool_Bytes_Bytes`(#SemanticCastToBytes(REASON),#SemanticCastToBytes(_))=>#token("true","Bool") requires `_==K_`(#SemanticCastToBytes(REASON),`.Bytes_BYTES-HOOKED_Bytes`(.KList)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1255,10,1255,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#matchReason(_,_)_FOUNDRY-CHEAT-CODES_Bool_Bytes_Bytes`(#SemanticCastToBytes(REASON),#SemanticCastToBytes(OUT))=>`_==K_`(#SemanticCastToBytes(REASON),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(OUT),#token("4","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(OUT)),#token("4","Int")))) requires `_=/=K_`(#SemanticCastToBytes(REASON),`.Bytes_BYTES-HOOKED_Bytes`(.KList)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1256,10,1256,117)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#encodeOutput(_)_FOUNDRY-CHEAT-CODES_Bytes_Bytes`(#SemanticCastToBytes(BA))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"expectRevert\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes`(#SemanticCastToBytes(BA)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires `notBool_`(`_==K_`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(BA),#token("0","Int"),#token("4","Int")),`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(#token("4","Int"),`abi_selector`(#token("\"Error(string)\"","String")),bigEndianBytes(.KList)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1222,10,1222,153)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#encodeOutput(_)_FOUNDRY-CHEAT-CODES_Bytes_Bytes`(#SemanticCastToBytes(BA))=>#SemanticCastToBytes(BA) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1223,10,1223,33)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#checkTopics(_,_,_)_FOUNDRY-CHEAT-CODES_Bool_List_List_List`(`_List_`(`ListItem`(#SemanticCastToBool(CHECK)),#SemanticCastToList(CHECKS)),`_List_`(`ListItem`(#SemanticCastToInt(V1)),#SemanticCastToList(L1)),`_List_`(`ListItem`(#SemanticCastToInt(V2)),#SemanticCastToList(L2)))=>`_andBool_`(`#checkTopic(_,_,_)_FOUNDRY-CHEAT-CODES_Bool_Bool_Int_Int`(#SemanticCastToBool(CHECK),#SemanticCastToInt(V1),#SemanticCastToInt(V2)),`#checkTopics(_,_,_)_FOUNDRY-CHEAT-CODES_Bool_List_List_List`(#SemanticCastToList(CHECKS),#SemanticCastToList(L1),#SemanticCastToList(L2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1396,10,1396,147)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#checkTopics(_,_,_)_FOUNDRY-CHEAT-CODES_Bool_List_List_List`(`ListItem`(#token("true","Bool")),#SemanticCastToList(L1),#SemanticCastToList(L2))=>#token("false","Bool") requires `_orBool_`(`_==K_`(#SemanticCastToList(L1),`.List`(.KList)),`_==K_`(#SemanticCastToList(L2),`.List`(.KList))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1394,10,1394,97)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#checkTopics(_,_,_)_FOUNDRY-CHEAT-CODES_Bool_List_List_List`(`ListItem`(#token("false","Bool")),#SemanticCastToList(L1),#SemanticCastToList(L2))=>#token("true","Bool") requires `_orBool_`(`_==K_`(#SemanticCastToList(L1),`.List`(.KList)),`_==K_`(#SemanticCastToList(L2),`.List`(.KList))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1395,10,1395,97)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#checkTopics(_,_,_)_FOUNDRY-CHEAT-CODES_Bool_List_List_List`(`.List`(.KList),#SemanticCastToList(_),#SemanticCastToList(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1393,10,1393,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#checkTopic(_,_,_)_FOUNDRY-CHEAT-CODES_Bool_Bool_Int_Int`(#SemanticCastToBool(CHECK),#SemanticCastToInt(V1),#SemanticCastToInt(V2))=>`_orBool_`(`notBool_`(#SemanticCastToBool(CHECK)),`_==Int_`(#SemanticCastToInt(V1),#SemanticCastToInt(V2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1391,10,1391,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#setSymbolicStorage__FOUNDRY-CHEAT-CODES_KItem_Int`(#SemanticCastToInt(ACCTID))=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTID),#noDots(.KList)),`<storage>`(#noDots(.KList),#SemanticCastToMap(_)=>#SemanticCastToMap(?STORAGE),#noDots(.KList))),`<origStorage>`(#noDots(.KList),#SemanticCastToMap(_)=>#SemanticCastToMap(?STORAGE),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1177,10,1183,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#setStorage____FOUNDRY-CHEAT-CODES_KItem_Int_Int_Int`(#SemanticCastToInt(ACCTID),#SemanticCastToInt(LOC),#SemanticCastToInt(VALUE))=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTID),#noDots(.KList)),`<storage>`(#noDots(.KList),#SemanticCastToMap(STORAGE)=>`Map:update`(#SemanticCastToMap(STORAGE),#SemanticCastToInt(LOC),#SemanticCastToInt(VALUE)),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1162,10,1167,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#setNonce___FOUNDRY-CHEAT-CODES_KItem_Int_Int`(#SemanticCastToInt(ACCTID),#SemanticCastToInt(NONCE))=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTID),#noDots(.KList)),`<nonce>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(NONCE),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1135,10,1140,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#setExpectOpcode_____FOUNDRY-CHEAT-CODES_KItem_Account_Bytes_Int_OpcodeType`(#SemanticCastToAccount(ACCT),#SemanticCastToBytes(DATA),#SemanticCastToInt(VALUE),#SemanticCastToOpcodeType(OPTYPE))=>.K,#dots(.KList)),`<expectedOpcode>`(#noDots(.KList),#cells(#cells(#cells(#cells(`<isOpcodeExpected>`(#noDots(.KList),#SemanticCastToBool(_)=>#token("true","Bool"),#noDots(.KList)),`<expectedAddress>`(#noDots(.KList),#SemanticCastToAccount(_)=>#SemanticCastToAccount(ACCT),#noDots(.KList))),`<expectedData>`(#noDots(.KList),#SemanticCastToBytes(_)=>#SemanticCastToBytes(DATA),#noDots(.KList))),`<expectedValue>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(VALUE),#noDots(.KList))),`<opcodeType>`(#noDots(.KList),#SemanticCastToOpcodeType(_)=>#SemanticCastToOpcodeType(OPTYPE),#noDots(.KList))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1265,10,1272,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#setExpectEmit______FOUNDRY-CHEAT-CODES_KItem_Bool_Bool_Bool_Bool_Account`(#SemanticCastToBool(T1),#SemanticCastToBool(T2),#SemanticCastToBool(T3),#SemanticCastToBool(CHECKDATA),#SemanticCastToAccount(ACCT))=>.K,#dots(.KList)),`<expectEmit>`(#noDots(.KList),#cells(#cells(#cells(#cells(`<recordEvent>`(#noDots(.KList),#SemanticCastToBool(_)=>#token("true","Bool"),#noDots(.KList)),`<isEventExpected>`(#noDots(.KList),#SemanticCastToBool(_)=>#token("false","Bool"),#noDots(.KList))),`<checkedTopics>`(#noDots(.KList),#SemanticCastToList(_)=>`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(#token("true","Bool")),`ListItem`(#SemanticCastToBool(T1))),`ListItem`(#SemanticCastToBool(T2))),`ListItem`(#SemanticCastToBool(T3))),`.List`(.KList)),#noDots(.KList))),`<checkedData>`(#noDots(.KList),#SemanticCastToBool(_)=>#SemanticCastToBool(CHECKDATA),#noDots(.KList))),`<expectedEventAddress>`(#noDots(.KList),#SemanticCastToAccount(_)=>#SemanticCastToAccount(ACCT),#noDots(.KList))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1360,10,1367,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#setCode___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(ACCTID),#SemanticCastToBytes(CODE))=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTID),#noDots(.KList)),`<code>`(#noDots(.KList),#SemanticCastToAccountCode(_)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_==Int_`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(CODE)),#token("0","Int")),`.Bytes_BYTES-HOOKED_Bytes`(.KList),#SemanticCastToBytes(CODE)),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1108,10,1113,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#setBalance___FOUNDRY-CHEAT-CODES_KItem_Int_Int`(#SemanticCastToInt(ACCTID),#SemanticCastToInt(NEWBAL))=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTID),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(NEWBAL),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1095,10,1100,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#markAsFailed_FOUNDRY-CHEAT-CODES_KItem`(.KList)=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),`#address(_)_FOUNDRY-ACCOUNTS_Int_Contract`(`FoundryCheat_FOUNDRY-ACCOUNTS_FoundryContract`(.KList)),#noDots(.KList)),`<storage>`(#noDots(.KList),#SemanticCastToMap(STORAGE)=>`Map:update`(#SemanticCastToMap(STORAGE),`contract_access_loc`(`contract_access_field`(`FoundryCheat_FOUNDRY-ACCOUNTS_FoundryContract`(.KList),`Failed_FOUNDRY-ACCOUNTS_FoundryField`(.KList))),#token("1","Int")),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(253,11,258,22)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#loadAccount__FOUNDRY-CHEAT-CODES_KItem_Int`(#SemanticCastToInt(ACCT))=>`#accessAccounts__EVM_KItem_Account`(#SemanticCastToInt(ACCT)),#dots(.KList)),`<account>`(#noDots(.KList),`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1086,10,1086,113)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#endPrank_FOUNDRY-CHEAT-CODES_KItem`(.KList)=>.K,#dots(.KList)),`<prank>`(#noDots(.KList),`<active>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1326,10,1330,17)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#clearPrank_FOUNDRY-CHEAT-CODES_KItem`(.KList)=>.K,#dots(.KList)),`<prank>`(#noDots(.KList),#cells(#cells(#cells(#cells(#cells(#cells(`<prevCaller>`(#noDots(.KList),#SemanticCastToAccount(_)=>`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList)),`<prevOrigin>`(#noDots(.KList),#SemanticCastToAccount(_)=>`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList))),`<newCaller>`(#noDots(.KList),#SemanticCastToAccount(_)=>`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList))),`<newOrigin>`(#noDots(.KList),#SemanticCastToAccount(_)=>`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList))),`<active>`(#noDots(.KList),#SemanticCastToBool(_)=>#token("false","Bool"),#noDots(.KList))),`<depth>`(#noDots(.KList),#SemanticCastToInt(_)=>#token("0","Int"),#noDots(.KList))),`<singleCall>`(#noDots(.KList),#SemanticCastToBool(_)=>#token("false","Bool"),#noDots(.KList))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1338,10,1347,17)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#clearExpectOpcode_FOUNDRY-CHEAT-CODES_KItem`(.KList)=>.K,#dots(.KList)),`<expectedOpcode>`(#noDots(.KList),#cells(#cells(#cells(#cells(`<isOpcodeExpected>`(#noDots(.KList),#SemanticCastToBool(_)=>#token("false","Bool"),#noDots(.KList)),`<expectedAddress>`(#noDots(.KList),#SemanticCastToAccount(_)=>`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList))),`<expectedData>`(#noDots(.KList),#SemanticCastToBytes(_)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList))),`<opcodeType>`(#noDots(.KList),#SemanticCastToOpcodeType(_)=>`.OpcodeType_FOUNDRY-CHEAT-CODES_OpcodeType`(.KList),#noDots(.KList))),`<expectedValue>`(#noDots(.KList),#SemanticCastToInt(_)=>#token("0","Int"),#noDots(.KList))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1280,10,1287,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#clearExpectEmit_FOUNDRY-CHEAT-CODES_KItem`(.KList)=>.K,#dots(.KList)),`<expectEmit>`(#noDots(.KList),#cells(#cells(#cells(#cells(`<recordEvent>`(#noDots(.KList),#SemanticCastToBool(_)=>#token("false","Bool"),#noDots(.KList)),`<isEventExpected>`(#noDots(.KList),#SemanticCastToBool(_)=>#token("false","Bool"),#noDots(.KList))),`<checkedTopics>`(#noDots(.KList),#SemanticCastToList(_)=>`.List`(.KList),#noDots(.KList))),`<checkedData>`(#noDots(.KList),#SemanticCastToBool(_)=>#token("false","Bool"),#noDots(.KList))),`<expectedEventAddress>`(#noDots(.KList),#SemanticCastToAccount(_)=>`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1375,10,1382,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#checkCall___EVM_InternalOp_Int_Int`(#SemanticCastToInt(_),#SemanticCastToInt(_))~>`#call________EVM_InternalOp_Int_Int_Int_Int_Int_Bytes_Bool`(#SemanticCastToInt(_),#SemanticCastToInt(CHEAT_ADDR),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToBytes(ARGS),#SemanticCastToBool(_))~>`#return___EVM_KItem_Int_Int`(#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH))=>`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("4","Int"))),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("4","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(ARGS)),#token("4","Int"))))~>`#return_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Int`(#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH)),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList))) requires `_==Int_`(#SemanticCastToInt(CHEAT_ADDR),`#address(_)_FOUNDRY-ACCOUNTS_Int_Contract`(`FoundryCheat_FOUNDRY-ACCOUNTS_FoundryContract`(.KList))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call), org.kframework.attributes.Location(Location(270,10,278,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule #cells(`<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(_),#SemanticCastToBytes(_))=>.K,#dots(.KList)),`<expectedRevert>`(#noDots(.KList),`<isRevertExpected>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.ignoreCalls), org.kframework.attributes.Location(Location(603,10,607,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(35)]
  rule #cells(`<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(_))=>.K,#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),#SemanticCastToInt(?WORD)),#noDots(.KList))) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"freshBool()\"","String"))) ensures `#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(?WORD)) [label(FOUNDRY-CHEAT-CODES.foundry.call.freshBool), org.kframework.attributes.Location(Location(584,10,587,33)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool "ensures" Bool [klabel(#ruleRequiresEnsures), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>`#error_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS)),#dots(.KList)),`<statusCode>`(#noDots(.KList),#SemanticCastToStatusCode(_)=>`FOUNDRY_UNIMPLEMENTED_FOUNDRY-CHEAT-CODES_ExceptionalStatusCode`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.owise), org.kframework.attributes.Location(Location(1073,10,1074,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule #cells(`<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>.K,#dots(.KList)),`<timestamp>`(#noDots(.KList),#SemanticCastToInt(_)=>`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)),#noDots(.KList))) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"warp(uint256)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.warp), org.kframework.attributes.Location(Location(377,10,379,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>.K,#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#sign(_,_)_FOUNDRY-CHEAT-CODES_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("32","Int"),#token("32","Int")),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(ARGS),#token("0","Int"),#token("32","Int"))),#noDots(.KList))) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"sign(uint256,bytes32)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.sign), org.kframework.attributes.Location(Location(1064,10,1066,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>.K,#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#addrFromPrivateKey(_)_SERIALIZATION_Int_String`(`#unparseDataBytes(_)_SERIALIZATION_String_Bytes`(#SemanticCastToBytes(ARGS)))),#noDots(.KList))) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"addr(uint256)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.addr), org.kframework.attributes.Location(Location(504,10,506,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>.K,#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),#SemanticCastToInt(?WORD)),#noDots(.KList))) requires `_andBool_`(`_andBool_`(`_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"freshUInt(uint8)\"","String"))),`_<Int_`(#token("0","Int"),`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)))),`_<=Int_`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)),#token("32","Int"))) ensures `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(?WORD)),`_<Int_`(#SemanticCastToInt(?WORD),`_^Int_`(#token("2","Int"),`_*Int_`(#token("8","Int"),`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)))))) [label(FOUNDRY-CHEAT-CODES.foundry.call.freshUInt), org.kframework.attributes.Location(Location(566,10,570,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool "ensures" Bool [klabel(#ruleRequiresEnsures), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>.K,#dots(.KList)),`<number>`(#noDots(.KList),#SemanticCastToInt(_)=>`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)),#noDots(.KList))) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"roll(uint256)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.roll), org.kframework.attributes.Location(Location(393,10,395,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>.K,#dots(.KList)),`<coinbase>`(#noDots(.KList),#SemanticCastToInt(_)=>`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)),#noDots(.KList))) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"coinbase(address)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.coinbase), org.kframework.attributes.Location(Location(441,10,443,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>.K,#dots(.KList)),`<chainID>`(#noDots(.KList),#SemanticCastToInt(_)=>`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)),#noDots(.KList))) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"chainId(uint256)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.chainId), org.kframework.attributes.Location(Location(425,10,427,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(ARGS))=>.K,#dots(.KList)),`<baseFee>`(#noDots(.KList),#SemanticCastToInt(_)=>`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(ARGS)),#noDots(.KList))) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"fee(uint256)\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.fee), org.kframework.attributes.Location(Location(409,10,411,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#call________EVM_InternalOp_Int_Int_Int_Int_Int_Bytes_Bool`(#SemanticCastToInt(_),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToBytes(_),#token("false","Bool"))~>`#popCallStack_EVM_InternalOp`(.KList)~>`#popWorldState_EVM_InternalOp`(.KList)=>`#end__EVM_KItem_StatusCode`(`FOUNDRY_WHITELISTCALL_FOUNDRY-CHEAT-CODES_ExceptionalStatusCode`(.KList)),#dots(.KList)),`<whitelist>`(#noDots(.KList),#cells(`<isCallWhitelistActive>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList)),`<addressSet>`(#noDots(.KList),#SemanticCastToSet(WLIST),#noDots(.KList))),#dots(.KList))) requires `notBool_`(`Set:in`(#SemanticCastToInt(ACCTTO),#SemanticCastToSet(WLIST))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.catchNonWhitelistedCalls), org.kframework.attributes.Location(Location(994,10,1002,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule #cells(`<k>`(#noDots(.KList),`#addStorageSlotToWhitelist__FOUNDRY-CHEAT-CODES_KItem_StorageSlot`(#SemanticCastToStorageSlot(SLOT))=>.K,#dots(.KList)),`<whitelist>`(#noDots(.KList),#cells(`<isStorageWhitelistActive>`(#noDots(.KList),#SemanticCastToBool(_)=>#token("true","Bool"),#noDots(.KList)),`<storageSlotSet>`(#noDots(.KList),#SemanticCastToSet(WLIST)=>`_Set_`(#SemanticCastToSet(WLIST),`SetItem`(#SemanticCastToStorageSlot(SLOT))),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1417,10,1422,21)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`#addAddressToWhitelist__FOUNDRY-CHEAT-CODES_KItem_Int`(#SemanticCastToInt(ACCT))=>.K,#dots(.KList)),`<whitelist>`(#noDots(.KList),#cells(`<isCallWhitelistActive>`(#noDots(.KList),#SemanticCastToBool(_)=>#token("true","Bool"),#noDots(.KList)),`<addressSet>`(#noDots(.KList),#SemanticCastToSet(WLIST)=>`_Set_`(#SemanticCastToSet(WLIST),`SetItem`(#SemanticCastToInt(ACCT))),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1404,10,1409,21)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),``.K=>`#endPrank_FOUNDRY-CHEAT-CODES_KItem`(.KList)``~>`#halt_EVM_KItem`(.KList)~>`#return___EVM_KItem_Int_Int`(#SemanticCastToInt(_RETSTART),#SemanticCastToInt(_RETWIDTH)),#dots(.KList)),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD),#noDots(.KList))),`<prank>`(#noDots(.KList),#cells(`<singleCall>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList)),`<depth>`(#noDots(.KList),#SemanticCastToInt(PD),#noDots(.KList))),#dots(.KList))) requires `_==Int_`(#SemanticCastToInt(CD),`_+Int_`(#SemanticCastToInt(PD),#token("1","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(822,10,829,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule #cells(#cells(`<k>`(#noDots(.KList),``.K=>`#clearExpectOpcode_FOUNDRY-CHEAT-CODES_KItem`(.KList)``~>`_________EVM_InternalOp_CallOp_Int_Int_Int_Int_Int_Int_Int`(`CALL_EVM_CallOp`(.KList),#SemanticCastToInt(_GCAP),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH),#SemanticCastToInt(_RETSTART),#SemanticCastToInt(_RETWIDTH)),#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))),`<expectedOpcode>`(#noDots(.KList),#cells(#cells(#cells(#cells(`<isOpcodeExpected>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList)),`<expectedAddress>`(#noDots(.KList),#SemanticCastToInt(ACCTTO),#noDots(.KList))),`<expectedData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))),`<opcodeType>`(#noDots(.KList),`Call_FOUNDRY-CHEAT-CODES_OpcodeType`(.KList),#noDots(.KList))),`<expectedValue>`(#noDots(.KList),#SemanticCastToInt(VALUE),#noDots(.KList))),#noDots(.KList))) requires `_==K_`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH)),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("0","Int"),#SemanticCastToInt(ARGWIDTH))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(735,10,744,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule #cells(#cells(`<k>`(#noDots(.KList),``.K=>`#clearExpectOpcode_FOUNDRY-CHEAT-CODES_KItem`(.KList)``~>`________EVM_InternalOp_CallSixOp_Int_Int_Int_Int_Int_Int`(`STATICCALL_EVM_CallSixOp`(.KList),#SemanticCastToInt(_GCAP),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH),#SemanticCastToInt(_RETSTART),#SemanticCastToInt(_RETWIDTH)),#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))),`<expectedOpcode>`(#noDots(.KList),#cells(#cells(#cells(`<isOpcodeExpected>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList)),`<expectedAddress>`(#noDots(.KList),#SemanticCastToInt(ACCTTO),#noDots(.KList))),`<expectedData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))),`<opcodeType>`(#noDots(.KList),`Static_FOUNDRY-CHEAT-CODES_OpcodeType`(.KList),#noDots(.KList))),#dots(.KList))) requires `_==K_`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH)),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("0","Int"),#SemanticCastToInt(ARGWIDTH))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(711,10,720,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule #cells(#cells(`<k>`(#noDots(.KList),``.K=>`#clearExpectOpcode_FOUNDRY-CHEAT-CODES_KItem`(.KList)``~>`________EVM_InternalOp_CallSixOp_Int_Int_Int_Int_Int_Int`(`DELEGATECALL_EVM_CallSixOp`(.KList),#SemanticCastToInt(_GCAP),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH),#SemanticCastToInt(_RETSTART),#SemanticCastToInt(_RETWIDTH)),#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))),`<expectedOpcode>`(#noDots(.KList),#cells(#cells(#cells(`<isOpcodeExpected>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList)),`<expectedAddress>`(#noDots(.KList),#SemanticCastToInt(ACCTTO),#noDots(.KList))),`<expectedData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))),`<opcodeType>`(#noDots(.KList),`Delegate_FOUNDRY-CHEAT-CODES_OpcodeType`(.KList),#noDots(.KList))),#dots(.KList))) requires `_==K_`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(ARGSTART),#SemanticCastToInt(ARGWIDTH)),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("0","Int"),#SemanticCastToInt(ARGWIDTH))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(723,10,732,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule #cells(#cells(`<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`LOG(_)_EVM_LogOp_Int`(#SemanticCastToInt(N)),#SemanticCastToInt(_MEMSTART),#SemanticCastToInt(_MEMWIDTH)),#dots(.KList)),`<expectEmit>`(#noDots(.KList),#cells(`<recordEvent>`(#noDots(.KList),#token("true","Bool")=>#token("false","Bool"),#noDots(.KList)),`<isEventExpected>`(#noDots(.KList),#token("false","Bool")=>#token("true","Bool"),#noDots(.KList))),#dots(.KList))),`<wordStack>`(#noDots(.KList),#SemanticCastToWordStack(WS),#noDots(.KList))) requires `_>=Int_`(`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(#SemanticCastToWordStack(WS)),#SemanticCastToInt(N)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(934,10,941,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#setExpectRevert__FOUNDRY-CHEAT-CODES_KItem_Bytes`(#SemanticCastToBytes(EXPECTED))=>.K,#dots(.KList)),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD),#noDots(.KList))),`<expectedRevert>`(#noDots(.KList),#cells(#cells(`<isRevertExpected>`(#noDots(.KList),#token("false","Bool")=>#token("true","Bool"),#noDots(.KList)),`<expectedDepth>`(#noDots(.KList),#SemanticCastToInt(_)=>`_+Int_`(#SemanticCastToInt(CD),#token("1","Int")),#noDots(.KList))),`<expectedReason>`(#noDots(.KList),#SemanticCastToBytes(_)=>#SemanticCastToBytes(EXPECTED),#noDots(.KList))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1191,10,1197,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#return_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Int`(#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH))=>`#setLocalMem____EVM_InternalOp_Int_Int_Bytes`(#SemanticCastToInt(RETSTART),#SemanticCastToInt(RETWIDTH),#SemanticCastToBytes(OUT))~>`#refund__EVM_InternalOp_Gas`(#SemanticCastToGas(GCALL))~>#token("1","Int")~>`#push_EVM_InternalOp`(.KList),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(OUT),#noDots(.KList))),`<callGas>`(#noDots(.KList),#SemanticCastToGas(GCALL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.return), org.kframework.attributes.Location(Location(291,10,297,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#returnStorage___FOUNDRY-CHEAT-CODES_KItem_Int_Int`(#SemanticCastToInt(ACCTID),#SemanticCastToInt(LOC))=>.K,#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),`#lookup(_,_)_EVM-TYPES_Int_Map_Int`(#SemanticCastToMap(STORAGE),#SemanticCastToInt(LOC))),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTID),#noDots(.KList)),`<storage>`(#noDots(.KList),#SemanticCastToMap(STORAGE),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1148,10,1154,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#returnNonce__FOUNDRY-CHEAT-CODES_KItem_Int`(#SemanticCastToInt(ACCTID))=>.K,#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),#SemanticCastToInt(NONCE)),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTID),#noDots(.KList)),`<nonce>`(#noDots(.KList),#SemanticCastToInt(NONCE),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1121,10,1127,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#clearExpectRevert_FOUNDRY-CHEAT-CODES_KItem`(.KList)=>.K,#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(_)=>`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("512","Int"),#token("0","Int")),#noDots(.KList))),`<expectedRevert>`(#noDots(.KList),#cells(#cells(`<isRevertExpected>`(#noDots(.KList),#SemanticCastToBool(_)=>#token("false","Bool"),#noDots(.KList)),`<expectedDepth>`(#noDots(.KList),#SemanticCastToInt(_)=>#token("0","Int"),#noDots(.KList))),`<expectedReason>`(#noDots(.KList),#SemanticCastToBytes(_)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList),#noDots(.KList))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1205,10,1211,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#checkRevertReason_FOUNDRY-CHEAT-CODES_KItem`(.KList)=>`#markAsFailed_FOUNDRY-CHEAT-CODES_KItem`(.KList),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToBytes(OUT),#noDots(.KList))),`<expectedRevert>`(#noDots(.KList),`<expectedReason>`(#noDots(.KList),#SemanticCastToBytes(REASON),#noDots(.KList)),#dots(.KList))) requires `notBool_`(`#matchReason(_,_)_FOUNDRY-CHEAT-CODES_Bool_Bytes_Bytes`(#SemanticCastToBytes(REASON),`#encodeOutput(_)_FOUNDRY-CHEAT-CODES_Bytes_Bytes`(#SemanticCastToBytes(OUT)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1240,10,1246,64)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#call_foundry___FOUNDRY-CHEAT-CODES_KItem_Int_Bytes`(#SemanticCastToInt(SELECTOR),#SemanticCastToBytes(_ARGS))=>.K,#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToGas(_)=>infGas(#SemanticCastToInt(?_VGAS)),#noDots(.KList))),`<callGas>`(#noDots(.KList),#SemanticCastToGas(_)=>infGas(#SemanticCastToInt(?_VCALLGAS)),#noDots(.KList))) requires `_==Int_`(#SemanticCastToInt(SELECTOR),`abi_selector`(#token("\"infiniteGas()\"","String"))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.call.infiniteGas), org.kframework.attributes.Location(Location(897,10,900,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#call________EVM_InternalOp_Int_Int_Int_Int_Int_Bytes_Bool`(#SemanticCastToInt(ACCTFROM)=>#SemanticCastToInt(NCL),#SemanticCastToInt(_ACCTTO),#SemanticCastToInt(_ACCTCODE),#SemanticCastToInt(_VALUE),#SemanticCastToInt(_APPVALUE),#SemanticCastToBytes(_ARGS),#SemanticCastToBool(_STATIC)),#dots(.KList)),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD),#noDots(.KList))),`<prank>`(#noDots(.KList),#cells(#cells(#cells(`<newCaller>`(#noDots(.KList),#SemanticCastToInt(NCL),#noDots(.KList)),`<newOrigin>`(#noDots(.KList),`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList))),`<active>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList))),`<depth>`(#noDots(.KList),#SemanticCastToInt(CD),#noDots(.KList))),#dots(.KList))) requires `_andBool_`(`_=/=K_`(#SemanticCastToInt(NCL),`.Account_EVM-TYPES_Account`(.KList)),`_=/=Int_`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(NCL))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.prank.injectCaller), org.kframework.attributes.Location(Location(788,10,798,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),``.K=>`#markAsFailed_FOUNDRY-CHEAT-CODES_KItem`(.KList)~>`#clearExpectRevert_FOUNDRY-CHEAT-CODES_KItem`(.KList)``~>`#halt_EVM_KItem`(.KList),#dots(.KList)),`<statusCode>`(#noDots(.KList),`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList)=>`EVMC_REVERT_NETWORK_EndStatusCode`(.KList),#noDots(.KList))),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD),#noDots(.KList))),`<expectedRevert>`(#noDots(.KList),#cells(`<isRevertExpected>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList)),`<expectedDepth>`(#noDots(.KList),#SemanticCastToInt(ED),#noDots(.KList))),#dots(.KList))) requires `_<=Int_`(#SemanticCastToInt(CD),#SemanticCastToInt(ED)) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.handleExpectRevert.error), org.kframework.attributes.Location(Location(633,10,641,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),``.K=>`#clearExpectOpcode_FOUNDRY-CHEAT-CODES_KItem`(.KList)``~>`______EVM_InternalOp_QuadStackOp_Int_Int_Int_Int`(`CREATE2_EVM_QuadStackOp`(.KList),#SemanticCastToInt(VALUE),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH),#SemanticCastToInt(_SALT)),#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToAccount(ACCT),#noDots(.KList))),`<expectedOpcode>`(#noDots(.KList),#cells(#cells(#cells(#cells(`<isOpcodeExpected>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList)),`<expectedAddress>`(#noDots(.KList),#SemanticCastToAccount(ACCT),#noDots(.KList))),`<expectedData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))),`<opcodeType>`(#noDots(.KList),`Create2_FOUNDRY-CHEAT-CODES_OpcodeType`(.KList),#noDots(.KList))),`<expectedValue>`(#noDots(.KList),#SemanticCastToInt(VALUE),#noDots(.KList))),#noDots(.KList))) requires `_==K_`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH)),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("0","Int"),#SemanticCastToInt(MEMWIDTH))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(760,10,770,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),``.K=>`#clearExpectOpcode_FOUNDRY-CHEAT-CODES_KItem`(.KList)``~>`_____EVM_InternalOp_TernStackOp_Int_Int_Int`(`CREATE_EVM_TernStackOp`(.KList),#SemanticCastToInt(VALUE),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH)),#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToAccount(ACCT),#noDots(.KList))),`<expectedOpcode>`(#noDots(.KList),#cells(#cells(#cells(#cells(`<isOpcodeExpected>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList)),`<expectedAddress>`(#noDots(.KList),#SemanticCastToAccount(ACCT),#noDots(.KList))),`<expectedData>`(#noDots(.KList),#SemanticCastToBytes(DATA),#noDots(.KList))),`<opcodeType>`(#noDots(.KList),`Create_FOUNDRY-CHEAT-CODES_OpcodeType`(.KList),#noDots(.KList))),`<expectedValue>`(#noDots(.KList),#SemanticCastToInt(VALUE),#noDots(.KList))),#noDots(.KList))) requires `_==K_`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH)),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),#token("0","Int"),#SemanticCastToInt(MEMWIDTH))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(747,10,757,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),``.K=>`#checkRevertReason_FOUNDRY-CHEAT-CODES_KItem`(.KList)~>`#clearExpectRevert_FOUNDRY-CHEAT-CODES_KItem`(.KList)``~>`#halt_EVM_KItem`(.KList),#dots(.KList)),`<statusCode>`(#noDots(.KList),#SemanticCastToStatusCode(SC),#noDots(.KList))),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD),#noDots(.KList))),`<expectedRevert>`(#noDots(.KList),#cells(`<isRevertExpected>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList)),`<expectedDepth>`(#noDots(.KList),#SemanticCastToInt(ED),#noDots(.KList))),#dots(.KList))) requires `_andBool_`(`_<=Int_`(#SemanticCastToInt(CD),#SemanticCastToInt(ED)),`_=/=K_`(#SemanticCastToStatusCode(SC),`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.handleExpectRevert), org.kframework.attributes.Location(Location(616,10,625,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`____EVM_InternalOp_BinStackOp_Int_Int`(`SSTORE_EVM_BinStackOp`(.KList),#SemanticCastToInt(INDEX),#SemanticCastToInt(_))=>`#end__EVM_KItem_StatusCode`(`FOUNDRY_WHITELISTSTORAGE_FOUNDRY-CHEAT-CODES_ExceptionalStatusCode`(.KList)),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<statusCode>`(#noDots(.KList),#SemanticCastToStatusCode(_)=>`FOUNDRY_WHITELISTSTORAGE_FOUNDRY-CHEAT-CODES_ExceptionalStatusCode`(.KList),#noDots(.KList))),`<whitelist>`(#noDots(.KList),#cells(`<isStorageWhitelistActive>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList)),`<storageSlotSet>`(#noDots(.KList),#SemanticCastToSet(WLIST),#noDots(.KList))),#dots(.KList))) requires `notBool_`(`Set:in`(`{_|_}_FOUNDRY-CHEAT-CODES_StorageSlot_Int_Int`(#SemanticCastToInt(ACCT),#SemanticCastToInt(INDEX)),#SemanticCastToSet(WLIST))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.catchNonWhitelistedStorageChanges), org.kframework.attributes.Location(Location(1011,10,1019,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#endPrank_FOUNDRY-CHEAT-CODES_KItem`(.KList)=>`#clearPrank_FOUNDRY-CHEAT-CODES_KItem`(.KList),#dots(.KList)),`<caller>`(#noDots(.KList),#SemanticCastToAccount(_)=>#SemanticCastToAccount(CL),#noDots(.KList))),`<origin>`(#noDots(.KList),#SemanticCastToAccount(_)=>#SemanticCastToAccount(OG),#noDots(.KList))),`<prank>`(#noDots(.KList),#cells(#cells(`<prevCaller>`(#noDots(.KList),#SemanticCastToAccount(CL),#noDots(.KList)),`<prevOrigin>`(#noDots(.KList),#SemanticCastToAccount(OG),#noDots(.KList))),`<active>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1316,10,1324,17)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#checkRevertReason_FOUNDRY-CHEAT-CODES_KItem`(.KList)=>.K,#dots(.KList)),`<statusCode>`(#noDots(.KList),#SemanticCastToStatusCode(_)=>`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToBytes(OUT),#noDots(.KList))),`<expectedRevert>`(#noDots(.KList),`<expectedReason>`(#noDots(.KList),#SemanticCastToBytes(REASON),#noDots(.KList)),#dots(.KList))) requires `#matchReason(_,_)_FOUNDRY-CHEAT-CODES_Bool_Bytes_Bytes`(#SemanticCastToBytes(REASON),`#encodeOutput(_)_FOUNDRY-CHEAT-CODES_Bytes_Bytes`(#SemanticCastToBytes(OUT))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1231,10,1238,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#call________EVM_InternalOp_Int_Int_Int_Int_Int_Bytes_Bool`(#SemanticCastToInt(ACCTFROM)=>#SemanticCastToInt(NCL),#SemanticCastToInt(_ACCTTO),#SemanticCastToInt(_ACCTCODE),#SemanticCastToInt(_VALUE),#SemanticCastToInt(_APPVALUE),#SemanticCastToBytes(_ARGS),#SemanticCastToBool(_STATIC)),#dots(.KList)),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD),#noDots(.KList))),`<origin>`(#noDots(.KList),#SemanticCastToAccount(_)=>#SemanticCastToAccount(NOG),#noDots(.KList))),`<prank>`(#noDots(.KList),#cells(#cells(#cells(`<newCaller>`(#noDots(.KList),#SemanticCastToInt(NCL),#noDots(.KList)),`<newOrigin>`(#noDots(.KList),#SemanticCastToAccount(NOG),#noDots(.KList))),`<active>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList))),`<depth>`(#noDots(.KList),#SemanticCastToInt(CD),#noDots(.KList))),#dots(.KList))) requires `_andBool_`(`_andBool_`(`_=/=K_`(#SemanticCastToInt(NCL),`.Account_EVM-TYPES_Account`(.KList)),`_=/=K_`(#SemanticCastToAccount(NOG),`.Account_EVM-TYPES_Account`(.KList))),`_=/=Int_`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(NCL))) ensures #token("true","Bool") [label(FOUNDRY-CHEAT-CODES.foundry.prank.injectCallerAndOrigin), org.kframework.attributes.Location(Location(802,10,814,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule #cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),``.K=>`#clearExpectEmit_FOUNDRY-CHEAT-CODES_KItem`(.KList)``~>`____EVM_InternalOp_BinStackOp_Int_Int`(`LOG(_)_EVM_LogOp_Int`(#SemanticCastToInt(N)),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH)),#dots(.KList)),`<log>`(#noDots(.KList),`_List_`(#SemanticCastToList(_),`ListItem`(#SemanticCastToSubstateLogEntry(`{_|_|_}_EVM-TYPES_SubstateLogEntry_Int_List_Bytes`(#SemanticCastToInt(_),#SemanticCastToList(TOPICS),#SemanticCastToBytes(DATA))))),#noDots(.KList))),`<expectEmit>`(#noDots(.KList),#cells(#cells(#cells(#cells(`<recordEvent>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)),`<isEventExpected>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList))),`<checkedTopics>`(#noDots(.KList),#SemanticCastToList(CHECKS),#noDots(.KList))),`<checkedData>`(#noDots(.KList),#SemanticCastToBool(CHECKDATA),#noDots(.KList))),`<expectedEventAddress>`(#noDots(.KList),`.Account_EVM-TYPES_Account`(.KList),#noDots(.KList))),#noDots(.KList))),`<wordStack>`(#noDots(.KList),#SemanticCastToWordStack(WS),#noDots(.KList))),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))) requires `_andBool_`(`_andBool_`(`_>=Int_`(`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(#SemanticCastToWordStack(WS)),#SemanticCastToInt(N)),`#checkTopics(_,_,_)_FOUNDRY-CHEAT-CODES_Bool_List_List_List`(#SemanticCastToList(CHECKS),#SemanticCastToList(TOPICS),`WordStack2List(_)_EVM-TYPES_List_WordStack`(`#take(_,_)_EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(N),#SemanticCastToWordStack(WS))))),`_orBool_`(`notBool_`(#SemanticCastToBool(CHECKDATA)),`_==Int_`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(DATA)),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH)))))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(944,10,957,106)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
  rule #cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#setPrank____FOUNDRY-CHEAT-CODES_KItem_Int_Account_Bool`(#SemanticCastToInt(NEWCALLER),#SemanticCastToAccount(NEWORIGIN),#SemanticCastToBool(SINGLEPRANK))=>.K,#dots(.KList)),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD),#noDots(.KList))),`<caller>`(#noDots(.KList),#SemanticCastToAccount(CL),#noDots(.KList))),`<origin>`(#noDots(.KList),#SemanticCastToAccount(OG),#noDots(.KList))),`<prank>`(#noDots(.KList),#cells(#cells(#cells(#cells(#cells(#cells(`<prevCaller>`(#noDots(.KList),`.Account_EVM-TYPES_Account`(.KList)=>#SemanticCastToAccount(CL),#noDots(.KList)),`<prevOrigin>`(#noDots(.KList),`.Account_EVM-TYPES_Account`(.KList)=>#SemanticCastToAccount(OG),#noDots(.KList))),`<newCaller>`(#noDots(.KList),#SemanticCastToAccount(_)=>#SemanticCastToInt(NEWCALLER),#noDots(.KList))),`<newOrigin>`(#noDots(.KList),#SemanticCastToAccount(_)=>#SemanticCastToAccount(NEWORIGIN),#noDots(.KList))),`<active>`(#noDots(.KList),#token("false","Bool")=>#token("true","Bool"),#noDots(.KList))),`<depth>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(CD),#noDots(.KList))),`<singleCall>`(#noDots(.KList),#SemanticCastToBool(_)=>#SemanticCastToBool(SINGLEPRANK),#noDots(.KList))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1295,10,1307,18)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),``.K=>`#clearExpectEmit_FOUNDRY-CHEAT-CODES_KItem`(.KList)``~>`____EVM_InternalOp_BinStackOp_Int_Int`(`LOG(_)_EVM_LogOp_Int`(#SemanticCastToInt(N)),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH)),#dots(.KList)),`<log>`(#noDots(.KList),`_List_`(#SemanticCastToList(_),`ListItem`(#SemanticCastToSubstateLogEntry(`{_|_|_}_EVM-TYPES_SubstateLogEntry_Int_List_Bytes`(#SemanticCastToInt(_),#SemanticCastToList(TOPICS),#SemanticCastToBytes(DATA))))),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToAccount(ACCT),#noDots(.KList))),`<expectEmit>`(#noDots(.KList),#cells(#cells(#cells(#cells(`<recordEvent>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)),`<isEventExpected>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList))),`<checkedTopics>`(#noDots(.KList),#SemanticCastToList(CHECKS),#noDots(.KList))),`<checkedData>`(#noDots(.KList),#SemanticCastToBool(CHECKDATA),#noDots(.KList))),`<expectedEventAddress>`(#noDots(.KList),#SemanticCastToAccount(ACCT),#noDots(.KList))),#noDots(.KList))),`<wordStack>`(#noDots(.KList),#SemanticCastToWordStack(WS),#noDots(.KList))),`<localMem>`(#noDots(.KList),#SemanticCastToBytes(LM),#noDots(.KList))) requires `_andBool_`(`_andBool_`(`_>=Int_`(`#sizeWordStack(_)_EVM-TYPES_Int_WordStack`(#SemanticCastToWordStack(WS)),#SemanticCastToInt(N)),`#checkTopics(_,_,_)_FOUNDRY-CHEAT-CODES_Bool_List_List_List`(#SemanticCastToList(CHECKS),#SemanticCastToList(TOPICS),`WordStack2List(_)_EVM-TYPES_List_WordStack`(`#take(_,_)_EVM-TYPES_WordStack_Int_WordStack`(#SemanticCastToInt(N),#SemanticCastToWordStack(WS))))),`_orBool_`(`notBool_`(#SemanticCastToBool(CHECKDATA)),`_==Int_`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(DATA)),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(LM),#SemanticCastToInt(MEMSTART),#SemanticCastToInt(MEMWIDTH)))))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(960,10,974,106)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(40)]
endmodule


module FOUNDRY-MAIN [digest(��M�2�<��?�ِ��r���r�b�Y$���), org.kframework.attributes.Location(Location(3,1,17,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/foundry.k))]
  imports VM-VERIFICATION
  imports TEST-VERIFICATION
  imports STDSTORAGE-VERIFICATION
  imports STDMATH-VERIFICATION
  imports STDERROR-VERIFICATION
  imports SCRIPT-VERIFICATION
  imports DSTEST-VERIFICATION
  imports CONSOLE2-VERIFICATION
  imports CONSOLE-VERIFICATION
  imports ASSERTTEST-VERIFICATION
endmodule


module FOUNDRY-SUCCESS [digest(3�w��'ĩS��U4��0q�}�Y-�18�m`�), org.kframework.attributes.Location(Location(145,1,161,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md))]
  imports EVM
  syntax Bool ::= "foundry_success" "(" statusCode:StatusCode "," failed:Int "," revertExpected:Bool "," opcodeExpected:Bool "," recordEventExpected:Bool "," eventExpected:Bool ")" [function, klabel(foundry_success), symbol]
  rule `foundry_success`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList),#token("0","Int"),#token("false","Bool"),#token("false","Bool"),#token("false","Bool"),#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(158,10,158,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `foundry_success`(#SemanticCastToStatusCode(_),#SemanticCastToInt(_),#SemanticCastToBool(_),#SemanticCastToBool(_),#SemanticCastToBool(_),#SemanticCastToBool(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(159,10,159,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/foundry.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
endmodule


module GAS [digest(����*� �>m_^nK돊y23c�(��k�݅), org.kframework.attributes.Location(Location(27,1,44,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md))]
  imports INT
  imports GAS-SYNTAX
  imports GAS-SIMPLIFICATION
  imports GAS-FEES
  imports BOOL
  rule `minGas(_,_)_GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(42,10,42,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `gas2Int(_)_GAS-SYNTAX_Int_Gas`(#SemanticCastToInt(G))=>#SemanticCastToInt(G) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(43,10,43,29)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<Gas__GAS-SYNTAX_Bool_Gas_Gas`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_<Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(39,10,39,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<=Gas__GAS-SYNTAX_Bool_Gas_Gas`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_<=Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(40,10,40,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_/Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_/Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(35,10,35,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_-Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(37,10,37,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_+Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_+Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(36,10,36,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_*Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_*Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(34,10,34,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module GAS-FEES [digest(�̘���̛v=��$��{1�]�E55�1��6u), org.kframework.attributes.Location(Location(101,1,248,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md))]
  imports SCHEDULE
  imports GAS-SYNTAX
  syntax Int ::= "Rsstore" "(" Schedule "," Int "," Int "," Int ")" [function, klabel(Rsstore), smtlib(gas_Rsstore), total]
  syntax Int ::= "G0" "(" Schedule "," Bytes "," Int "," Int "," Int ")" [function, klabel(G0data)]
  syntax Int ::= "G0" "(" Schedule "," Bytes "," Bool ")" [function, klabel(G0)]
  syntax Int ::= "G0" "(" Schedule "," Bool ")" [function, klabel(G0base)]
  syntax Int ::= "Cxfer" "(" Schedule "," Int ")" [function, klabel(Cxfer), smtlib(gas_Cxfer), total]
  syntax Int ::= "Cstorageaccess" "(" Schedule "," Bool ")" [function, klabel(Cstorageaccess), smtlib(gas_Cstorageaccess), total]
  syntax Int ::= "Csstore" "(" Schedule "," Int "," Int "," Int ")" [function, klabel(Csstore), smtlib(gas_Csstore), total]
  syntax Int ::= "Csload" "(" Schedule "," Bool ")" [function, klabel(Csload), smtlib(gas_Csload), total]
  syntax Int ::= "Cnew" "(" Schedule "," Bool "," Int ")" [function, klabel(Cnew), smtlib(gas_Cnew), total]
  syntax Int ::= "Cmodexp" "(" Schedule "," Bytes "," Int "," Int "," Int ")" [function, klabel(Cmodexp), smtlib(gas_Cmodexp), total]
  syntax Int ::= "Cmem" "(" Schedule "," Int ")" [function, klabel(Cmem), memo, smtlib(gas_Cmem), total]
  syntax Int ::= "Cgascap" "(" Schedule "," Int "," Int "," Int ")" [function, klabel(Cgascap), smtlib(gas_Cgascap_Int), total]
  syntax Int ::= "Cextra" "(" Schedule "," Bool "," Int "," Bool ")" [function, klabel(Cextra), smtlib(gas_Cextra), total]
  syntax Int ::= "Cextcodesize" "(" Schedule ")" [function, klabel(Cextcodesize), smtlib(gas_Cextcodesize), total]
  syntax Int ::= "Cextcodehash" "(" Schedule ")" [function, klabel(Cextcodehash), smtlib(gas_Cextcodehash), total]
  syntax Int ::= "Cextcodecopy" "(" Schedule "," Int ")" [function, klabel(Cextcodecopy), smtlib(gas_Cextcodecopy), total]
  syntax Int ::= "Cbalance" "(" Schedule ")" [function, klabel(Cbalance), smtlib(gas_Cbalance), total]
  syntax Int ::= "Caddraccess" "(" Schedule "," Bool ")" [function, klabel(Caddraccess), smtlib(gas_Caddraccess), total]
  syntax Int ::= "#newMultComplexity" "(" Int ")" [function, klabel(#newMultComplexity)]
  syntax Int ::= "#multComplexity" "(" Int ")" [function, klabel(#multComplexity)]
  syntax Int ::= "#allBut64th" "(" Int ")" [function, klabel(#allBut64th), smtlib(gas_allBut64th_Int), total]
  syntax Int ::= "#adjustedExpLength" "(" Int "," Int "," Bytes ")" [function, klabel(#adjustedExpLength)]
  syntax Int ::= "#adjustedExpLength" "(" Int ")" [function, klabel(#adjustedExpLengthAux)]
  syntax Gas ::= "G*" "(" Gas "," Int "," Int "," Schedule ")" [function]
  syntax Gas ::= "Cgascap" "(" Schedule "," Gas "," Gas "," Int ")" [function, klabel(Cgascap), smtlib(gas_Cgascap_Gas), total]
  syntax Gas ::= "#allBut64th" "(" Gas ")" [function, klabel(#allBut64th), smtlib(gas_allBut64th_Gas), total]
  syntax Bool ::= "#accountEmpty" "(" AccountCode "," Int "," Int ")" [function, klabel(accountEmpty), symbol, total]
  rule accountEmpty(#SemanticCastToAccountCode(CODE),#SemanticCastToInt(NONCE),#SemanticCastToInt(BAL))=>`_andBool_`(`_andBool_`(`_==K_`(#SemanticCastToAccountCode(CODE),`.Bytes_BYTES-HOOKED_Bytes`(.KList)),`_==Int_`(#SemanticCastToInt(NONCE),#token("0","Int"))),`_==Int_`(#SemanticCastToInt(BAL),#token("0","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(207,10,207,102)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `Rsstore(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(NEW),#SemanticCastToInt(CURR),#SemanticCastToInt(_ORIG))=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_andBool_`(`_=/=Int_`(#SemanticCastToInt(CURR),#token("0","Int")),`_==Int_`(#SemanticCastToInt(NEW),#token("0","Int"))),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rsstoreclear_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#token("0","Int")) requires `notBool_`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasdirtysstore_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [concrete, label(GAS-FEES.Rsstore.old), org.kframework.attributes.Location(Location(162,10,164,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Rsstore(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(NEW),#SemanticCastToInt(CURR),#SemanticCastToInt(ORIG))=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_andBool_`(`_andBool_`(`_=/=Int_`(#SemanticCastToInt(CURR),#SemanticCastToInt(NEW)),`_==Int_`(#SemanticCastToInt(ORIG),#SemanticCastToInt(CURR))),`_==Int_`(#SemanticCastToInt(NEW),#token("0","Int"))),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rsstoreclear_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_+Int_`(`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_andBool_`(`_andBool_`(`_=/=Int_`(#SemanticCastToInt(CURR),#SemanticCastToInt(NEW)),`_=/=Int_`(#SemanticCastToInt(ORIG),#SemanticCastToInt(CURR))),`_=/=Int_`(#SemanticCastToInt(ORIG),#token("0","Int"))),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_==Int_`(#SemanticCastToInt(CURR),#token("0","Int")),`_-Int_`(#token("0","Int"),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rsstoreclear_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_==Int_`(#SemanticCastToInt(NEW),#token("0","Int")),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rsstoreclear_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#token("0","Int"))),#token("0","Int")),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_andBool_`(`_=/=Int_`(#SemanticCastToInt(CURR),#SemanticCastToInt(NEW)),`_==Int_`(#SemanticCastToInt(ORIG),#SemanticCastToInt(NEW))),`_-Int_`(`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_==Int_`(#SemanticCastToInt(ORIG),#token("0","Int")),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstoreset_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstorereset_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsload_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),#token("0","Int")))) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasdirtysstore_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [concrete, label(GAS-FEES.Rsstore.new), org.kframework.attributes.Location(Location(143,10,158,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `G0(_,_,_,_,_)_GAS-FEES_Int_Schedule_Bytes_Int_Int_Int`(#SemanticCastToSchedule(_),#SemanticCastToBytes(_),#SemanticCastToInt(I),#SemanticCastToInt(I),#SemanticCastToInt(R))=>#SemanticCastToInt(R) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(224,10,224,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `G0(_,_,_,_,_)_GAS-FEES_Int_Schedule_Bytes_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToBytes(WS),#SemanticCastToInt(I),#SemanticCastToInt(J),#SemanticCastToInt(R))=>`G0(_,_,_,_,_)_GAS-FEES_Int_Schedule_Bytes_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToBytes(WS),`_+Int_`(#SemanticCastToInt(I),#token("1","Int")),#SemanticCastToInt(J),`_+Int_`(#SemanticCastToInt(R),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_==Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(WS),#SemanticCastToInt(I)),#token("0","Int")),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gtxdatazero_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gtxdatanonzero_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(225,10,225,151)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `G0(_,_,_)_GAS-FEES_Int_Schedule_Bytes_Bool`(#SemanticCastToSchedule(SCHED),#SemanticCastToBytes(WS),#SemanticCastToBool(B))=>`_+Int_`(`G0(_,_,_,_,_)_GAS-FEES_Int_Schedule_Bytes_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToBytes(WS),#token("0","Int"),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(WS)),#token("0","Int")),`G0(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(B))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(219,10,219,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `G0(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(SCHED),#token("true","Bool"))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gtxcreate_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(221,10,221,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `G0(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(SCHED),#token("false","Bool"))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gtransaction_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(222,10,222,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `G*(_,_,_,_)_GAS-FEES_Gas_Gas_Int_Int_Schedule`(#SemanticCastToGas(GAVAIL),#SemanticCastToInt(GLIMIT),#SemanticCastToInt(REFUND),#SemanticCastToSchedule(SCHED))=>`_+Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToGas(GAVAIL),`minGas(_,_)_GAS-SYNTAX_Gas_Gas_Gas`(`_/Gas__GAS-SYNTAX_Gas_Gas_Gas`(`_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToInt(GLIMIT),#SemanticCastToGas(GAVAIL)),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rmaxquotient_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),#SemanticCastToInt(REFUND))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(229,10,229,123)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `Cxfer(_,_)_GAS-FEES_Int_Schedule_Int`(#SemanticCastToSchedule(_SCHED),#token("0","Int"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [label(GAS-FEES.Cxfer.none), org.kframework.attributes.Location(Location(174,24,174,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `Cxfer(_,_)_GAS-FEES_Int_Schedule_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(N))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcallvalue_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)) requires `_=/=Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [label(GAS-FEES.Cxfer.some), org.kframework.attributes.Location(Location(175,24,175,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Cstorageaccess(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISWARM))=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(#SemanticCastToBool(ISWARM),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gwarmstorageread_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcoldsload_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))) requires #token("true","Bool") ensures #token("true","Bool") [label(GAS-FEES.Cstorageaccess), org.kframework.attributes.Location(Location(180,28,180,143)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `Csstore(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(NEW),#SemanticCastToInt(CURR),#SemanticCastToInt(_ORIG))=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_andBool_`(`_==Int_`(#SemanticCastToInt(CURR),#token("0","Int")),`_=/=Int_`(#SemanticCastToInt(NEW),#token("0","Int"))),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstoreset_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstorereset_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))) requires `notBool_`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasdirtysstore_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [concrete, label(GAS-FEES.Csstore.old), org.kframework.attributes.Location(Location(137,10,139,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Csstore(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(NEW),#SemanticCastToInt(CURR),#SemanticCastToInt(ORIG))=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_orBool_`(`_==Int_`(#SemanticCastToInt(CURR),#SemanticCastToInt(NEW)),`_=/=Int_`(#SemanticCastToInt(ORIG),#SemanticCastToInt(CURR))),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsload_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_==Int_`(#SemanticCastToInt(ORIG),#token("0","Int")),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstoreset_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstorereset_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)))) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasdirtysstore_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [concrete, label(GAS-FEES.Csstore.new), org.kframework.attributes.Location(Location(131,10,133,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Csload(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(_ISWARM))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsload_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)) requires `notBool_`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [label(GAS-FEES.Csload.old), org.kframework.attributes.Location(Location(183,24,183,123)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Csload(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISWARM))=>`Cstorageaccess(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISWARM)) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [label(GAS-FEES.Csload.new), org.kframework.attributes.Location(Location(182,24,182,123)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Cnew(_,_,_)_GAS-FEES_Int_Schedule_Bool_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(VALUE))=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_andBool_`(#SemanticCastToBool(ISEMPTY),`_orBool_`(`_=/=Int_`(#SemanticCastToInt(VALUE),#token("0","Int")),`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gzerovaluenewaccountgas_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)))),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gnewaccount_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [label(GAS-FEES.Cnew), org.kframework.attributes.Location(Location(171,10,172,129)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `Cmodexp(_,_,_,_,_)_GAS-FEES_Int_Schedule_Bytes_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToBytes(DATA),#SemanticCastToInt(BASELEN),#SemanticCastToInt(EXPLEN),#SemanticCastToInt(MODLEN))=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#token("200","Int"),`_/Int_`(`_*Int_`(`#newMultComplexity(_)_GAS-FEES_Int_Int`(`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(BASELEN),#SemanticCastToInt(MODLEN))),`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`#adjustedExpLength(_,_,_)_GAS-FEES_Int_Int_Int_Bytes`(#SemanticCastToInt(BASELEN),#SemanticCastToInt(EXPLEN),#SemanticCastToBytes(DATA)),#token("1","Int"))),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gquaddivisor_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)))) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [concrete, label(GAS-FEES.Cmodexp.new), org.kframework.attributes.Location(Location(201,25,202,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Cmodexp(_,_,_,_,_)_GAS-FEES_Int_Schedule_Bytes_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToBytes(DATA),#SemanticCastToInt(BASELEN),#SemanticCastToInt(EXPLEN),#SemanticCastToInt(MODLEN))=>`_/Int_`(`_*Int_`(`#multComplexity(_)_GAS-FEES_Int_Int`(`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(BASELEN),#SemanticCastToInt(MODLEN))),`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`#adjustedExpLength(_,_,_)_GAS-FEES_Int_Int_Int_Bytes`(#SemanticCastToInt(BASELEN),#SemanticCastToInt(EXPLEN),#SemanticCastToBytes(DATA)),#token("1","Int"))),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gquaddivisor_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))) requires `notBool_`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [concrete, label(GAS-FEES.Cmodexp.old), org.kframework.attributes.Location(Location(197,25,198,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Cmem(_,_)_GAS-FEES_Int_Schedule_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(N))=>`_+Int_`(`_*Int_`(#SemanticCastToInt(N),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gmemory_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))),`_/Int_`(`_*Int_`(#SemanticCastToInt(N),#SemanticCastToInt(N)),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gquadcoeff_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [concrete, label(GAS-FEES.Cmem), org.kframework.attributes.Location(Location(177,18,177,106)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `Cgascap(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(GCAP),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(GEXTRA))=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_orBool_`(`_<Int_`(#SemanticCastToInt(GAVAIL),#SemanticCastToInt(GEXTRA)),`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gstaticcalldepth_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))),#SemanticCastToInt(GCAP),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`#allBut64th(_)_GAS-FEES_Int_Int`(`_-Int_`(#SemanticCastToInt(GAVAIL),#SemanticCastToInt(GEXTRA))),#SemanticCastToInt(GCAP))) requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(GCAP)) ensures #token("true","Bool") [concrete, label(GAS-FEES.Cgascap), org.kframework.attributes.Location(Location(123,10,125,28)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Cgascap(_,_,_,_)_GAS-FEES_Gas_Schedule_Gas_Gas_Int`(#SemanticCastToSchedule(_),#SemanticCastToGas(GCAP),#SemanticCastToGas(_),#SemanticCastToInt(_))=>#token("0","Int") requires `_<Gas__GAS-SYNTAX_Bool_Gas_Gas`(#SemanticCastToGas(GCAP),#token("0","Int")) ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(128,10,128,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Cextra(_,_,_,_)_GAS-FEES_Int_Schedule_Bool_Int_Bool`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(VALUE),#SemanticCastToBool(_ISWARM))=>`_+Int_`(`_+Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcall_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`Cnew(_,_,_)_GAS-FEES_Int_Schedule_Bool_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(VALUE))),`Cxfer(_,_)_GAS-FEES_Int_Schedule_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(VALUE))) requires `notBool_`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [label(GAS-FEES.Cextra.old), org.kframework.attributes.Location(Location(168,24,168,194)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Cextra(_,_,_,_)_GAS-FEES_Int_Schedule_Bool_Int_Bool`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(VALUE),#SemanticCastToBool(ISWARM))=>`_+Int_`(`_+Int_`(`Caddraccess(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISWARM)),`Cnew(_,_,_)_GAS-FEES_Int_Schedule_Bool_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(VALUE))),`Cxfer(_,_)_GAS-FEES_Int_Schedule_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(VALUE))) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [label(GAS-FEES.Cextra.new), org.kframework.attributes.Location(Location(167,24,167,194)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Cextcodesize(_)_GAS-FEES_Int_Schedule`(#SemanticCastToSchedule(SCHED))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gextcodesize_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)) requires `notBool_`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [label(GAS-FEES.Cextcodesize.old), org.kframework.attributes.Location(Location(186,30,186,119)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Cextcodesize(_)_GAS-FEES_Int_Schedule`(#SemanticCastToSchedule(SCHED))=>#token("0","Int") requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [label(GAS-FEES.Cextcodesize.new), org.kframework.attributes.Location(Location(185,30,185,119)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Cextcodehash(_)_GAS-FEES_Int_Schedule`(#SemanticCastToSchedule(SCHED))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbalance_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)) requires `notBool_`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [label(GAS-FEES.Cextcodehash.old), org.kframework.attributes.Location(Location(189,30,189,115)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Cextcodehash(_)_GAS-FEES_Int_Schedule`(#SemanticCastToSchedule(SCHED))=>#token("0","Int") requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [label(GAS-FEES.Cextcodehash.new), org.kframework.attributes.Location(Location(188,30,188,115)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Cextcodecopy(_,_)_GAS-FEES_Int_Schedule_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(WIDTH))=>`_+Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gextcodecopy_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcopy_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(WIDTH),#token("32","Int")))) requires `notBool_`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [concrete, label(GAS-FEES.Cextcodecopy.old), org.kframework.attributes.Location(Location(195,30,195,172)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Cextcodecopy(_,_)_GAS-FEES_Int_Schedule_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(WIDTH))=>`_*Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcopy_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(WIDTH),#token("32","Int"))) requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [concrete, label(GAS-FEES.Cextcodecopy.new), org.kframework.attributes.Location(Location(194,30,194,172)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Cbalance(_)_GAS-FEES_Int_Schedule`(#SemanticCastToSchedule(SCHED))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbalance_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)) requires `notBool_`(`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [label(GAS-FEES.Cbalance.old), org.kframework.attributes.Location(Location(192,26,192,107)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Cbalance(_)_GAS-FEES_Int_Schedule`(#SemanticCastToSchedule(SCHED))=>#token("0","Int") requires `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [label(GAS-FEES.Cbalance.new), org.kframework.attributes.Location(Location(191,26,191,107)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `Caddraccess(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISWARM))=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(#SemanticCastToBool(ISWARM),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gwarmstorageread_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcoldaccountaccess_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED))) requires #token("true","Bool") ensures #token("true","Bool") [label(GAS-FEES.Caddraccess), org.kframework.attributes.Location(Location(179,28,179,143)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#newMultComplexity(_)_GAS-FEES_Int_Int`(#SemanticCastToInt(X))=>`_^Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(X),#token("8","Int")),#token("2","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(238,10,238,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#multComplexity(_)_GAS-FEES_Int_Int`(#SemanticCastToInt(X))=>`_-Int_`(`_+Int_`(`_/Int_`(`_*Int_`(#SemanticCastToInt(X),#SemanticCastToInt(X)),#token("4","Int")),`_*Int_`(#token("96","Int"),#SemanticCastToInt(X))),#token("3072","Int")) requires `_andBool_`(`_>Int_`(#SemanticCastToInt(X),#token("64","Int")),`_<=Int_`(#SemanticCastToInt(X),#token("1024","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(235,10,235,116)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#multComplexity(_)_GAS-FEES_Int_Int`(#SemanticCastToInt(X))=>`_-Int_`(`_+Int_`(`_/Int_`(`_*Int_`(#SemanticCastToInt(X),#SemanticCastToInt(X)),#token("16","Int")),`_*Int_`(#token("480","Int"),#SemanticCastToInt(X))),#token("199680","Int")) requires `_>Int_`(#SemanticCastToInt(X),#token("1024","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(236,10,236,97)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#multComplexity(_)_GAS-FEES_Int_Int`(#SemanticCastToInt(X))=>`_*Int_`(#SemanticCastToInt(X),#SemanticCastToInt(X)) requires `_<=Int_`(#SemanticCastToInt(X),#token("64","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(234,10,234,96)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#allBut64th(_)_GAS-FEES_Int_Int`(#SemanticCastToInt(N))=>`_-Int_`(#SemanticCastToInt(N),`_/Int_`(#SemanticCastToInt(N),#token("64","Int"))) requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(N)) ensures #token("true","Bool") [label(GAS-FEES.allBut64th.pos), org.kframework.attributes.Location(Location(212,28,212,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#allBut64th(_)_GAS-FEES_Int_Int`(#SemanticCastToInt(N))=>#token("0","Int") requires `_<Int_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [label(GAS-FEES.allBut64th.neg), org.kframework.attributes.Location(Location(213,28,213,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#adjustedExpLength(_,_,_)_GAS-FEES_Int_Int_Int_Bytes`(#SemanticCastToInt(BASELEN),#SemanticCastToInt(EXPLEN),#SemanticCastToBytes(DATA))=>`_+Int_`(`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_<=Int_`(#SemanticCastToInt(EXPLEN),#token("32","Int")),#token("0","Int"),`_*Int_`(#token("8","Int"),`_-Int_`(#SemanticCastToInt(EXPLEN),#token("32","Int")))),`#adjustedExpLength(_)_GAS-FEES_Int_Int`(`#asInteger(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(DATA),`_+Int_`(#token("96","Int"),#SemanticCastToInt(BASELEN)),`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(EXPLEN),#token("32","Int")))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(243,10,243,203)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#adjustedExpLength(_)_GAS-FEES_Int_Int`(#token("1","Int"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(246,10,246,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#adjustedExpLength(_)_GAS-FEES_Int_Int`(#token("0","Int"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(245,10,245,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#adjustedExpLength(_)_GAS-FEES_Int_Int`(#SemanticCastToInt(N))=>`_+Int_`(#token("1","Int"),`#adjustedExpLength(_)_GAS-FEES_Int_Int`(`_/Int_`(#SemanticCastToInt(N),#token("2","Int")))) requires `_>Int_`(#SemanticCastToInt(N),#token("1","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(247,10,247,88)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
endmodule


module GAS-SIMPLIFICATION [digest(/jj�$8o{�>p���/v��]Xxs:*)), org.kframework.attributes.Location(Location(257,1,263,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), symbolic]
  imports INT
  imports GAS-SYNTAX
  imports BOOL
  rule `_<Gas__GAS-SYNTAX_Bool_Gas_Gas`(#SemanticCastToGas(A),#SemanticCastToGas(B))=>#token("false","Bool") requires `_<=Gas__GAS-SYNTAX_Bool_Gas_Gas`(#SemanticCastToGas(B),#SemanticCastToGas(A)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(262,10,262,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
endmodule


module GAS-SYNTAX [digest(L�0��������i��)C�#_��ؼ� ᠭ�), org.kframework.attributes.Location(Location(9,1,25,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md))]
  imports INT-SYNTAX
  syntax priority minGas(_,_)_GAS-SYNTAX_Gas_Gas_Gas > _*Gas__GAS-SYNTAX_Gas_Gas_Gas _/Gas__GAS-SYNTAX_Gas_Gas_Gas > _-Gas__GAS-SYNTAX_Gas_Gas_Gas _+Gas__GAS-SYNTAX_Gas_Gas_Gas
  syntax associativity left _-Gas__GAS-SYNTAX_Gas_Gas_Gas _+Gas__GAS-SYNTAX_Gas_Gas_Gas
  syntax associativity left _*Gas__GAS-SYNTAX_Gas_Gas_Gas _/Gas__GAS-SYNTAX_Gas_Gas_Gas
  syntax Int ::= "gas2Int" "(" Gas ")" [function, total]
  syntax Gas ::= Int
  syntax Gas ::= Gas "/Gas" Gas [function]
  syntax Gas ::= Gas "-Gas" Gas [function, total]
  syntax Gas ::= Gas "+Gas" Gas [function, total]
  syntax Gas ::= Gas "*Gas" Gas [function, total]
  syntax Gas ::= "minGas" "(" Gas "," Gas ")" [function, total]
  syntax Bool ::= Gas "<Gas" Gas [function, total]
  syntax Bool ::= Gas "<=Gas" Gas [function, total]
endmodule


module HASHED-LOCATIONS [digest(��=oS�a��_��{���v�V>4a), org.kframework.attributes.Location(Location(8,1,71,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md))]
  imports EVM
  imports BUF
  syntax IntList ::= Int "" IntList [klabel(intList), smtlib(intList), userList(*)]
  syntax IntList ::= ".IntList" [klabel(.List{"intList"}), smtlib(intList), userList(*)]
  syntax Int ::= "#hashedLocation" "(" String "," Int "," IntList ")" [function, klabel(hashLoc), smtlib(hashLoc)]
  rule `#hashedLocation(_,_,_)_HASHED-LOCATIONS_Int_String_Int_IntList`(#token("\"Vyper\"","String"),#SemanticCastToInt(BASE),`___HASHED-LOCATIONS_IntList_Int_IntList`(#SemanticCastToInt(OFFSET),`.List{"___HASHED-LOCATIONS_IntList_Int_IntList"}_IntList`(.KList)))=>`keccak(_)_SERIALIZATION_Int_Bytes`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),#SemanticCastToInt(BASE)),`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),#SemanticCastToInt(OFFSET)))) requires `_andBool_`(`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(BASE)),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(OFFSET))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(62,10,62,187)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#hashedLocation(_,_,_)_HASHED-LOCATIONS_Int_String_Int_IntList`(#token("\"Solidity\"","String"),#SemanticCastToInt(BASE),`___HASHED-LOCATIONS_IntList_Int_IntList`(#SemanticCastToInt(OFFSET),`.List{"___HASHED-LOCATIONS_IntList_Int_IntList"}_IntList`(.KList)))=>`keccak(_)_SERIALIZATION_Int_Bytes`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),#SemanticCastToInt(OFFSET)),`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),#SemanticCastToInt(BASE)))) requires `_andBool_`(`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(BASE)),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(OFFSET))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(63,10,63,187)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#hashedLocation(_,_,_)_HASHED-LOCATIONS_Int_String_Int_IntList`(#token("\"Array\"","String"),#SemanticCastToInt(BASE),`___HASHED-LOCATIONS_IntList_Int_IntList`(#SemanticCastToInt(OFFSET),`.List{"___HASHED-LOCATIONS_IntList_Int_IntList"}_IntList`(.KList)))=>`_+Word__EVM-TYPES_Int_Int_Int`(`keccak(_)_SERIALIZATION_Int_Bytes`(`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),#SemanticCastToInt(BASE))),#SemanticCastToInt(OFFSET)) requires `_andBool_`(`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(BASE)),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(OFFSET))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(64,10,64,187)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#hashedLocation(_,_,_)_HASHED-LOCATIONS_Int_String_Int_IntList`(#SemanticCastToString(_LANG),#SemanticCastToInt(BASE),`.List{"___HASHED-LOCATIONS_IntList_Int_IntList"}_IntList`(.KList))=>#SemanticCastToInt(BASE) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(59,10,59,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#hashedLocation(_,_,_)_HASHED-LOCATIONS_Int_String_Int_IntList`(#SemanticCastToString(LANG),#SemanticCastToInt(BASE),`___HASHED-LOCATIONS_IntList_Int_IntList`(#SemanticCastToInt(OFFSET),#SemanticCastToIntList(OFFSETS)))=>`#hashedLocation(_,_,_)_HASHED-LOCATIONS_Int_String_Int_IntList`(#SemanticCastToString(LANG),`#hashedLocation(_,_,_)_HASHED-LOCATIONS_Int_String_Int_IntList`(#SemanticCastToString(LANG),#SemanticCastToInt(BASE),`___HASHED-LOCATIONS_IntList_Int_IntList`(#SemanticCastToInt(OFFSET),`.List{"___HASHED-LOCATIONS_IntList_Int_IntList"}_IntList`(.KList))),#SemanticCastToIntList(OFFSETS)) requires `_=/=K_`(#SemanticCastToIntList(OFFSETS),`.List{"___HASHED-LOCATIONS_IntList_Int_IntList"}_IntList`(.KList)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(60,10,60,165)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
endmodule


module ID-SYNTAX [digest(�$u�m@,/�q��Y�9��"�H0`jt�zB), org.kframework.attributes.Location(Location(2221,1,2223,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  syntax Id [org.kframework.attributes.Location(Location(2222,3,2222,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), token]
endmodule


module ID-SYNTAX-PROGRAM-PARSING [digest(a��~����l�ز��bF�;�=�q��=��), org.kframework.attributes.Location(Location(2214,1,2219,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports BUILTIN-ID-TOKENS
  syntax Id ::= r"(?<![A-Za-z0-9\\_])[A-Za-z\\_][A-Za-z0-9\\_]*" [prec(1), token]
  syntax Id ::= #UpperId [token]
  syntax Id ::= #LowerId [token]
endmodule


module INFINITE-GAS [digest(��1��)F����AK�� 6�	�*�����e�), org.kframework.attributes.Location(Location(57,1,92,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md))]
  imports GAS
  syntax Gas ::= "#gas" "(" Int ")" [klabel(infGas), smtlib(infGas), symbol]
  rule `minGas(_,_)_GAS-SYNTAX_Gas_Gas_Gas`(infGas(#SemanticCastToInt(G)),infGas(#SemanticCastToInt(G')))=>infGas(`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(80,10,80,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minGas(_,_)_GAS-SYNTAX_Gas_Gas_Gas`(infGas(#SemanticCastToInt(G)),#SemanticCastToInt(G'))=>infGas(`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(82,10,82,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minGas(_,_)_GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToInt(G),infGas(#SemanticCastToInt(G')))=>infGas(`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(81,10,81,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `gas2Int(_)_GAS-SYNTAX_Int_Gas`(infGas(#SemanticCastToInt(G)))=>#SemanticCastToInt(G) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(84,10,84,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<Gas__GAS-SYNTAX_Bool_Gas_Gas`(infGas(#SemanticCastToInt(_)),#SemanticCastToGas(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(76,10,76,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<Gas__GAS-SYNTAX_Bool_Gas_Gas`(#SemanticCastToInt(_),infGas(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(75,10,75,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<=Gas__GAS-SYNTAX_Bool_Gas_Gas`(infGas(#SemanticCastToInt(_)),#SemanticCastToInt(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(77,10,77,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<=Gas__GAS-SYNTAX_Bool_Gas_Gas`(#SemanticCastToGas(_),infGas(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(78,10,78,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_/Gas__GAS-SYNTAX_Gas_Gas_Gas`(infGas(#SemanticCastToInt(G)),infGas(#SemanticCastToInt(G')))=>infGas(`_/Int_`(#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires `_=/=Int_`(#SemanticCastToInt(G'),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(73,10,73,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_/Gas__GAS-SYNTAX_Gas_Gas_Gas`(infGas(#SemanticCastToInt(G)),#SemanticCastToInt(G'))=>infGas(`_/Int_`(#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires `_=/=Int_`(#SemanticCastToInt(G'),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(65,10,65,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_/Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToInt(G),infGas(#SemanticCastToInt(G')))=>infGas(`_/Int_`(#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires `_=/=Int_`(#SemanticCastToInt(G'),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(69,15,69,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(infGas(#SemanticCastToInt(G)),infGas(#SemanticCastToInt(G')))=>infGas(`_-Int_`(#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(71,10,71,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(infGas(#SemanticCastToInt(G)),#SemanticCastToInt(G'))=>infGas(`_-Int_`(#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(63,10,63,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_-Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToInt(G),infGas(#SemanticCastToInt(G')))=>infGas(`_-Int_`(#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(67,15,67,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_+Gas__GAS-SYNTAX_Gas_Gas_Gas`(infGas(#SemanticCastToInt(G)),infGas(#SemanticCastToInt(G')))=>infGas(`_+Int_`(#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(70,10,70,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_+Gas__GAS-SYNTAX_Gas_Gas_Gas`(infGas(#SemanticCastToInt(G)),#SemanticCastToInt(G'))=>infGas(`_+Int_`(#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(62,10,62,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_+Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToInt(G),infGas(#SemanticCastToInt(G')))=>infGas(`_+Int_`(#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(66,15,66,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_*Gas__GAS-SYNTAX_Gas_Gas_Gas`(infGas(#SemanticCastToInt(G)),infGas(#SemanticCastToInt(G')))=>infGas(`_*Int_`(#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(72,10,72,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_*Gas__GAS-SYNTAX_Gas_Gas_Gas`(infGas(#SemanticCastToInt(G)),#SemanticCastToInt(G'))=>infGas(`_*Int_`(#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(64,10,64,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_*Gas__GAS-SYNTAX_Gas_Gas_Gas`(#SemanticCastToInt(G),infGas(#SemanticCastToInt(G')))=>infGas(`_*Int_`(#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(68,15,68,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `Cgascap(_,_,_,_)_GAS-FEES_Gas_Schedule_Gas_Gas_Int`(#SemanticCastToSchedule(SCHED),infGas(#SemanticCastToInt(GCAP)),infGas(#SemanticCastToInt(GAVAIL)),#SemanticCastToInt(GEXTRA))=>infGas(`Cgascap(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(GCAP),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(GEXTRA))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(87,10,87,104)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `Cgascap(_,_,_,_)_GAS-FEES_Gas_Schedule_Gas_Gas_Int`(#SemanticCastToSchedule(SCHED),infGas(#SemanticCastToInt(GCAP)),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(GEXTRA))=>infGas(`Cgascap(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(GCAP),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(GEXTRA))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(88,10,88,104)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `Cgascap(_,_,_,_)_GAS-FEES_Gas_Schedule_Gas_Gas_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(GCAP),infGas(#SemanticCastToInt(GAVAIL)),#SemanticCastToInt(GEXTRA))=>infGas(`Cgascap(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(GCAP),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(GEXTRA))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(89,10,89,104)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(#SemanticCastToBool(B),infGas(#SemanticCastToInt(G)),infGas(#SemanticCastToInt(G')))=>infGas(`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(#SemanticCastToBool(B),#SemanticCastToInt(G),#SemanticCastToInt(G'))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(91,10,91,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `#allBut64th(_)_GAS-FEES_Gas_Gas`(infGas(#SemanticCastToInt(G)))=>infGas(`#allBut64th(_)_GAS-FEES_Int_Int`(#SemanticCastToInt(G))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(86,10,86,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/gas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module INT [digest(���M�C("<�~Y����˿�K3 <=*�`7), org.kframework.attributes.Location(Location(1409,1,1436,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports K-EQUAL
  imports INT-SYMBOLIC
  imports INT-KORE
  imports INT-COMMON
  imports BOOL
  syntax Int ::= "freshInt" "(" Int ")" [freshGenerator, function, klabel(freshInt), private, total]
  rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(#SemanticCastToInt(I),#SemanticCastToInt(IDX),#SemanticCastToInt(LEN))=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(#SemanticCastToInt(I),#SemanticCastToInt(IDX),#SemanticCastToInt(LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(#SemanticCastToInt(LEN),#token("1","Int")))),`_<<Int_`(#token("1","Int"),#SemanticCastToInt(LEN))),`_<<Int_`(#token("1","Int"),`_-Int_`(#SemanticCastToInt(LEN),#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1418,8,1418,164)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>#SemanticCastToInt(I2) requires `_>=Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1429,8,1429,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>#SemanticCastToInt(I1) requires `_<=Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1428,8,1428,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `freshInt(_)_INT_Int_Int`(#SemanticCastToInt(I))=>#SemanticCastToInt(I) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1435,8,1435,28)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(#SemanticCastToInt(I),#SemanticCastToInt(IDX),#SemanticCastToInt(LEN))=>`_modInt_`(`_>>Int_`(#SemanticCastToInt(I),#SemanticCastToInt(IDX)),`_<<Int_`(#token("1","Int"),#SemanticCastToInt(LEN))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1416,8,1416,85)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_modInt_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_%Int_`(`_+Int_`(`_%Int_`(#SemanticCastToInt(I1),`absInt(_)_INT-COMMON_Int_Int`(#SemanticCastToInt(I2))),`absInt(_)_INT-COMMON_Int_Int`(#SemanticCastToInt(I2))),`absInt(_)_INT-COMMON_Int_Int`(#SemanticCastToInt(I2))) requires `_=/=Int_`(#SemanticCastToInt(I2),#token("0","Int")) ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(1423,5,1426,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_dividesInt__INT-COMMON_Bool_Int_Int`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_==Int_`(`_%Int_`(#SemanticCastToInt(I2),#SemanticCastToInt(I1)),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1432,8,1432,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_divInt_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_/Int_`(`_-Int_`(#SemanticCastToInt(I1),`_modInt_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))),#SemanticCastToInt(I2)) requires `_=/=Int_`(#SemanticCastToInt(I2),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1420,8,1421,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_=/=Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`notBool_`(`_==Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1431,8,1431,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module INT-COMMON [digest(��d�����8�<_@����6����nj), org.kframework.attributes.Location(Location(1198,1,1341,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports INT-SYNTAX
  imports BOOL
  syntax priority ~Int_ > _^Int_ _^%Int__ > _divInt_ _%Int_ _/Int_ _*Int_ _modInt_ > _+Int_ _-Int_ > _>>Int_ _<<Int_ > _&Int_ > _xorInt_ > _|Int_
  syntax associativity left _|Int_
  syntax associativity left _xorInt_
  syntax associativity left _modInt_
  syntax associativity left _divInt_ _%Int_ _/Int_ _*Int_ _modInt_
  syntax associativity left _divInt_
  syntax associativity left _^Int_ _^%Int__
  syntax associativity left _^Int_
  syntax associativity left _^%Int__
  syntax associativity left _>>Int_ _<<Int_
  syntax associativity left _>>Int_
  syntax associativity left _<<Int_
  syntax associativity left _/Int_
  syntax associativity left _-Int_
  syntax associativity left _+Int_ _-Int_
  syntax associativity left _+Int_
  syntax associativity left _*Int_
  syntax associativity left _&Int_
  syntax associativity left _%Int_
  syntax K ::= "srandInt" "(" Int ")" [function, hook(INT.srand), impure, klabel(srandInt)]
  syntax Int ::= Int "|Int" Int [comm, function, hook(INT.or), klabel(_|Int_), latex({#1}\mathrel{|_{\scriptstyle\it Int}}{#2}), left, smtlib(orInt), symbol, total]
  syntax Int ::= Int "xorInt" Int [comm, function, hook(INT.xor), klabel(_xorInt_), latex({#1}\mathrel{\oplus_{\scriptstyle\it Int}}{#2}), left, smtlib(xorInt), symbol, total]
  syntax Int ::= Int "modInt" Int [function, hook(INT.emod), klabel(_modInt_), left, smt-hook(mod), symbol]
  syntax Int ::= Int "divInt" Int [function, hook(INT.ediv), klabel(_divInt_), left, smt-hook(div), symbol]
  syntax Int ::= Int "^Int" Int [function, hook(INT.pow), klabel(_^Int_), latex({#1}\mathrel{{\char`\^}_{\!\scriptstyle\it Int}}{#2}), left, smt-hook(^), symbol]
  syntax Int ::= Int "^%Int" Int Int [function, hook(INT.powmod), klabel(_^%Int__), left, smt-hook((mod (^ #1 #2) #3)), symbol]
  syntax Int ::= Int ">>Int" Int [function, hook(INT.shr), klabel(_>>Int_), latex({#1}\mathrel{\gg_{\scriptstyle\it Int}}{#2}), left, smtlib(shrInt), symbol]
  syntax Int ::= Int "<<Int" Int [function, hook(INT.shl), klabel(_<<Int_), latex({#1}\mathrel{\ll_{\scriptstyle\it Int}}{#2}), left, smtlib(shlInt), symbol]
  syntax Int ::= Int "/Int" Int [function, hook(INT.tdiv), klabel(_/Int_), latex({#1}\mathrel{\div_{\scriptstyle\it Int}}{#2}), left, smt-hook(div), symbol]
  syntax Int ::= Int "-Int" Int [function, hook(INT.sub), klabel(_-Int_), latex({#1}\mathrel{-_{\scriptstyle\it Int}}{#2}), left, smt-hook(-), symbol, total]
  syntax Int ::= Int "+Int" Int [comm, function, hook(INT.add), klabel(_+Int_), latex({#1}\mathrel{+_{\scriptstyle\it Int}}{#2}), left, smt-hook(+), symbol, total]
  syntax Int ::= Int "*Int" Int [comm, function, hook(INT.mul), klabel(_*Int_), latex({#1}\mathrel{\ast_{\scriptstyle\it Int}}{#2}), left, smt-hook(*), symbol, total]
  syntax Int ::= Int "&Int" Int [comm, function, hook(INT.and), klabel(_&Int_), latex({#1}\mathrel{\&_{\scriptstyle\it Int}}{#2}), left, smtlib(andInt), symbol, total]
  syntax Int ::= Int "%Int" Int [function, hook(INT.tmod), klabel(_%Int_), latex({#1}\mathrel{\%_{\scriptstyle\it Int}}{#2}), left, smt-hook(mod), symbol]
  syntax Int ::= "~Int" Int [function, hook(INT.not), klabel(~Int_), latex(\mathop{\sim_{\scriptstyle\it Int}}{#1}), smtlib(notInt), symbol, total]
  syntax Int ::= "signExtendBitRangeInt" "(" Int "," index:Int "," length:Int ")" [function, hook(INT.signExtendBitRange), klabel(signExtendBitRangeInt)]
  syntax Int ::= "randInt" "(" Int ")" [function, hook(INT.rand), impure, klabel(randInt)]
  syntax Int ::= "minInt" "(" Int "," Int ")" [function, hook(INT.min), smt-hook((ite (< #1 #2) #1 #2)), total]
  syntax Int ::= "maxInt" "(" Int "," Int ")" [function, hook(INT.max), smt-hook((ite (< #1 #2) #2 #1)), total]
  syntax Int ::= "log2Int" "(" Int ")" [function, hook(INT.log2), klabel(log2Int)]
  syntax Int ::= "bitRangeInt" "(" Int "," index:Int "," length:Int ")" [function, hook(INT.bitRange), klabel(bitRangeInt)]
  syntax Int ::= "absInt" "(" Int ")" [function, hook(INT.abs), klabel(absInt), smt-hook((ite (< #1 0) (- 0 #1) #1)), total]
  syntax Bool ::= Int "dividesInt" Int [function]
  syntax Bool ::= Int ">Int" Int [function, hook(INT.gt), klabel(_>Int_), latex({#1}\mathrel{>_{\scriptstyle\it Int}}{#2}), smt-hook(>), symbol, total]
  syntax Bool ::= Int ">=Int" Int [function, hook(INT.ge), klabel(_>=Int_), latex({#1}\mathrel{\geq_{\scriptstyle\it Int}}{#2}), smt-hook(>=), symbol, total]
  syntax Bool ::= Int "==Int" Int [comm, function, hook(INT.eq), klabel(_==Int_), latex({#1}\mathrel{{=}{=}_{\scriptstyle\it Int}}{#2}), smt-hook(=), symbol, total]
  syntax Bool ::= Int "=/=Int" Int [comm, function, hook(INT.ne), klabel(_=/=Int_), latex({#1}\mathrel{{=}{/}{=}_{\scriptstyle\it Int}}{#2}), smt-hook(distinct), symbol, total]
  syntax Bool ::= Int "<Int" Int [function, hook(INT.lt), klabel(_<Int_), latex({#1}\mathrel{<_{\scriptstyle\it Int}}{#2}), smt-hook(<), symbol, total]
  syntax Bool ::= Int "<=Int" Int [function, hook(INT.le), klabel(_<=Int_), latex({#1}\mathrel{\leq_{\scriptstyle\it Int}}{#2}), smt-hook(<=), symbol, total]
endmodule


module INT-KORE [digest(B9��G¦lN���6��8u�H��Y0�>), kore, org.kframework.attributes.Location(Location(1392,1,1407,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), symbolic]
  imports K-EQUAL
  imports INT-COMMON
  imports BOOL
  rule `_==K_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_==Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1397,8,1397,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(`_==Int_`(#SemanticCastToInt(K1),#SemanticCastToInt(K2)),#token("true","Bool"))=>#Equals(#SemanticCastToInt(K1),#SemanticCastToInt(K2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1398,8,1398,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(`_==Int_`(#SemanticCastToInt(K1),#SemanticCastToInt(K2)),#token("false","Bool"))=>#Not(#Equals(#SemanticCastToInt(K1),#SemanticCastToInt(K2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1400,8,1400,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(`_=/=Int_`(#SemanticCastToInt(K1),#SemanticCastToInt(K2)),#token("true","Bool"))=>#Not(#Equals(#SemanticCastToInt(K1),#SemanticCastToInt(K2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1402,8,1402,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(`_=/=Int_`(#SemanticCastToInt(K1),#SemanticCastToInt(K2)),#token("false","Bool"))=>#Equals(#SemanticCastToInt(K1),#SemanticCastToInt(K2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1404,8,1404,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(#token("true","Bool"),`_==Int_`(#SemanticCastToInt(K1),#SemanticCastToInt(K2)))=>#Equals(#SemanticCastToInt(K1),#SemanticCastToInt(K2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1399,8,1399,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(#token("true","Bool"),`_=/=Int_`(#SemanticCastToInt(K1),#SemanticCastToInt(K2)))=>#Not(#Equals(#SemanticCastToInt(K1),#SemanticCastToInt(K2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1403,8,1403,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(#token("false","Bool"),`_==Int_`(#SemanticCastToInt(K1),#SemanticCastToInt(K2)))=>#Not(#Equals(#SemanticCastToInt(K1),#SemanticCastToInt(K2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1401,8,1401,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(#token("false","Bool"),`_=/=Int_`(#SemanticCastToInt(K1),#SemanticCastToInt(K2)))=>#Equals(#SemanticCastToInt(K1),#SemanticCastToInt(K2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1405,8,1405,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
endmodule


module INT-SIMPLIFICATION [digest(�����w�rnL�_s����Γ���t���?��), org.kframework.attributes.Location(Location(3,1,5,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k))]
  imports INT-SIMPLIFICATION-HASKELL
endmodule


module INT-SIMPLIFICATION-COMMON [digest(���oZM�쟻1|���:QX{
:p4�$+�), org.kframework.attributes.Location(Location(48,1,204,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k))]
  imports INT
  imports EVM-TYPES
  imports BOOL
  rule `notBool_`(`_<Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)))=>`_<=Int_`(#SemanticCastToInt(B),#SemanticCastToInt(A)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(158,10,158,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `notBool_`(`_<=Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)))=>`_<Int_`(#SemanticCastToInt(B),#SemanticCastToInt(A)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(159,10,159,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),`_+Int_`(#SemanticCastToInt(C),#SemanticCastToInt(B)))=>`_+Int_`(`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(A),#SemanticCastToInt(C)),#SemanticCastToInt(B)) requires #token("true","Bool") ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.minInt-factor-right), org.kframework.attributes.Location(Location(131,33,131,104)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)))=>`_+Int_`(#SemanticCastToInt(A),`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(B),#SemanticCastToInt(C))) requires #token("true","Bool") ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.minInt-factor-left), org.kframework.attributes.Location(Location(130,33,130,104)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(A),#SemanticCastToInt(B))=>#SemanticCastToInt(B) requires `_<=Int_`(#SemanticCastToInt(B),#SemanticCastToInt(A)) ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.minint-right), org.kframework.attributes.Location(Location(123,26,123,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(A),#SemanticCastToInt(B))=>#SemanticCastToInt(A) requires `_<=Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)) ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.minint-left), org.kframework.attributes.Location(Location(122,26,122,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `maxInt(_,_)_INT-COMMON_Int_Int_Int`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),`_+Int_`(#SemanticCastToInt(C),#SemanticCastToInt(B)))=>`_+Int_`(`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(A),#SemanticCastToInt(C)),#SemanticCastToInt(B)) requires #token("true","Bool") ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.maxInt-factor-right), org.kframework.attributes.Location(Location(142,33,142,104)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `maxInt(_,_)_INT-COMMON_Int_Int_Int`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)))=>`_+Int_`(#SemanticCastToInt(A),`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(B),#SemanticCastToInt(C))) requires #token("true","Bool") ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.maxInt-factor-left), org.kframework.attributes.Location(Location(141,33,141,104)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `maxInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(A),#SemanticCastToInt(B))=>#SemanticCastToInt(B) requires `_<=Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)) ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.maxint-left), org.kframework.attributes.Location(Location(133,26,133,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `maxInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(A),#SemanticCastToInt(B))=>#SemanticCastToInt(A) requires `_<=Int_`(#SemanticCastToInt(B),#SemanticCastToInt(A)) ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.maxint-right), org.kframework.attributes.Location(Location(134,26,134,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_modInt_`(#SemanticCastToInt(A),#SemanticCastToInt(B))=>#SemanticCastToInt(A) requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(A)),`_<Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(116,10,116,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_>Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B))=>`_<Int_`(#SemanticCastToInt(B),#SemanticCastToInt(A)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(156,19,156,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_>=Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B))=>`_<=Int_`(#SemanticCastToInt(B),#SemanticCastToInt(A)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(157,19,157,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_==Int_`(#SemanticCastToInt(X),`_*Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Y)))=>`_==Int_`(`_modInt_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#token("0","Int")) requires `_<Int_`(#token("0","Int"),#SemanticCastToInt(Y)) ensures #token("true","Bool") [comm, label(INT-SIMPLIFICATION-COMMON.upInt-ref-eq), org.kframework.attributes.Location(Location(195,7,196,24)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_=/=Int_`(#SemanticCastToInt(X),`_*Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Y)))=>`_=/=Int_`(`_modInt_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#token("0","Int")) requires `_<Int_`(#token("0","Int"),#SemanticCastToInt(Y)) ensures #token("true","Bool") [comm, label(INT-SIMPLIFICATION-COMMON.upInt-refl-neq), org.kframework.attributes.Location(Location(200,7,201,24)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C))=>`_orBool_`(`_<Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),`_<Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C))) requires #token("true","Bool") ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.minint-lt), org.kframework.attributes.Location(Location(125,24,125,75)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<Int_`(`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C))=>`_andBool_`(`_<Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),`_<Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C))) requires #token("true","Bool") ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.maxint-lt), org.kframework.attributes.Location(Location(136,24,136,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(B))=>#token("false","Bool") requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(A)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(149,10,149,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(A))=>#token("false","Bool") requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(B)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(148,10,148,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(`_*Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Y)),#SemanticCastToInt(Z))=>#token("true","Bool") requires `_andBool_`(`_<=Int_`(`_+Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Z)),`_<Int_`(#token("0","Int"),#SemanticCastToInt(Y))) ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.upInt-lt-true), org.kframework.attributes.Location(Location(170,7,171,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(`_*Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Y)),#SemanticCastToInt(Z))=>#token("false","Bool") requires `_andBool_`(`_<=Int_`(#SemanticCastToInt(Z),#SemanticCastToInt(X)),`_<Int_`(#token("0","Int"),#SemanticCastToInt(Y))) ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.upInt-lt-false), org.kframework.attributes.Location(Location(175,7,176,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(#token("0","Int"),`_<<Int_`(#token("1","Int"),#SemanticCastToInt(A)))=>#token("true","Bool") requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(A)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(153,10,153,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(#SemanticCastToInt(X),`_*Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Y)))=>`_=/=Int_`(`_modInt_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#token("0","Int")) requires `_<Int_`(#token("0","Int"),#SemanticCastToInt(Y)) ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.upInt-refl-gt), org.kframework.attributes.Location(Location(185,7,186,24)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(#SemanticCastToInt(A),`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(B),#SemanticCastToInt(C)))=>`_andBool_`(`_<Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),`_<Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C))) requires #token("true","Bool") ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.minint-gt), org.kframework.attributes.Location(Location(127,24,127,75)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<Int_`(#SemanticCastToInt(A),`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(B),#SemanticCastToInt(C)))=>`_orBool_`(`_<Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),`_<Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C))) requires #token("true","Bool") ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.maxint-gt), org.kframework.attributes.Location(Location(138,24,138,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<Int_`(#SemanticCastToInt(A),`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)))=>#token("false","Bool") requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(B)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(151,10,151,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C))=>`_orBool_`(`_<=Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),`_<=Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C))) requires #token("true","Bool") ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.minint-leq), org.kframework.attributes.Location(Location(126,24,126,75)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<=Int_`(`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C))=>`_andBool_`(`_<=Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),`_<=Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C))) requires #token("true","Bool") ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.maxint-leq), org.kframework.attributes.Location(Location(137,24,137,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<=Int_`(`_/Int_`(`_*Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C)),#SemanticCastToInt(D))=>#token("true","Bool") requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(A)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(B))),`_<Int_`(#token("0","Int"),#SemanticCastToInt(C))),`_<=Int_`(#SemanticCastToInt(A),#SemanticCastToInt(D))),`_<=Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(110,10,110,133)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(`_+Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C)),#SemanticCastToInt(D))=>#token("false","Bool") requires `_andBool_`(`_<Int_`(#SemanticCastToInt(D),`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(C))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(163,10,163,85)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(`_*Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Y)),#SemanticCastToInt(X))=>`_==Int_`(`_modInt_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#token("0","Int")) requires `_<Int_`(#token("0","Int"),#SemanticCastToInt(Y)) ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.upInt-refl-leq), org.kframework.attributes.Location(Location(180,7,181,24)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`_*Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)))=>#token("true","Bool") requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(A)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(B))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(161,10,161,71)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(#SemanticCastToInt(X),`_*Int_`(`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(Y)))=>#token("true","Bool") requires `_<Int_`(#token("0","Int"),#SemanticCastToInt(Y)) ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.upInt-refl-geq), org.kframework.attributes.Location(Location(190,7,191,24)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(#SemanticCastToInt(A),`minInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(B),#SemanticCastToInt(C)))=>`_andBool_`(`_<=Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),`_<=Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C))) requires #token("true","Bool") ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.minint-geq), org.kframework.attributes.Location(Location(128,24,128,75)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<=Int_`(#SemanticCastToInt(A),`maxInt(_,_)_INT-COMMON_Int_Int_Int`(#SemanticCastToInt(B),#SemanticCastToInt(C)))=>`_orBool_`(`_<=Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),`_<=Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C))) requires #token("true","Bool") ensures #token("true","Bool") [label(INT-SIMPLIFICATION-COMMON.maxint-geq), org.kframework.attributes.Location(Location(139,24,139,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_/Int_`(`_/Int_`(`_*Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C)),#SemanticCastToInt(B))=>`_/Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)) requires `_=/=Int_`(#SemanticCastToInt(B),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(106,10,106,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_/Int_`(`_*Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(A))=>#SemanticCastToInt(B) requires `_=/=Int_`(#SemanticCastToInt(A),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(104,10,104,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_/Int_`(#SemanticCastToInt(A),#token("1","Int"))=>#SemanticCastToInt(A) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(101,10,101,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_-Int_`(`_+Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C)),`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(D)))=>`_+Int_`(#SemanticCastToInt(B),`_-Int_`(#SemanticCastToInt(C),#SemanticCastToInt(D))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(79,12,79,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_-Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),`_+Int_`(#SemanticCastToInt(C),#SemanticCastToInt(A)))=>`_-Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(73,11,73,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_-Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)))=>`_-Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(72,11,72,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_-Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(A))=>#SemanticCastToInt(B) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(67,11,67,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_-Int_`(`_*Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),`_*Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C)))=>`_*Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(93,10,93,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_-Int_`(#SemanticCastToInt(A),`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)))=>#SemanticCastToInt(B) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(65,12,65,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_-Int_`(#SemanticCastToInt(A),#token("0","Int"))=>#SemanticCastToInt(A) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(59,10,59,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(A))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(58,10,58,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_+Int_`(`_-Int_`(`_-Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C)),#SemanticCastToInt(D)),#SemanticCastToInt(B))=>`_-Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),#SemanticCastToInt(D)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(81,10,81,71)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_+Int_`(`_-Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C)),#SemanticCastToInt(B))=>`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(75,10,75,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_+Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(B))=>#SemanticCastToInt(A) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(64,11,64,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_+Int_`(`_+Int_`(`_+Int_`(`_+Int_`(`_*Int_`(#SemanticCastToInt(E),#SemanticCastToInt(A)),#SemanticCastToInt(B)),#SemanticCastToInt(C)),#SemanticCastToInt(D)),`_*Int_`(#SemanticCastToInt(F),#SemanticCastToInt(A)))=>`_+Int_`(`_+Int_`(`_+Int_`(`_*Int_`(`_+Int_`(#SemanticCastToInt(E),#SemanticCastToInt(F)),#SemanticCastToInt(A)),#SemanticCastToInt(B)),#SemanticCastToInt(C)),#SemanticCastToInt(D)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(95,10,95,101)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_+Int_`(`_+Int_`(#SemanticCastToInt(C),`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(D))),`_-Int_`(#SemanticCastToInt(B),#SemanticCastToInt(A)))=>`_+Int_`(#SemanticCastToInt(C),`_-Int_`(#SemanticCastToInt(B),#SemanticCastToInt(D))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(80,12,80,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_+Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),`_-Int_`(#SemanticCastToInt(C),#SemanticCastToInt(B)))=>`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(74,11,74,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_+Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),`_-Int_`(#SemanticCastToInt(C),#SemanticCastToInt(A)))=>`_+Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(71,11,71,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_+Int_`(`_*Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),`_*Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C)))=>`_*Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(92,10,92,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_+Int_`(#token("0","Int"),#SemanticCastToInt(A))=>#SemanticCastToInt(A) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(60,10,60,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_+Int_`(#SemanticCastToInt(A),`_-Int_`(#SemanticCastToInt(B),#SemanticCastToInt(A)))=>#SemanticCastToInt(B) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(66,12,66,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_+Int_`(#SemanticCastToInt(A),#token("0","Int"))=>#SemanticCastToInt(A) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(61,10,61,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_*Int_`(`_/Int_`(#SemanticCastToInt(A),#token("32","Int")),#token("32","Int"))=>#SemanticCastToInt(A) requires `_==Int_`(`_modInt_`(#SemanticCastToInt(A),#token("32","Int")),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(108,10,108,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_*Int_`(#token("1","Int"),#SemanticCastToInt(A))=>#SemanticCastToInt(A) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(87,10,87,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_*Int_`(#token("0","Int"),#SemanticCastToInt(_))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(89,10,89,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_*Int_`(#SemanticCastToInt(_),#token("0","Int"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(90,10,90,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_*Int_`(#SemanticCastToInt(A),#token("1","Int"))=>#SemanticCastToInt(A) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(88,10,88,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
endmodule


module INT-SIMPLIFICATION-HASKELL [digest(aZp�Gʋ�J) o�\�h��BM.`�o+�), kore, org.kframework.attributes.Location(Location(7,1,46,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), symbolic]
  imports INT-SIMPLIFICATION-COMMON
  rule `_<Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C))=>`_<Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),#SemanticCastToInt(B)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(A, C), org.kframework.attributes.Location(Location(43,10,43,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40)]
  rule `_<Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C))=>`_<Int_`(#SemanticCastToInt(A),`_-Int_`(#SemanticCastToInt(C),#SemanticCastToInt(B))) requires #token("true","Bool") ensures #token("true","Bool") [concrete(B), org.kframework.attributes.Location(Location(40,10,40,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40)]
  rule `_<Int_`(#SemanticCastToInt(A),`_+Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C)))=>`_<Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),#SemanticCastToInt(B)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(A, C), org.kframework.attributes.Location(Location(41,10,41,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40)]
  rule `_<=Int_`(#SemanticCastToInt(A),`_-Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C)))=>`_<=Int_`(#SemanticCastToInt(C),`_-Int_`(#SemanticCastToInt(B),#SemanticCastToInt(A))) requires #token("true","Bool") ensures #token("true","Bool") [concrete(A, B), org.kframework.attributes.Location(Location(44,10,44,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40)]
  rule `_<=Int_`(#SemanticCastToInt(A),`_+Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C)))=>`_<=Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),#SemanticCastToInt(B)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(A, C), org.kframework.attributes.Location(Location(42,10,42,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40)]
  rule `_-Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C))=>`_-Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),#SemanticCastToInt(B)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(B), org.kframework.attributes.Location(Location(29,10,29,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(C)]
  rule `_-Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C))=>`_-Int_`(#SemanticCastToInt(A),`_+Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C))) requires #token("true","Bool") ensures #token("true","Bool") [concrete(B, C), org.kframework.attributes.Location(Location(34,10,34,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(A)]
  rule `_-Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C))=>`_+Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),#SemanticCastToInt(B)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(B), org.kframework.attributes.Location(Location(27,10,27,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(C)]
  rule `_-Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C))=>`_+Int_`(#SemanticCastToInt(A),`_-Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C))) requires #token("true","Bool") ensures #token("true","Bool") [concrete(B, C), org.kframework.attributes.Location(Location(32,10,32,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(A)]
  rule `_-Int_`(#SemanticCastToInt(A),`_-Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C)))=>`_-Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),#SemanticCastToInt(B)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(B), org.kframework.attributes.Location(Location(24,10,24,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(A, C)]
  rule `_-Int_`(#SemanticCastToInt(A),`_-Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C)))=>`_+Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(21,10,21,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(A, B)]
  rule `_-Int_`(#SemanticCastToInt(A),`_+Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C)))=>`_-Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(20,10,20,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(A, B)]
  rule `_+Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C))=>`_-Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),#SemanticCastToInt(B)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(B), org.kframework.attributes.Location(Location(28,10,28,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(C)]
  rule `_+Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C))=>`_+Int_`(#SemanticCastToInt(A),`_-Int_`(#SemanticCastToInt(C),#SemanticCastToInt(B))) requires #token("true","Bool") ensures #token("true","Bool") [concrete(B, C), org.kframework.attributes.Location(Location(33,10,33,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(A)]
  rule `_+Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C))=>`_+Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),#SemanticCastToInt(B)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(B), org.kframework.attributes.Location(Location(26,10,26,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(C)]
  rule `_+Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C))=>`_+Int_`(#SemanticCastToInt(A),`_+Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C))) requires #token("true","Bool") ensures #token("true","Bool") [concrete(B, C), org.kframework.attributes.Location(Location(31,10,31,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(A)]
  rule `_+Int_`(#SemanticCastToInt(A),`_-Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C)))=>`_-Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(19,10,19,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(A, B)]
  rule `_+Int_`(#SemanticCastToInt(A),`_-Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C)))=>`_+Int_`(`_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(C)),#SemanticCastToInt(B)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(B), org.kframework.attributes.Location(Location(23,10,23,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(A, C)]
  rule `_+Int_`(#SemanticCastToInt(A),`_+Int_`(#SemanticCastToInt(B),#SemanticCastToInt(C)))=>`_+Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(18,10,18,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(A, B)]
  rule `_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B))=>`_+Int_`(#SemanticCastToInt(B),#SemanticCastToInt(A)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(A), org.kframework.attributes.Location(Location(16,10,16,30)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/int-simplification.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(40), symbolic(B)]
endmodule


module INT-SYMBOLIC [digest(P�Qi�aqn�Π�C��)U��h��[H;�b), org.kframework.attributes.Location(Location(1343,1,1360,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), symbolic]
  imports INT-SYMBOLIC-KORE
  imports INT-COMMON
  imports BOOL
  rule `_modInt_`(#SemanticCastToInt(X),#SemanticCastToInt(N))=>#SemanticCastToInt(X) requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(X)),`_<Int_`(#SemanticCastToInt(X),#SemanticCastToInt(N))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1352,8,1352,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_>>Int_`(#token("0","Int"),#SemanticCastToInt(_))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1359,8,1359,22)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_>>Int_`(#SemanticCastToInt(X),#token("0","Int"))=>#SemanticCastToInt(X) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1358,8,1358,22)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<<Int_`(#token("0","Int"),#SemanticCastToInt(_))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1357,8,1357,22)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<<Int_`(#SemanticCastToInt(X),#token("0","Int"))=>#SemanticCastToInt(X) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1356,8,1356,22)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_-Int_`(#SemanticCastToInt(I),#token("0","Int"))=>#SemanticCastToInt(I) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1350,8,1350,21)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_+Int_`(#SemanticCastToInt(I),#token("0","Int"))=>#SemanticCastToInt(I) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1349,8,1349,21)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_%Int_`(#SemanticCastToInt(X),#SemanticCastToInt(N))=>#SemanticCastToInt(X) requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(X)),`_<Int_`(#SemanticCastToInt(X),#SemanticCastToInt(N))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1353,8,1353,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
endmodule


module INT-SYMBOLIC-KORE [digest(r�P������W�&'��3�-����:O����o), haskell, kore, org.kframework.attributes.Location(Location(1362,1,1390,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), symbolic]
  imports ML-SYNTAX
  imports INT-COMMON
  imports BOOL
  rule `_-Int_`(`_-Int_`(#SemanticCastToInt(C),#SemanticCastToInt(I2)),#SemanticCastToInt(I3))=>`_-Int_`(#SemanticCastToInt(C),`_+Int_`(#SemanticCastToInt(I2),#SemanticCastToInt(I3))) requires #token("true","Bool") ensures #token("true","Bool") [concrete(I2, I3), org.kframework.attributes.Location(Location(1386,8,1386,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  rule `_-Int_`(#SemanticCastToInt(I1),`_-Int_`(#SemanticCastToInt(I2),#SemanticCastToInt(C)))=>`_+Int_`(`_-Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(I1, I2), org.kframework.attributes.Location(Location(1385,8,1385,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  rule `_-Int_`(#SemanticCastToInt(I1),`_+Int_`(#SemanticCastToInt(I2),#SemanticCastToInt(C)))=>`_-Int_`(`_-Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(I1, I2), org.kframework.attributes.Location(Location(1384,8,1384,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  rule `_-Int_`(#SemanticCastToInt(I1),`_+Int_`(#SemanticCastToInt(B),#SemanticCastToInt(I3)))=>`_-Int_`(`_-Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I3)),#SemanticCastToInt(B)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(I1, I3), org.kframework.attributes.Location(Location(1380,8,1380,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(B)]
  rule `_-Int_`(#SemanticCastToInt(A),#SemanticCastToInt(I))=>`_+Int_`(#SemanticCastToInt(A),`_-Int_`(#token("0","Int"),#SemanticCastToInt(I))) requires #token("true","Bool") ensures #token("true","Bool") [concrete(I), org.kframework.attributes.Location(Location(1376,8,1376,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(51), symbolic(A)]
  rule `_+Int_`(`_-Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(B)),#SemanticCastToInt(I3))=>`_-Int_`(`_+Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I3)),#SemanticCastToInt(B)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(I1, I3), org.kframework.attributes.Location(Location(1383,8,1383,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(B)]
  rule `_+Int_`(`_+Int_`(#SemanticCastToInt(A),#SemanticCastToInt(I2)),#SemanticCastToInt(I3))=>`_+Int_`(#SemanticCastToInt(A),`_+Int_`(#SemanticCastToInt(I2),#SemanticCastToInt(I3))) requires #token("true","Bool") ensures #token("true","Bool") [concrete(I2, I3), org.kframework.attributes.Location(Location(1378,8,1378,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(A)]
  rule `_+Int_`(#SemanticCastToInt(I1),`_-Int_`(#SemanticCastToInt(I2),#SemanticCastToInt(C)))=>`_-Int_`(`_+Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(I1, I2), org.kframework.attributes.Location(Location(1382,8,1382,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  rule `_+Int_`(#SemanticCastToInt(I1),`_+Int_`(#SemanticCastToInt(I2),#SemanticCastToInt(C)))=>`_+Int_`(`_+Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(I1, I2), org.kframework.attributes.Location(Location(1381,8,1381,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  rule `_+Int_`(#SemanticCastToInt(I1),`_+Int_`(#SemanticCastToInt(B),#SemanticCastToInt(I3)))=>`_+Int_`(#SemanticCastToInt(B),`_+Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I3))) requires #token("true","Bool") ensures #token("true","Bool") [concrete(I1, I3), org.kframework.attributes.Location(Location(1379,8,1379,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(B)]
  rule `_+Int_`(#SemanticCastToInt(I),#SemanticCastToInt(B))=>`_+Int_`(#SemanticCastToInt(B),#SemanticCastToInt(I)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(I), org.kframework.attributes.Location(Location(1375,8,1375,28)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(51), symbolic(B)]
  rule `_&Int_`(#SemanticCastToInt(I1),`_&Int_`(#SemanticCastToInt(I2),#SemanticCastToInt(C)))=>`_&Int_`(`_&Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)),#SemanticCastToInt(C)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(I1, I2), org.kframework.attributes.Location(Location(1388,8,1388,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  rule #Ceil(`_modInt_`(#SemanticCastToInt(@I1),#SemanticCastToInt(@I2)))=>#And(#And(#Equals(`_=/=Int_`(#SemanticCastToInt(@I2),#token("0","Int")),#token("true","Bool")),#Ceil(#SemanticCastToInt(@I1))),#Ceil(#SemanticCastToInt(@I2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1370,8,1370,102)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Ceil(`_>>Int_`(#SemanticCastToInt(@I1),#SemanticCastToInt(@I2)))=>#And(#And(#Equals(`_>=Int_`(#SemanticCastToInt(@I2),#token("0","Int")),#token("true","Bool")),#Ceil(#SemanticCastToInt(@I1))),#Ceil(#SemanticCastToInt(@I2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1371,8,1371,102)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Ceil(`_<<Int_`(#SemanticCastToInt(@I1),#SemanticCastToInt(@I2)))=>#And(#And(#Equals(`_>=Int_`(#SemanticCastToInt(@I2),#token("0","Int")),#token("true","Bool")),#Ceil(#SemanticCastToInt(@I1))),#Ceil(#SemanticCastToInt(@I2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1372,8,1372,102)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Ceil(`_/Int_`(#SemanticCastToInt(@I1),#SemanticCastToInt(@I2)))=>#And(#And(#Equals(`_=/=Int_`(#SemanticCastToInt(@I2),#token("0","Int")),#token("true","Bool")),#Ceil(#SemanticCastToInt(@I1))),#Ceil(#SemanticCastToInt(@I2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1368,8,1368,102)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Ceil(`_%Int_`(#SemanticCastToInt(@I1),#SemanticCastToInt(@I2)))=>#And(#And(#Equals(`_=/=Int_`(#SemanticCastToInt(@I2),#token("0","Int")),#token("true","Bool")),#Ceil(#SemanticCastToInt(@I1))),#Ceil(#SemanticCastToInt(@I2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1369,8,1369,102)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
endmodule


module INT-SYNTAX [digest([x\��'�m��*���'���V��q���b	F�), org.kframework.attributes.Location(Location(1193,1,1196,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports UNSIGNED-INT-SYNTAX
  syntax Int ::= r"[\\+-]?[0-9]+" [prec(2), prefer, token]
endmodule


module JSON [digest(L��OD>��P�i*°ͮ���y0�g Y�), org.kframework.attributes.Location(Location(40,1,46,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/json.md))]
  imports JSON-SYNTAX
  syntax String ::= "JSON2String" "(" JSON ")" [function, hook(JSON.json2string), klabel(JSON2String)]
  syntax JSON ::= "String2JSON" "(" String ")" [function, hook(JSON.string2json), klabel(String2JSON)]
endmodule


module JSON-EXT [digest(�%3�'Z�R=U�c��T����z�p�vJMU), org.kframework.attributes.Location(Location(14,1,72,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md))]
  imports STRING
  imports JSON
  imports BOOL
  syntax JSONs ::= JSONs "+JSONs" JSONs [function]
  syntax JSONs ::= "reverseJSONsAux" "(" JSONs "," JSONs ")" [function, klabel(reverseJSONsAux)]
  syntax JSONs ::= "reverseJSONs" "(" JSONs ")" [function, klabel(reverseJSONs)]
  syntax JSONs ::= "qsortJSONs" "(" JSONs ")" [function, klabel(qsortJSONs)]
  syntax JSONs ::= "#entriesLT" "(" String "," JSONs ")" [function, klabel(#entriesLT)]
  syntax JSONs ::= "#entriesGE" "(" String "," JSONs ")" [function, klabel(#entriesGE)]
  syntax JSONKey ::= Int
  syntax Bool ::= "sortedJSONs" "(" JSONs ")" [function, klabel(sortedJSONs)]
  rule `sortedJSONs(_)_JSON-EXT_Bool_JSONs`(`JSONs`(`JSONEntry`(#SemanticCastToString(KEY),#SemanticCastToJSON(_)),`JSONs`(`JSONEntry`(#SemanticCastToString(KEY'),#SemanticCastToJSON(VAL)),#SemanticCastToJSONs(REST))))=>`_andThenBool_`(`_<=String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(KEY),#SemanticCastToString(KEY')),`sortedJSONs(_)_JSON-EXT_Bool_JSONs`(`JSONs`(`JSONEntry`(#SemanticCastToString(KEY'),#SemanticCastToJSON(VAL)),#SemanticCastToJSONs(REST)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(61,10,61,122)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `sortedJSONs(_)_JSON-EXT_Bool_JSONs`(`JSONs`(`JSONEntry`(#SemanticCastToJSONKey(_KEY),#SemanticCastToJSON(_)),`.List{"JSONs"}_JSONs`(.KList)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(60,10,60,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `sortedJSONs(_)_JSON-EXT_Bool_JSONs`(`.List{"JSONs"}_JSONs`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(59,10,59,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `reverseJSONsAux(_,_)_JSON-EXT_JSONs_JSONs_JSONs`(`JSONs`(#SemanticCastToJSON(J),#SemanticCastToJSONs(JS)),#SemanticCastToJSONs(JS'))=>`reverseJSONsAux(_,_)_JSON-EXT_JSONs_JSONs_JSONs`(#SemanticCastToJSONs(JS),`JSONs`(#SemanticCastToJSON(J),#SemanticCastToJSONs(JS'))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(35,10,35,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `reverseJSONsAux(_,_)_JSON-EXT_JSONs_JSONs_JSONs`(`.List{"JSONs"}_JSONs`(.KList),#SemanticCastToJSONs(JS'))=>#SemanticCastToJSONs(JS') requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(34,10,34,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `reverseJSONs(_)_JSON-EXT_JSONs_JSONs`(#SemanticCastToJSONs(JS))=>`reverseJSONsAux(_,_)_JSON-EXT_JSONs_JSONs_JSONs`(#SemanticCastToJSONs(JS),`.List{"JSONs"}_JSONs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(32,10,32,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `qsortJSONs(_)_JSON-EXT_JSONs_JSONs`(`JSONs`(`JSONEntry`(#SemanticCastToString(KEY),#SemanticCastToJSON(VALUE)),#SemanticCastToJSONs(REST)))=>`_+JSONs__JSON-EXT_JSONs_JSONs_JSONs`(`qsortJSONs(_)_JSON-EXT_JSONs_JSONs`(`#entriesLT(_,_)_JSON-EXT_JSONs_String_JSONs`(#SemanticCastToString(KEY),#SemanticCastToJSONs(REST))),`JSONs`(`JSONEntry`(#SemanticCastToString(KEY),#SemanticCastToJSON(VALUE)),`qsortJSONs(_)_JSON-EXT_JSONs_JSONs`(`#entriesGE(_,_)_JSON-EXT_JSONs_String_JSONs`(#SemanticCastToString(KEY),#SemanticCastToJSONs(REST))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(47,10,47,133)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `qsortJSONs(_)_JSON-EXT_JSONs_JSONs`(`.List{"JSONs"}_JSONs`(.KList))=>`.List{"JSONs"}_JSONs`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(46,10,46,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_+JSONs__JSON-EXT_JSONs_JSONs_JSONs`(`JSONs`(#SemanticCastToJSON(J),#SemanticCastToJSONs(JS)),#SemanticCastToJSONs(JS'))=>`JSONs`(#SemanticCastToJSON(J),`_+JSONs__JSON-EXT_JSONs_JSONs_JSONs`(#SemanticCastToJSONs(JS),#SemanticCastToJSONs(JS'))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(27,10,27,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_+JSONs__JSON-EXT_JSONs_JSONs_JSONs`(`.List{"JSONs"}_JSONs`(.KList),#SemanticCastToJSONs(JS'))=>#SemanticCastToJSONs(JS') requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(26,10,26,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#entriesLT(_,_)_JSON-EXT_JSONs_String_JSONs`(#SemanticCastToString(_KEY),`.List{"JSONs"}_JSONs`(.KList))=>`.List{"JSONs"}_JSONs`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(49,10,49,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#entriesLT(_,_)_JSON-EXT_JSONs_String_JSONs`(#SemanticCastToString(KEY),`JSONs`(`JSONEntry`(#SemanticCastToString(KEY'),#SemanticCastToJSON(_)),#SemanticCastToJSONs(REST)))=>`#entriesLT(_,_)_JSON-EXT_JSONs_String_JSONs`(#SemanticCastToString(KEY),#SemanticCastToJSONs(REST)) requires `notBool_`(`_<String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(KEY'),#SemanticCastToString(KEY))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(51,10,51,120)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#entriesLT(_,_)_JSON-EXT_JSONs_String_JSONs`(#SemanticCastToString(KEY),`JSONs`(`JSONEntry`(#SemanticCastToString(KEY'),#SemanticCastToJSON(VALUE)),#SemanticCastToJSONs(REST)))=>`JSONs`(`JSONEntry`(#SemanticCastToString(KEY'),#SemanticCastToJSON(VALUE)),`#entriesLT(_,_)_JSON-EXT_JSONs_String_JSONs`(#SemanticCastToString(KEY),#SemanticCastToJSONs(REST))) requires `_<String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(KEY'),#SemanticCastToString(KEY)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(50,10,50,120)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#entriesGE(_,_)_JSON-EXT_JSONs_String_JSONs`(#SemanticCastToString(_KEY),`.List{"JSONs"}_JSONs`(.KList))=>`.List{"JSONs"}_JSONs`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(53,10,53,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#entriesGE(_,_)_JSON-EXT_JSONs_String_JSONs`(#SemanticCastToString(KEY),`JSONs`(`JSONEntry`(#SemanticCastToString(KEY'),#SemanticCastToJSON(_)),#SemanticCastToJSONs(REST)))=>`#entriesGE(_,_)_JSON-EXT_JSONs_String_JSONs`(#SemanticCastToString(KEY),#SemanticCastToJSONs(REST)) requires `notBool_`(`_>=String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(KEY'),#SemanticCastToString(KEY))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(55,10,55,121)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#entriesGE(_,_)_JSON-EXT_JSONs_String_JSONs`(#SemanticCastToString(KEY),`JSONs`(`JSONEntry`(#SemanticCastToString(KEY'),#SemanticCastToJSON(VALUE)),#SemanticCastToJSONs(REST)))=>`JSONs`(`JSONEntry`(#SemanticCastToString(KEY'),#SemanticCastToJSON(VALUE)),`#entriesGE(_,_)_JSON-EXT_JSONs_String_JSONs`(#SemanticCastToString(KEY),#SemanticCastToJSONs(REST))) requires `_>=String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(KEY'),#SemanticCastToString(KEY)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(54,10,54,121)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
endmodule


module JSON-SYNTAX [digest(&�]�ut�D*&'8M�'��������Ŧ), org.kframework.attributes.Location(Location(15,1,28,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/json.md))]
  imports STRING-SYNTAX
  imports INT-SYNTAX
  imports FLOAT-SYNTAX
  imports BOOL-SYNTAX
  syntax JSONs ::= JSON "," JSONs [klabel(JSONs), symbol, userList(*)]
  syntax JSONs ::= ".JSONs" [klabel(.List{"JSONs"}), symbol, userList(*)]
  syntax JSONKey ::= String
  syntax JSON ::= String
  syntax JSON ::= JSONKey ":" JSON [klabel(JSONEntry), symbol]
  syntax JSON ::= Int
  syntax JSON ::= Float
  syntax JSON ::= Bool
  syntax JSON ::= "{" JSONs "}" [klabel(JSONObject), symbol]
  syntax JSON ::= "null" [klabel(JSONnull), symbol]
  syntax JSON ::= "[" JSONs "]" [klabel(JSONList), symbol]
endmodule


module K [digest(�m$1��db0S��M���MH��n*F�/), org.kframework.attributes.Location(Location(459,1,489,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports SORT-PREDICATES
  imports REQUIRES-ENSURES
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports KREWRITE
  imports K-SORT-LATTICE
  imports AUTO-FOLLOW
  imports AUTO-CASTS
  syntax {Sort} Sort ::= Sort "#as" Sort [klabel(#KAs), symbol]
  syntax {Sort} Sort ::= "#fun" "(" Sort ")" "(" Sort ")" [klabel(#fun2), prefer, symbol]
  syntax {Sort1, Sort2} Sort1 ::= "#let" Sort2 "=" Sort2 "#in" Sort1 [klabel(#let), symbol]
  syntax {Sort1, Sort2} Sort1 ::= "#fun" "(" Sort2 "=>" Sort1 ")" "(" Sort2 ")" [klabel(#fun3), symbol]
  syntax associativity left _:=K_ _:/=K_
  syntax Bool ::= K ":=K" K [equalEqualK, function, klabel(_:=K_), symbol, total]
  syntax Bool ::= K ":/=K" K [function, klabel(_:/=K_), notEqualEqualK, symbol, total]
endmodule


module K-AMBIGUITIES [digest(������	)��M�C�|f�A7��<d_��3), org.kframework.attributes.Location(Location(554,1,558,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  syntax {Sort} Sort ::= "amb" "(" Sort "," Sort ")" [klabel(amb), symbol]
endmodule


module K-BOTTOM-SORT [digest(�=�� �po�Ff�V|����t��m4��F�), org.kframework.attributes.Location(Location(374,1,378,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports SORT-KBOTT
  syntax {Sort} Sort ::= KBott
  syntax KItem ::= KBott
endmodule


module K-EQUAL [digest(D�*E{���(dq�n<�d��q����_��), org.kframework.attributes.Location(Location(2284,1,2294,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports K-EQUAL-SYNTAX
  imports K-EQUAL-KORE
  imports BOOL
  rule `_=/=K_`(#SemanticCastToK(K1),#SemanticCastToK(K2))=>`notBool_`(`_==K_`(#SemanticCastToK(K1),#SemanticCastToK(K2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2289,8,2289,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(#SemanticCastToBool(C),#SemanticCastToK(_),#SemanticCastToK(B2))=>#SemanticCastToK(B2) requires `notBool_`(#SemanticCastToBool(C)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2292,8,2292,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(#SemanticCastToBool(C),#SemanticCastToK(B1),#SemanticCastToK(_))=>#SemanticCastToK(B1) requires #SemanticCastToBool(C) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2291,8,2291,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
endmodule


module K-EQUAL-KORE [digest(da���~�K��Cgˠ��{"i�*:��������), kore, org.kframework.attributes.Location(Location(2268,1,2282,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), symbolic]
  imports K-EQUAL-SYNTAX
  imports BOOL
  rule `_==K_`(#SemanticCastToBool(K1),#SemanticCastToBool(K2))=>`_==Bool_`(#SemanticCastToBool(K1),#SemanticCastToBool(K2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2272,8,2272,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(`_==K_`(#SemanticCastToK(K1),#SemanticCastToK(K2)),#token("true","Bool"))=>#Equals(#SemanticCastToK(K1),#SemanticCastToK(K2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2273,8,2273,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(`_==K_`(#SemanticCastToK(K1),#SemanticCastToK(K2)),#token("false","Bool"))=>#Not(#Equals(#SemanticCastToK(K1),#SemanticCastToK(K2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2275,8,2275,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(`_=/=K_`(#SemanticCastToK(K1),#SemanticCastToK(K2)),#token("true","Bool"))=>#Not(#Equals(#SemanticCastToK(K1),#SemanticCastToK(K2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2277,8,2277,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(`_=/=K_`(#SemanticCastToK(K1),#SemanticCastToK(K2)),#token("false","Bool"))=>#Equals(#SemanticCastToK(K1),#SemanticCastToK(K2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2279,8,2279,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(#token("true","Bool"),`_==K_`(#SemanticCastToK(K1),#SemanticCastToK(K2)))=>#Equals(#SemanticCastToK(K1),#SemanticCastToK(K2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2274,8,2274,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(#token("true","Bool"),`_=/=K_`(#SemanticCastToK(K1),#SemanticCastToK(K2)))=>#Not(#Equals(#SemanticCastToK(K1),#SemanticCastToK(K2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2278,8,2278,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(#token("false","Bool"),`_==K_`(#SemanticCastToK(K1),#SemanticCastToK(K2)))=>#Not(#Equals(#SemanticCastToK(K1),#SemanticCastToK(K2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2276,8,2276,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(#token("false","Bool"),`_=/=K_`(#SemanticCastToK(K1),#SemanticCastToK(K2)))=>#Equals(#SemanticCastToK(K1),#SemanticCastToK(K2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2280,8,2280,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
endmodule


module K-EQUAL-SYNTAX [digest(>�=�{�>�r-���g��2�:�  ���!<�), org.kframework.attributes.Location(Location(2254,1,2266,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports BOOL
  imports BASIC-K
  syntax {Sort} Sort ::= "#if" Bool "#then" Sort "#else" Sort "#fi" [function, hook(KEQUAL.ite), smt-hook(ite), total]
  syntax priority _:=K_ _=/=K_ _:/=K_ _==K_ > weakAlwaysFinally #And _orElseBool_ weakExistsFinally _orBool_ #Implies _andThenBool_ _impliesBool_ #Floor #Exists #Ceil _andBool_ #Forall #Not #Or notBool_ #AG #Equals _xorBool_
  syntax associativity left _=/=K_ _==K_
  syntax Bool ::= K "==K" K [comm, equalEqualK, function, hook(KEQUAL.eq), klabel(_==K_), latex({#1}\mathrel{=_K}{#2}), smt-hook(=), symbol, total]
  syntax Bool ::= K "=/=K" K [comm, function, hook(KEQUAL.ne), klabel(_=/=K_), latex({#1}\mathrel{\neq_K}{#2}), notEqualEqualK, smt-hook(distinct), symbol, total]
endmodule


module K-IO [digest(�<�]u<�/�pK�3j�٭S.q����J), org.kframework.attributes.Location(Location(2358,1,2647,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports STRING
  imports LIST
  imports INT
  syntax Stream ::= "#parseInput" "(" String "," String ")" [klabel(#parseInput)]
  syntax Stream ::= "#ostream" "(" Int ")" [klabel(#ostream)]
  syntax Stream ::= "#istream" "(" Int ")" [klabel(#istream)]
  syntax Stream ::= "#buffer" "(" K ")" [klabel(#buffer)]
  syntax KItem ::= "#systemResult" "(" Int "," String "," String ")" [klabel(#systemResult), symbol]
  syntax KItem ::= "#system" "(" String ")" [function, hook(IO.system), impure, klabel(#system)]
  syntax K ::= "#write" "(" fd:Int "," value:String ")" [function, hook(IO.write), impure]
  syntax K ::= "#unlock" "(" fd:Int "," endIndex:Int ")" [function, hook(IO.unlock), impure]
  syntax K ::= "#traceK" "(" value:K ")" [function, hook(IO.traceTerm), impure, klabel(#traceK), returnsUnit, symbol, total]
  syntax K ::= "#trace" "(" value:KItem ")" [function, hook(IO.traceTerm), impure, klabel(#trace), returnsUnit, symbol, total]
  syntax K ::= "#shutdownWrite" "(" fd:Int ")" [function, hook(IO.shutdownWrite), impure]
  syntax K ::= "#seekEnd" "(" fd:Int "," fromEnd:Int ")" [function, hook(IO.seekEnd), impure]
  syntax K ::= "#seek" "(" fd:Int "," index:Int ")" [function, hook(IO.seek), impure]
  syntax K ::= "#remove" "(" path:String ")" [function, hook(IO.remove), impure, klabel(#remove), total]
  syntax K ::= "#putc" "(" fd:Int "," value:Int ")" [function, hook(IO.putc), impure]
  syntax K ::= "#logToFile" "(" name:String "," value:String ")" [function, hook(IO.log), impure, klabel(#logToFile), returnsUnit, symbol, total]
  syntax K ::= "#log" "(" value:String ")" [function, hook(IO.logString), impure, klabel(#log), returnsUnit, symbol, total]
  syntax K ::= "#lock" "(" fd:Int "," endIndex:Int ")" [function, hook(IO.lock), impure]
  syntax K ::= "#close" "(" fd:Int ")" [function, hook(IO.close), impure]
  syntax Int ::= "#time" "(" ")" [function, hook(IO.time), impure]
  syntax Int ::= "#stdout" [function, total]
  syntax Int ::= "#stdin" [function, total]
  syntax Int ::= "#stderr" [function, total]
  syntax IOString ::= String
  syntax IOString ::= IOError
  syntax IOString ::= "#read" "(" fd:Int "," length:Int ")" [function, hook(IO.read), impure]
  syntax IOInt ::= Int
  syntax IOInt ::= IOError
  syntax IOInt ::= "#tell" "(" fd:Int ")" [function, hook(IO.tell), impure]
  syntax IOInt ::= "#open" "(" path:String "," mode:String ")" [function, hook(IO.open), impure]
  syntax IOInt ::= "#open" "(" path:String ")" [function]
  syntax IOInt ::= "#getc" "(" fd:Int ")" [function, hook(IO.getc), impure]
  syntax IOInt ::= "#accept" "(" fd:Int ")" [function, hook(IO.accept), impure]
  syntax IOFile ::= IOError
  syntax IOFile ::= "#tempFile" "(" path:String "," fd:Int ")" [klabel(#tempFile), symbol]
  syntax IOFile ::= "#mkstemp" "(" template:String ")" [function, hook(IO.mkstemp), impure, klabel(#mkstemp)]
  syntax IOError ::= "#unknownIOError" "(" errno:Int ")" [klabel(#unknownIOError), symbol]
  syntax IOError ::= "#EXDEV" [klabel(#EXDEV), symbol]
  syntax IOError ::= "#EWOULDBLOCK" [klabel(#EWOULDBLOCK), symbol]
  syntax IOError ::= "#ETOOMANYREFS" [klabel(#ETOOMANYREFS), symbol]
  syntax IOError ::= "#ETIMEDOUT" [klabel(#ETIMEDOUT), symbol]
  syntax IOError ::= "#ESRCH" [klabel(#ESRCH), symbol]
  syntax IOError ::= "#ESPIPE" [klabel(#ESPIPE), symbol]
  syntax IOError ::= "#ESOCKTNOSUPPORT" [klabel(#ESOCKTNOSUPPORT), symbol]
  syntax IOError ::= "#ESHUTDOWN" [klabel(#ESHUTDOWN), symbol]
  syntax IOError ::= "#EROFS" [klabel(#EROFS), symbol]
  syntax IOError ::= "#ERANGE" [klabel(#ERANGE), symbol]
  syntax IOError ::= "#EPROTOTYPE" [klabel(#EPROTOTYPE), symbol]
  syntax IOError ::= "#EPROTONOSUPPORT" [klabel(#EPROTONOSUPPORT), symbol]
  syntax IOError ::= "#EPIPE" [klabel(#EPIPE), symbol]
  syntax IOError ::= "#EPFNOSUPPORT" [klabel(#EPFNOSUPPORT), symbol]
  syntax IOError ::= "#EPERM" [klabel(#EPERM), symbol]
  syntax IOError ::= "#EOVERFLOW" [klabel(#EOVERFLOW), symbol]
  syntax IOError ::= "#EOPNOTSUPP" [klabel(#EOPNOTSUPP), symbol]
  syntax IOError ::= "#EOF" [klabel(#EOF), symbol]
  syntax IOError ::= "#ENXIO" [klabel(#ENXIO), symbol]
  syntax IOError ::= "#ENOTTY" [klabel(#ENOTTY), symbol]
  syntax IOError ::= "#ENOTSOCK" [klabel(#ENOTSOCK), symbol]
  syntax IOError ::= "#ENOTEMPTY" [klabel(#ENOTEMPTY), symbol]
  syntax IOError ::= "#ENOTDIR" [klabel(#ENOTDIR), symbol]
  syntax IOError ::= "#ENOTCONN" [klabel(#ENOTCONN), symbol]
  syntax IOError ::= "#ENOSYS" [klabel(#ENOSYS), symbol]
  syntax IOError ::= "#ENOSPC" [klabel(#ENOSPC), symbol]
  syntax IOError ::= "#ENOPROTOOPT" [klabel(#ENOPROTOOPT), symbol]
  syntax IOError ::= "#ENOMEM" [klabel(#ENOMEM), symbol]
  syntax IOError ::= "#ENOLCK" [klabel(#ENOLCK), symbol]
  syntax IOError ::= "#ENOEXEC" [klabel(#ENOEXEC), symbol]
  syntax IOError ::= "#ENOENT" [klabel(#ENOENT), symbol]
  syntax IOError ::= "#ENODEV" [klabel(#ENODEV), symbol]
  syntax IOError ::= "#ENOBUFS" [klabel(#ENOBUFS), symbol]
  syntax IOError ::= "#ENFILE" [klabel(#ENFILE), symbol]
  syntax IOError ::= "#ENETUNREACH" [klabel(#ENETUNREACH), symbol]
  syntax IOError ::= "#ENETRESET" [klabel(#ENETRESET), symbol]
  syntax IOError ::= "#ENETDOWN" [klabel(#ENETDOWN), symbol]
  syntax IOError ::= "#ENAMETOOLONG" [klabel(#ENAMETOOLONG), symbol]
  syntax IOError ::= "#EMSGSIZE" [klabel(#EMSGSIZE), symbol]
  syntax IOError ::= "#EMLINK" [klabel(#EMLINK), symbol]
  syntax IOError ::= "#EMFILE" [klabel(#EMFILE), symbol]
  syntax IOError ::= "#ELOOP" [klabel(#ELOOP), symbol]
  syntax IOError ::= "#EISDIR" [klabel(#EISDIR), symbol]
  syntax IOError ::= "#EISCONN" [klabel(#EISCONN), symbol]
  syntax IOError ::= "#EIO" [klabel(#EIO), symbol]
  syntax IOError ::= "#EINVAL" [klabel(#EINVAL), symbol]
  syntax IOError ::= "#EINTR" [klabel(#EINTR), symbol]
  syntax IOError ::= "#EINPROGRESS" [klabel(#EINPROGRESS), symbol]
  syntax IOError ::= "#EHOSTUNREACH" [klabel(#EHOSTUNREACH), symbol]
  syntax IOError ::= "#EHOSTDOWN" [klabel(#EHOSTDOWN), symbol]
  syntax IOError ::= "#EFBIG" [klabel(#EFBIG), symbol]
  syntax IOError ::= "#EFAULT" [klabel(#EFAULT), symbol]
  syntax IOError ::= "#EEXIST" [klabel(#EEXIST), symbol]
  syntax IOError ::= "#EDOM" [klabel(#EDOM), symbol]
  syntax IOError ::= "#EDESTADDRREQ" [klabel(#EDESTADDRREQ), symbol]
  syntax IOError ::= "#EDEADLK" [klabel(#EDEADLK), symbol]
  syntax IOError ::= "#ECONNRESET" [klabel(#ECONNRESET), symbol]
  syntax IOError ::= "#ECONNREFUSED" [klabel(#ECONNREFUSED), symbol]
  syntax IOError ::= "#ECONNABORTED" [klabel(#ECONNABORTED), symbol]
  syntax IOError ::= "#ECHILD" [klabel(#ECHILD), symbol]
  syntax IOError ::= "#EBUSY" [klabel(#EBUSY), symbol]
  syntax IOError ::= "#EBADF" [klabel(#EBADF), symbol]
  syntax IOError ::= "#EALREADY" [klabel(#EALREADY), symbol]
  syntax IOError ::= "#EAGAIN" [klabel(#EAGAIN), symbol]
  syntax IOError ::= "#EAFNOSUPPORT" [klabel(#EAFNOSUPPORT), symbol]
  syntax IOError ::= "#EADDRNOTAVAIL" [klabel(#EADDRNOTAVAIL), symbol]
  syntax IOError ::= "#EADDRINUSE" [klabel(#EADDRINUSE), symbol]
  syntax IOError ::= "#EACCES" [klabel(#EACCES), symbol]
  syntax IOError ::= "#E2BIG" [klabel(#E2BIG), symbol]
  rule `#stdout_K-IO_Int`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2562,8,2562,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stdin_K-IO_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2561,8,2561,19)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stderr_K-IO_Int`(.KList)=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2563,8,2563,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#open(_)_K-IO_IOInt_String`(#SemanticCastToString(S))=>`#open(_,_)_K-IO_IOInt_String_String`(#SemanticCastToString(S),#token("\"r+\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(2466,8,2466,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module K-LOCATIONS [digest(��yb"f��O�MVA�z!�(�.�.-yJ�X�mH), org.kframework.attributes.Location(Location(571,1,578,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports STRING-SYNTAX
  imports INT-SYNTAX
  syntax {Sort} Sort ::= "#location" "(" Sort "," String "," Int "," Int "," Int "," Int ")" [format(%3), klabel(#location), symbol]
endmodule


module K-REFLECTION [digest(GW�[l���u�*��ѥH	ng��p�j�	��U�), org.kframework.attributes.Location(Location(2315,1,2337,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports STRING
  imports BASIC-K
  syntax {Sort} String ::= "#unparseKORE" "(" Sort ")" [function, hook(KREFLECTION.printKORE), klabel(#unparseKORE)]
  syntax {Sort} Sort ::= "#parseKORE" "(" String ")" [function, hook(KREFLECTION.parseKORE), klabel(#parseKORE)]
  syntax String ::= "#sort" "(" K ")" [function, hook(KREFLECTION.sort), klabel(#sort)]
  syntax String ::= "#kompiledDirectory" "(" ")" [function, hook(KREFLECTION.kompiledDir), klabel(#kompiledDirectory)]
  syntax List ::= "#argv" "(" ")" [function, hook(KREFLECTION.argv), klabel(#argv)]
  syntax KItem ::= "getKLabel" "(" K ")" [function, hook(KREFLECTION.getKLabel), klabel(getKLabel)]
  syntax KItem ::= "#fresh" "(" String ")" [function, hook(KREFLECTION.fresh), impure, klabel(#fresh)]
  syntax K ::= "#getenv" "(" String ")" [function, hook(KREFLECTION.getenv), impure, klabel(#getenv)]
  syntax K ::= "#configuration" [function, hook(KREFLECTION.configuration), impure]
  syntax IOError ::= "#noParse" "(" String ")" [klabel(#noParse), symbol]
endmodule


module K-SORT-LATTICE [digest(��ʳF-nMm�i_�nTY�ԯ��s���B��:�), org.kframework.attributes.Location(Location(380,1,383,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports K-TOP-SORT
  imports K-BOTTOM-SORT
endmodule


module K-TERM [digest(d��*01�M�Ng��M��ʮB�"�3̉p�), org.kframework.attributes.Location(Location(492,1,500,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports SORT-PREDICATES
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports KREWRITE
  imports K-SORT-LATTICE
  imports AUTO-FOLLOW
  imports AUTO-CASTS
endmodule


module K-TOP-SORT [digest(�O#;��W+�qp�@�wجd�i��� PM�), org.kframework.attributes.Location(Location(368,1,372,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports SORT-KBOTT
  syntax {Sort} KItem ::= Sort
  syntax KItem ::= KBott
endmodule


module KAST [digest(i@�j�Ļ b}R�@m��	#���>?����F�Q), org.kframework.attributes.Location(Location(73,1,93,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports SORT-KBOTT
  imports KSTRING
  imports BUILTIN-ID-TOKENS
  imports BASIC-K
  syntax associativity left #KList
  syntax KList ::= KList "," KList [assoc, klabel(#KList), left, prefer, symbol, unit(#EmptyKList)]
  syntax KList ::= K
  syntax KList ::= ".KList" [klabel(#EmptyKList), symbol]
  syntax KList ::= ".::KList" [klabel(#EmptyKList), symbol]
  syntax KLabel ::= r"`(\\\\`|\\\\\\\\|[^`\\\\\\n\\r])+`" [token]
  syntax KLabel ::= r"(?<![a-zA-Z0-9])[#a-z][a-zA-Z0-9]*" [prec(1), token]
  syntax KLabel ::= #LowerId [token]
  syntax KItem ::= KBott
  syntax KBott ::= KLabel "(" KList ")" [klabel(#KApply), symbol]
  syntax KBott ::= "#token" "(" KString "," KString ")" [klabel(#KToken), symbol]
  syntax KBott ::= "#klabel" "(" KLabel ")" [klabel(#WrappedKLabel), symbol]
endmodule


module KCELLS [digest(��G��֑����o�1﫰�-r�T�i�:), org.kframework.attributes.Location(Location(241,1,254,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports KAST
  syntax associativity non-assoc #withConfig [org.kframework.attributes.Location(Location(252,3,252,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  syntax associativity left #cells
  syntax KItem ::= Bag
  syntax Cell [org.kframework.attributes.Location(Location(244,3,244,14)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  syntax Bag ::= KBott
  syntax Bag ::= Cell
  syntax Bag ::= Bag Bag [assoc, klabel(#cells), left, symbol, unit(#cells)]
  syntax Bag ::= ".Bag" [klabel(#cells), symbol]
  syntax Bag ::= ".::Bag" [klabel(#cells), symbol]
  syntax Bag ::= "(" Bag ")" [bracket, bracketLabel((_)_KCELLS_Bag_Bag)]
  syntax #RuleBody ::= "[" "[" K "]" "]" Bag [avoid, klabel(#withConfig), symbol]
endmodule


module KREWRITE [digest(�������|S5�I5��FXSZ�!�i>S�), org.kframework.attributes.Location(Location(452,1,456,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  syntax {Sort} Sort ::= Sort "=>" Sort [klabel(#KRewrite), symbol]
  syntax priority #KRewrite > #withConfig
  syntax associativity non-assoc #KRewrite [org.kframework.attributes.Location(Location(454,3,454,29)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
endmodule


module KRYPTO [digest(�V�ڸ'����p�y��zvD�~g��9� j�), org.kframework.attributes.Location(Location(7,1,113,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/plugin/krypto.md))]
  imports STRING-SYNTAX
  imports LIST
  imports INT-SYNTAX
  syntax String ::= "Sha512raw" "(" String ")" [function, hook(KRYPTO.sha512raw), klabel(Sha512raw)]
  syntax String ::= "Sha512_256raw" "(" String ")" [function, hook(KRYPTO.sha512_256raw)]
  syntax String ::= "Sha512_256" "(" String ")" [function, hook(KRYPTO.sha512_256)]
  syntax String ::= "Sha512" "(" String ")" [function, hook(KRYPTO.sha512), klabel(Sha512)]
  syntax String ::= "Sha3_256raw" "(" String ")" [function, hook(KRYPTO.sha3raw)]
  syntax String ::= "Sha3_256" "(" String ")" [function, hook(KRYPTO.sha3)]
  syntax String ::= "Sha256raw" "(" String ")" [function, hook(KRYPTO.sha256raw), klabel(Sha256raw)]
  syntax String ::= "Sha256" "(" String ")" [function, hook(KRYPTO.sha256), klabel(Sha256)]
  syntax String ::= "RipEmd160raw" "(" String ")" [function, hook(KRYPTO.ripemd160raw), klabel(RipEmd160raw)]
  syntax String ::= "RipEmd160" "(" String ")" [function, hook(KRYPTO.ripemd160), klabel(RipEmd160)]
  syntax String ::= "Keccak256raw" "(" String ")" [function, hook(KRYPTO.keccak256raw), klabel(Keccak256raw)]
  syntax String ::= "Keccak256" "(" String ")" [function, hook(KRYPTO.keccak256), klabel(Keccak256)]
  syntax String ::= "ECDSASign" "(" String "," String ")" [function, hook(KRYPTO.ecdsaSign), klabel(ECDSASign)]
  syntax String ::= "ECDSARecover" "(" String "," Int "," String "," String ")" [function, hook(KRYPTO.ecdsaRecover), klabel(ECDSARecover)]
  syntax String ::= "ECDSAPubKey" "(" String ")" [function, hook(KRYPTO.ecdsaPubKey), klabel(ECDSAPubKey)]
  syntax String ::= "Blake2Compress" "(" String ")" [function, hook(KRYPTO.blake2compress), klabel(Blake2Compress)]
  syntax G2Point ::= "(" Int "x" Int "," Int "x" Int ")"
  syntax G1Point ::= "BN128Mul" "(" G1Point "," Int ")" [function, hook(KRYPTO.bn128mul), klabel(BN128Mul)]
  syntax G1Point ::= "BN128Add" "(" G1Point "," G1Point ")" [function, hook(KRYPTO.bn128add), klabel(BN128Add)]
  syntax G1Point ::= "(" Int "," Int ")" [prefer]
  syntax Bool ::= "isValidPoint" "(" G2Point ")" [function, hook(KRYPTO.bn128g2valid), klabel(isValidG2Point)]
  syntax Bool ::= "isValidPoint" "(" G1Point ")" [function, hook(KRYPTO.bn128valid), klabel(isValidPoint)]
  syntax Bool ::= "BN128AtePairing" "(" List "," List ")" [function, hook(KRYPTO.bn128ate), klabel(BN128AtePairing)]
endmodule


module KSEQ [digest(�K���;���}��۪*p��Ҷ���W9?), org.kframework.attributes.Location(Location(97,1,106,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports KAST
  imports K-TOP-SORT
  syntax {Sort} Sort ::= "(" Sort ")" [applyPriority(1), bracket, bracketLabel((_)_KSEQ_Sort_Sort{Sort}), defaultBracket]
  syntax associativity left #KSequence [org.kframework.attributes.Location(Location(104,3,104,25)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  syntax associativity left #KSequence
  syntax K ::= K "~>" K [assoc, klabel(#KSequence), left, symbol, unit(#EmptyK)]
  syntax K ::= ".K" [klabel(#EmptyK), symbol, unparseAvoid]
  syntax K ::= ".::K" [klabel(#EmptyK), symbol, unparseAvoid]
  syntax K ::= "." [klabel(#EmptyK), symbol]
endmodule


module KSEQ-SYMBOLIC [digest(p/%�͍]�X.xz|	b������쀓w3:W), org.kframework.attributes.Location(Location(206,1,217,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports ML-SYNTAX
  imports KVARIABLE-SYNTAX
  imports KSEQ
  syntax KLabel ::= #KVariable
  syntax KConfigVar ::= r"(?<![A-Za-z0-9_\\$!\\?@])(\\$)([A-Z][A-Za-z0-9'_]*)" [token]
  syntax KBott ::= KConfigVar
  syntax KBott ::= #KVariable
  syntax #KVariable ::= r"(?<![A-Za-z0-9_\\$!\\?@])(\\!|\\?|@)?([A-Z][A-Za-z0-9'_]*|_|_[A-Z][A-Za-z0-9'_]*)" [prec(1), token]
  syntax #KVariable ::= #UpperId [token]
endmodule


module KSTRING [digest(	�L�E������S���r�&�w1��f^]�), org.kframework.attributes.Location(Location(58,1,61,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  syntax KString ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token]
endmodule


module KVARIABLE-SYNTAX [digest(�]h"F�	��o�����9(�6W��\i), org.kframework.attributes.Location(Location(201,1,203,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  syntax #KVariable [org.kframework.attributes.Location(Location(202,3,202,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
endmodule


module LEMMAS [digest(�g��Q1a�3C�4�w��J@<�ǀ�w�3>����), org.kframework.attributes.Location(Location(10,1,153,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), symbolic]
  imports LEMMAS-HASKELL
  imports INT-SIMPLIFICATION
  imports EVM-INT-SIMPLIFICATION
  imports BYTES-SIMPLIFICATION
  imports BITWISE-SIMPLIFICATION
  rule `notBool_`(`notBool_`(#SemanticCastToBool(B)))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(59,10,59,32)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `chop(_)_WORD_Int_Int`(#SemanticCastToInt(I))=>#SemanticCastToInt(I) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(I)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(26,10,26,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_|Int_`(`bool2Word(_)_EVM-TYPES_Int_Bool`(#SemanticCastToBool(_B)),#token("1","Int"))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(56,10,56,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_|Int_`(`bool2Word(_)_EVM-TYPES_Int_Bool`(#SemanticCastToBool(A)),`bool2Word(_)_EVM-TYPES_Int_Bool`(#SemanticCastToBool(B)))=>`bool2Word(_)_EVM-TYPES_Int_Bool`(`_orBool_`(#SemanticCastToBool(A),#SemanticCastToBool(B))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(50,10,50,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_|Int_`(#token("1","Int"),`bool2Word(_)_EVM-TYPES_Int_Bool`(#SemanticCastToBool(_B)))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(53,10,53,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_==K_`(`Map:update`(`Map:update`(#SemanticCastToMap(M),#SemanticCastToInt(I1),#SemanticCastToInt(V1)),#SemanticCastToInt(I2),#SemanticCastToInt(V2)),`Map:update`(`Map:update`(#SemanticCastToMap(M),#SemanticCastToInt(I2),#SemanticCastToInt(V2)),#SemanticCastToInt(I1),#SemanticCastToInt(V1)))=>#token("true","Bool") requires `_=/=Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(89,10,90,28)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(`keccak(_)_SERIALIZATION_Int_Bytes`(#SemanticCastToBytes(_)),`pow256_WORD_Int`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(77,18,77,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<Int_`(`chop(_)_WORD_Int_Int`(#SemanticCastToInt(_V)),`pow256_WORD_Int`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(28,18,28,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<Int_`(`bool2Word(_)_EVM-TYPES_Int_Bool`(#SemanticCastToBool(_B)),`pow256_WORD_Int`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(48,18,48,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<Int_`(`_*Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),`pow256_WORD_Int`(.KList))=>#token("true","Bool") requires `_<=Int_`(#SemanticCastToInt(Y),`_/Int_`(`maxUInt256_WORD_Int`(.KList),#SemanticCastToInt(X))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(30,10,30,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(`Csstore(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)),#SemanticCastToInt(G))=>#token("true","Bool") requires `_andBool_`(`_andBool_`(`_<Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsload_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(G)),`_<Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstoreset_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(G))),`_<Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstorereset_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(G))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(147,10,150,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<Int_`(`Cextra(_,_,_,_)_GAS-FEES_Int_Schedule_Bool_Int_Bool`(#SemanticCastToSchedule(_),#SemanticCastToBool(_),#SemanticCastToInt(_),#SemanticCastToBool(_)),`pow256_WORD_Int`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(127,10,127,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<Int_`(`#newAddr(_,_)_SERIALIZATION_Int_Int_Int`(#SemanticCastToInt(_),#SemanticCastToInt(_)),`pow256_WORD_Int`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(64,18,64,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<Int_`(`#newAddr(_,_)_SERIALIZATION_Int_Int_Int`(#SemanticCastToInt(_),#SemanticCastToInt(_)),`pow160_WORD_Int`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(63,18,63,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<Int_`(`#lookup(_,_)_EVM-TYPES_Int_Map_Int`(#SemanticCastToMap(_M),#SemanticCastToInt(_)),`pow256_WORD_Int`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(87,18,87,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, smt-lemma]
  rule `_<Int_`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(_WS)),`pow256_WORD_Int`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(69,18,69,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<Int_`(#SemanticCastToInt(G),`Csstore(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>#token("false","Bool") requires `_andBool_`(`_andBool_`(`_<=Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsload_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(G)),`_<=Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstoreset_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(G))),`_<=Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstorereset_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(G))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(129,10,132,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(`Csstore(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)),#SemanticCastToInt(G))=>#token("true","Bool") requires `_andBool_`(`_andBool_`(`_<=Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsload_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(G)),`_<=Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstoreset_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(G))),`_<=Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstorereset_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(G))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(135,10,138,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`keccak(_)_SERIALIZATION_Int_Bytes`(#SemanticCastToBytes(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(76,10,76,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`chop(_)_WORD_Int_Int`(#SemanticCastToInt(_V)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(27,10,27,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, smt-lemma]
  rule `_<=Int_`(#token("0","Int"),`bool2Word(_)_EVM-TYPES_Int_Bool`(#SemanticCastToBool(_B)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(47,10,47,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`_up/Int__EVM-TYPES_Int_Int_Int`(#SemanticCastToInt(G),#SemanticCastToInt(I)))=>#token("true","Bool") requires `_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(G)),`_<Int_`(#token("0","Int"),#SemanticCastToInt(I))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(126,10,126,92)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(_),#SemanticCastToSchedule(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(125,10,125,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`_-Int_`(`#ceil32(_)_BUF-SYNTAX_Int_Int`(#SemanticCastToInt(I)),#SemanticCastToInt(I)))=>#token("true","Bool") requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(I)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(23,10,23,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`Csstore(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(121,10,121,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`Csload(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(_),#SemanticCastToBool(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(118,10,118,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`Cmem(_,_)_GAS-FEES_Int_Schedule_Int`(#SemanticCastToSchedule(_),#SemanticCastToInt(N)))=>#token("true","Bool") requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(N)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(119,10,119,75)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`Cgascap(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(122,10,122,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`Cextra(_,_,_,_)_GAS-FEES_Int_Schedule_Bool_Int_Bool`(#SemanticCastToSchedule(_),#SemanticCastToBool(_),#SemanticCastToInt(_),#SemanticCastToBool(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(124,10,124,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`Caddraccess(_,_)_GAS-FEES_Int_Schedule_Bool`(#SemanticCastToSchedule(_),#SemanticCastToBool(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(120,10,120,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`#sizeWordStack(_,_)_EVM-TYPES_Int_WordStack_Int`(#SemanticCastToWordStack(_),#SemanticCastToInt(N)))=>#token("true","Bool") requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(N)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(44,10,44,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification, smt-lemma]
  rule `_<=Int_`(#token("0","Int"),`#newAddr(_,_)_SERIALIZATION_Int_Int_Int`(#SemanticCastToInt(_),#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(62,10,62,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH)))=>#token("true","Bool") requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),#SemanticCastToInt(MU)),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(START))),`_<=Int_`(#token("0","Int"),#SemanticCastToInt(WIDTH))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(102,10,102,126)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`#lookup(_,_)_EVM-TYPES_Int_Map_Int`(#SemanticCastToMap(_M),#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(86,10,86,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, smt-lemma]
  rule `_<=Int_`(#token("0","Int"),`#ceil32(_)_BUF-SYNTAX_Int_Int`(#SemanticCastToInt(I)))=>#token("true","Bool") requires `_<=Int_`(#token("0","Int"),#SemanticCastToInt(I)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(22,10,22,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification, smt-lemma]
  rule `_<=Int_`(#token("0","Int"),`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(_WS)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(68,10,68,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<=Int_`(#token("0","Int"),`#allBut64th(_)_GAS-FEES_Int_Int`(#SemanticCastToInt(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(123,10,123,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<=Int_`(#SemanticCastToInt(G),`Csstore(_,_,_,_)_GAS-FEES_Int_Schedule_Int_Int_Int`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>#token("false","Bool") requires `_andBool_`(`_andBool_`(`_<Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsload_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(G)),`_<Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstoreset_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(G))),`_<Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstorereset_SCHEDULE_ScheduleConst`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(G))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(141,10,144,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_&Int_`(`bool2Word(_)_EVM-TYPES_Int_Bool`(#SemanticCastToBool(B)),#token("1","Int"))=>`bool2Word(_)_EVM-TYPES_Int_Bool`(#SemanticCastToBool(B)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(57,10,57,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_&Int_`(`bool2Word(_)_EVM-TYPES_Int_Bool`(#SemanticCastToBool(A)),`bool2Word(_)_EVM-TYPES_Int_Bool`(#SemanticCastToBool(B)))=>`bool2Word(_)_EVM-TYPES_Int_Bool`(`_andBool_`(#SemanticCastToBool(A),#SemanticCastToBool(B))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(51,10,51,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_&Int_`(#token("1","Int"),`bool2Word(_)_EVM-TYPES_Int_Bool`(#SemanticCastToBool(B)))=>`bool2Word(_)_EVM-TYPES_Int_Bool`(#SemanticCastToBool(B)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(54,10,54,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `Set:in`(#SemanticCastToInt(X),`_Set_`(`SetItem`(#SemanticCastToInt(Y)),#SemanticCastToSet(_)))=>#token("true","Bool") requires `_==Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(37,10,37,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `Set:in`(#SemanticCastToInt(X),`_Set_`(`SetItem`(#SemanticCastToInt(Y)),#SemanticCastToSet(REST)))=>`Set:in`(#SemanticCastToInt(X),#SemanticCastToSet(REST)) requires `_=/=Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Y)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(38,10,38,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START1),#SemanticCastToInt(WIDTH1)),#SemanticCastToInt(START2),#SemanticCastToInt(WIDTH2))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START2),#SemanticCastToInt(WIDTH2)) requires `_andBool_`(`_andBool_`(`_andBool_`(`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(MU)),`_<Int_`(#token("0","Int"),#SemanticCastToInt(WIDTH1))),`_<Int_`(#token("0","Int"),#SemanticCastToInt(WIDTH2))),`_<Int_`(`_+Int_`(#SemanticCastToInt(START1),#SemanticCastToInt(WIDTH1)),`_+Int_`(#SemanticCastToInt(START2),#SemanticCastToInt(WIDTH2)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(109,10,111,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START1),#SemanticCastToInt(WIDTH1)),#SemanticCastToInt(START2),#SemanticCastToInt(WIDTH2))=>`#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(START1),#SemanticCastToInt(WIDTH1)) requires `_andBool_`(`_andBool_`(`_andBool_`(`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(MU)),`_<Int_`(#token("0","Int"),#SemanticCastToInt(WIDTH1))),`_<Int_`(#token("0","Int"),#SemanticCastToInt(WIDTH2))),`_<=Int_`(`_+Int_`(#SemanticCastToInt(START2),#SemanticCastToInt(WIDTH2)),`_+Int_`(#SemanticCastToInt(START1),#SemanticCastToInt(WIDTH1)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(104,10,106,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#memoryUsageUpdate(_,_,_)_EVM_Int_Int_Int_Int`(#SemanticCastToInt(MU),#SemanticCastToInt(_),#SemanticCastToInt(WIDTH))=>#SemanticCastToInt(MU) requires `_<=Int_`(#SemanticCastToInt(WIDTH),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(100,10,100,71)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#lookup(_,_)_EVM-TYPES_Int_Map_Int`(`Map:update`(#SemanticCastToMap(_M),#SemanticCastToInt(K1),#SemanticCastToKItem(V1)),#SemanticCastToInt(K2))=>`#lookup(_,_)_EVM-TYPES_Int_Map_Int`(`_|->_`(#SemanticCastToInt(K1),#SemanticCastToKItem(V1)),#SemanticCastToInt(K1)) requires `_==Int_`(#SemanticCastToInt(K1),#SemanticCastToInt(K2)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(83,10,83,99)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#lookup(_,_)_EVM-TYPES_Int_Map_Int`(`Map:update`(#SemanticCastToMap(M),#SemanticCastToInt(K1),#SemanticCastToKItem(_)),#SemanticCastToInt(K2))=>`#lookup(_,_)_EVM-TYPES_Int_Map_Int`(#SemanticCastToMap(M),#SemanticCastToInt(K2)) requires `_=/=Int_`(#SemanticCastToInt(K1),#SemanticCastToInt(K2)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(84,10,84,99)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#isPrecompiledAccount(_,_)_EVM_Bool_Int_Schedule`(`#newAddr(_,_)_SERIALIZATION_Int_Int_Int`(#SemanticCastToInt(_),#SemanticCastToInt(_)),#SemanticCastToSchedule(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(66,10,66,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(#SemanticCastToBool(B),`_+Int_`(#SemanticCastToInt(C),#SemanticCastToInt(C1)),`_+Int_`(#SemanticCastToInt(C),#SemanticCastToInt(C2)))=>`_+Int_`(#SemanticCastToInt(C),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(#SemanticCastToBool(B),#SemanticCastToInt(C1),#SemanticCastToInt(C2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(31,10,31,89)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `#addrFromPrivateKey(_)_SERIALIZATION_Int_String`(#token("\"0x0000000000000000000000000000000000000000000000000000000000000001\"","String"))=>#token("721457446580647751014191829380889690493307935711","Int") requires #token("true","Bool") ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(94,10,94,151)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(40)]
endmodule


module LEMMAS-HASKELL [digest(_�OJ�����O%%l�7Y��rz�{�n8�YF$), kore, org.kframework.attributes.Location(Location(155,1,222,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), symbolic]
  imports INT-SYMBOLIC
  imports EVM
  imports BUF
  rule `notBool_`(`_==Int_`(#SemanticCastToInt(X),#token("1","Int")))=>`_==Int_`(#SemanticCastToInt(X),#token("0","Int")) requires `#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(173,10,173,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `notBool_`(`_==Int_`(#SemanticCastToInt(X),#token("0","Int")))=>`_==Int_`(#SemanticCastToInt(X),#token("1","Int")) requires `#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(172,10,172,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `bool2Word(_)_EVM-TYPES_Int_Bool`(`_==Int_`(#SemanticCastToInt(X),#token("1","Int")))=>#SemanticCastToInt(X) requires `#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(X)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(174,10,174,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_modInt_`(#SemanticCastToInt(N),`pow160_WORD_Int`(.KList))=>#SemanticCastToInt(N) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("160","Int"),#SemanticCastToInt(N)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(184,10,184,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_andBool_`(`notBool_`(`_andBool_`(#SemanticCastToBool(A),#SemanticCastToBool(B))),#SemanticCastToBool(A))=>`_andBool_`(`notBool_`(#SemanticCastToBool(B)),#SemanticCastToBool(A)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(221,10,221,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_==Int_`(`bool2Word(_)_EVM-TYPES_Int_Bool`(#SemanticCastToBool(B)),#SemanticCastToInt(I))=>`_==K_`(#SemanticCastToBool(B),`word2Bool(_)_EVM-TYPES_Bool_Int`(#SemanticCastToInt(I))) requires #token("true","Bool") ensures #token("true","Bool") [concrete(I), org.kframework.attributes.Location(Location(178,10,178,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_==Int_`(#SemanticCastToInt(I),`bool2Word(_)_EVM-TYPES_Int_Bool`(#SemanticCastToBool(B)))=>`_==Int_`(`bool2Word(_)_EVM-TYPES_Int_Bool`(#SemanticCastToBool(B)),#SemanticCastToInt(I)) requires #token("true","Bool") ensures #token("true","Bool") [concrete(I), org.kframework.attributes.Location(Location(177,10,177,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_==Bool_`(#SemanticCastToBool(B),#token("false","Bool"))=>`notBool_`(#SemanticCastToBool(B)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(220,10,220,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_<Int_`(`chop(_)_WORD_Int_Int`(`_+Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Y))),#SemanticCastToInt(X))=>#token("true","Bool") requires `_andBool_`(`_andBool_`(`_<=Int_`(`pow256_WORD_Int`(.KList),`_+Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Y))),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(X))),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(Y))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(200,10,200,134)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_<=Int_`(#SemanticCastToInt(X),`chop(_)_WORD_Int_Int`(`_+Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Y))))=>#token("false","Bool") requires `_andBool_`(`_andBool_`(`_<=Int_`(`pow256_WORD_Int`(.KList),`_+Int_`(#SemanticCastToInt(X),#SemanticCastToInt(Y))),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(X))),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(Y))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(206,10,206,134)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_/Int_`(`#asWord(_)_EVM-TYPES_Int_Bytes`(#SemanticCastToBytes(BUF)),#SemanticCastToInt(D))=>`#asWord(_)_EVM-TYPES_Int_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(BUF),#token("0","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(BUF)),`log256Int(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(D))))) requires `_andBool_`(`_andBool_`(`_==Int_`(#SemanticCastToInt(D),`_^Int_`(#token("256","Int"),`log256Int(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(D)))),`_>=Int_`(#SemanticCastToInt(D),#token("0","Int"))),`_>=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(BUF)),`log256Int(_)_EVM-TYPES_Int_Int`(#SemanticCastToInt(D)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(164,10,166,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `#asWord(_)_EVM-TYPES_Int_Bytes`(`#buf(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#SemanticCastToInt(N),#SemanticCastToInt(BUF)))=>#SemanticCastToInt(BUF) requires `_andBool_`(`#range(_<_<=_)_WORD_Bool_Int_Int_Int`(#token("0","Int"),#SemanticCastToInt(N),#token("32","Int")),`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(#token("0","Int"),#SemanticCastToInt(BUF),`_^Int_`(#token("2","Int"),`_*Int_`(#SemanticCastToInt(N),#token("8","Int"))))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(168,10,170,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule #Equals(`Map:update`(`Map:update`(#SemanticCastToMap(M),#SemanticCastToInt(I1),#SemanticCastToInt(V1)),#SemanticCastToInt(I2),#SemanticCastToInt(V2)),`Map:update`(`Map:update`(#SemanticCastToMap(M),#SemanticCastToInt(I2),#SemanticCastToInt(V2)),#SemanticCastToInt(I1),#SemanticCastToInt(V1)))=>#Top(.KList) requires `_=/=Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(212,10,213,28)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/lemmas/lemmas.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
endmodule


module LIST [digest(=/�@މ8��E0g�ʗ;�WZQ�#.���	ܜ�), org.kframework.attributes.Location(Location(909,1,1024,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports INT-SYNTAX
  imports BASIC-K
  syntax associativity left _List_
  syntax List [hook(LIST.List), org.kframework.attributes.Location(Location(913,3,913,32)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  syntax List ::= List List [assoc, element(ListItem), format(%1%n%2), function, hook(LIST.concat), klabel(_List_), left, smtlib(smt_seq_concat), symbol, total, unit(.List)]
  syntax List ::= List "[" index:Int "<-" value:KItem "]" [function, hook(LIST.update), klabel(List:set)]
  syntax List ::= "updateList" "(" dest:List "," index:Int "," src:List ")" [function, hook(LIST.updateAll), klabel(updateList)]
  syntax List ::= "range" "(" List "," fromFront:Int "," fromBack:Int ")" [function, hook(LIST.range), klabel(List:range), symbol]
  syntax List ::= "makeList" "(" length:Int "," value:KItem ")" [function, hook(LIST.make), klabel(makeList)]
  syntax List ::= "fillList" "(" List "," index:Int "," length:Int "," value:KItem ")" [function, hook(LIST.fill), klabel(fillList)]
  syntax List ::= "ListItem" "(" KItem ")" [function, hook(LIST.element), klabel(ListItem), smtlib(smt_seq_elem), symbol, total]
  syntax List ::= ".List" [function, hook(LIST.unit), klabel(.List), latex(\dotCt{List}), smtlib(smt_seq_nil), symbol, total]
  syntax KItem ::= List "[" Int "]" [function, hook(LIST.get), klabel(List:get), symbol]
  syntax Int ::= "size" "(" List ")" [function, hook(LIST.size), klabel(sizeList), smtlib(smt_seq_len), total]
  syntax Bool ::= KItem "in" List [function, hook(LIST.in), klabel(_inList_), total]
endmodule


module MAP [digest($��Iׂϩ[P��`��`�0��0J<��), org.kframework.attributes.Location(Location(212,1,404,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports SET
  imports LIST
  imports INT-SYNTAX
  imports BOOL-SYNTAX
  syntax priority _|->_ > .Map _Map_
  syntax associativity non-assoc _|->_ [org.kframework.attributes.Location(Location(260,3,260,25)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  syntax associativity left _Map_
  syntax Set ::= "keys" "(" Map ")" [function, hook(MAP.keys), klabel(keys), total]
  syntax Map [hook(MAP.Map), org.kframework.attributes.Location(Location(218,3,218,29)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  syntax Map ::= Map Map [assoc, comm, element(_|->_), format(%1%n%2), function, hook(MAP.concat), index(0), klabel(_Map_), left, symbol, unit(.Map)]
  syntax Map ::= Map "[" key:KItem "<-" value:KItem "]" [function, hook(MAP.update), klabel(Map:update), prefer, symbol, total]
  syntax Map ::= Map "[" KItem "<-" "undef" "]" [function, hook(MAP.remove), klabel(_[_<-undef]), symbol, total]
  syntax Map ::= Map "-Map" Map [function, hook(MAP.difference), latex({#1}-_{\it Map}{#2}), total]
  syntax Map ::= KItem "|->" KItem [function, hook(MAP.element), injective, klabel(_|->_), latex({#1}\mapsto{#2}), symbol, total]
  syntax Map ::= "updateMap" "(" Map "," Map ")" [function, hook(MAP.updateAll), klabel(updateMap), total]
  syntax Map ::= "removeAll" "(" Map "," Set ")" [function, hook(MAP.removeAll), klabel(removeAll), total]
  syntax Map ::= ".Map" [function, hook(MAP.unit), klabel(.Map), latex(\dotCt{Map}), symbol, total]
  syntax List ::= "values" "(" Map ")" [function, hook(MAP.values), klabel(values)]
  syntax List ::= "keys_list" "(" Map ")" [function, hook(MAP.keys_list)]
  syntax KItem ::= Map "[" KItem "]" [function, hook(MAP.lookup), klabel(Map:lookup), symbol]
  syntax KItem ::= Map "[" KItem "]" "orDefault" KItem [function, hook(MAP.lookupOrDefault), klabel(Map:lookupOrDefault), total]
  syntax KItem ::= "choice" "(" Map ")" [function, hook(MAP.choice), klabel(Map:choice)]
  syntax Int ::= "size" "(" Map ")" [function, hook(MAP.size), klabel(sizeMap), total]
  syntax Bool ::= Map "<=Map" Map [function, hook(MAP.inclusion), total]
  syntax Bool ::= KItem "in_keys" "(" Map ")" [function, hook(MAP.in_keys), total]
endmodule


module MAP-KORE-SYMBOLIC [digest(�~�F�!W24g��2�+-�U�+��d�n), haskell, kore, org.kframework.attributes.Location(Location(406,1,461,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), symbolic]
  imports MAP
  imports K-EQUAL
  imports BOOL
  rule `_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(K1),`Map:update`(#SemanticCastToMap(M),#SemanticCastToKItem(K2),#SemanticCastToKItem(_)))=>`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(K1),#SemanticCastToMap(M)) requires `_=/=K_`(#SemanticCastToKItem(K1),#SemanticCastToKItem(K2)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(447,8,447,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(K1),`Map:update`(#SemanticCastToMap(M),#SemanticCastToKItem(K2),#SemanticCastToKItem(_)))=>#token("true","Bool") requires `_orBool_`(`_==K_`(#SemanticCastToKItem(K1),#SemanticCastToKItem(K2)),`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(K1),#SemanticCastToMap(M))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(446,8,446,81)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(K),`_[_<-undef]`(#SemanticCastToMap(_M),#SemanticCastToKItem(K)))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(444,8,444,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(K),`Map:update`(#SemanticCastToMap(_M),#SemanticCastToKItem(K),#SemanticCastToKItem(_)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(445,8,445,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_[_]orDefault__MAP_KItem_Map_KItem_KItem`(`_Map_`(`_|->_`(#SemanticCastToKItem(K1),#SemanticCastToKItem(_V)),#SemanticCastToMap(M)),#SemanticCastToKItem(K2),#SemanticCastToKItem(D))=>`_[_]orDefault__MAP_KItem_Map_KItem_KItem`(#SemanticCastToMap(M),#SemanticCastToKItem(K2),#SemanticCastToKItem(D)) requires `_=/=K_`(#SemanticCastToKItem(K1),#SemanticCastToKItem(K2)) ensures `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(K1),#SemanticCastToMap(M))) [org.kframework.attributes.Location(Location(438,8,438,118)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool "ensures" Bool [klabel(#ruleRequiresEnsures), symbol]), simplification]
  rule `_[_]orDefault__MAP_KItem_Map_KItem_KItem`(`_Map_`(`_|->_`(#SemanticCastToKItem(K),#SemanticCastToKItem(V)),#SemanticCastToMap(M)),#SemanticCastToKItem(K),#SemanticCastToKItem(_))=>#SemanticCastToKItem(V) requires #token("true","Bool") ensures `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(K),#SemanticCastToMap(M))) [org.kframework.attributes.Location(Location(437,8,437,80)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol]), simplification]
  rule `_[_]orDefault__MAP_KItem_Map_KItem_KItem`(`Map:update`(#SemanticCastToMap(_MAP),#SemanticCastToKItem(K),#SemanticCastToKItem(V1)),#SemanticCastToKItem(K),#SemanticCastToKItem(_))=>#SemanticCastToKItem(V1) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(439,8,439,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_[_]orDefault__MAP_KItem_Map_KItem_KItem`(`Map:update`(#SemanticCastToMap(MAP),#SemanticCastToKItem(K1),#SemanticCastToKItem(_V1)),#SemanticCastToKItem(K2),#SemanticCastToKItem(D))=>`_[_]orDefault__MAP_KItem_Map_KItem_KItem`(#SemanticCastToMap(MAP),#SemanticCastToKItem(K2),#SemanticCastToKItem(D)) requires `_=/=K_`(#SemanticCastToKItem(K1),#SemanticCastToKItem(K2)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(440,8,440,97)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_[_]orDefault__MAP_KItem_Map_KItem_KItem`(`.Map`(.KList),#SemanticCastToKItem(_),#SemanticCastToKItem(D))=>#SemanticCastToKItem(D) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(441,8,441,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_[_<-undef]`(`_Map_`(`_|->_`(#SemanticCastToKItem(K1),#SemanticCastToKItem(V1)),#SemanticCastToMap(M)),#SemanticCastToKItem(K2))=>`_Map_`(`_|->_`(#SemanticCastToKItem(K1),#SemanticCastToKItem(V1)),`_[_<-undef]`(#SemanticCastToMap(M),#SemanticCastToKItem(K2))) requires `_=/=K_`(#SemanticCastToKItem(K1),#SemanticCastToKItem(K2)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(429,8,429,96)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `_[_<-undef]`(`_Map_`(`_|->_`(#SemanticCastToKItem(K),#SemanticCastToKItem(_)),#SemanticCastToMap(M)),#SemanticCastToKItem(K))=>#SemanticCastToMap(M) requires #token("true","Bool") ensures `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(K),#SemanticCastToMap(M))) [org.kframework.attributes.Location(Location(425,8,425,74)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol]), simplification]
  rule `_[_<-undef]`(#SemanticCastToMap(M),#SemanticCastToKItem(K))=>#SemanticCastToMap(M) requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(K),#SemanticCastToMap(M))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(426,8,426,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `Map:update`(`_Map_`(`_|->_`(#SemanticCastToKItem(K1),#SemanticCastToKItem(V1)),#SemanticCastToMap(M)),#SemanticCastToKItem(K2),#SemanticCastToKItem(V2))=>`_Map_`(`_|->_`(#SemanticCastToKItem(K1),#SemanticCastToKItem(V1)),`Map:update`(#SemanticCastToMap(M),#SemanticCastToKItem(K2),#SemanticCastToKItem(V2))) requires `_=/=K_`(#SemanticCastToKItem(K1),#SemanticCastToKItem(K2)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(422,8,422,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `Map:update`(`_Map_`(`_|->_`(#SemanticCastToKItem(K),#SemanticCastToKItem(_)),#SemanticCastToMap(M)),#SemanticCastToKItem(K),#SemanticCastToKItem(V))=>`_Map_`(`_|->_`(#SemanticCastToKItem(K),#SemanticCastToKItem(V)),#SemanticCastToMap(M)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(417,8,417,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `Map:update`(`Map:update`(#SemanticCastToMap(M),#SemanticCastToKItem(K),#SemanticCastToKItem(_)),#SemanticCastToKItem(K),#SemanticCastToKItem(V))=>`Map:update`(#SemanticCastToMap(M),#SemanticCastToKItem(K),#SemanticCastToKItem(V)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(419,8,419,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `Map:update`(#SemanticCastToMap(M),#SemanticCastToKItem(K),#SemanticCastToKItem(V))=>`_Map_`(`_|->_`(#SemanticCastToKItem(K),#SemanticCastToKItem(V)),#SemanticCastToMap(M)) requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(K),#SemanticCastToMap(M))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(418,8,418,71)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule `Map:lookup`(`_Map_`(`_|->_`(#SemanticCastToKItem(K1),#SemanticCastToKItem(_V)),#SemanticCastToMap(M)),#SemanticCastToKItem(K2))=>`Map:lookup`(#SemanticCastToMap(M),#SemanticCastToKItem(K2)) requires `_=/=K_`(#SemanticCastToKItem(K1),#SemanticCastToKItem(K2)) ensures `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(K1),#SemanticCastToMap(M))) [org.kframework.attributes.Location(Location(433,8,433,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool "ensures" Bool [klabel(#ruleRequiresEnsures), symbol]), simplification]
  rule `Map:lookup`(`_Map_`(`_|->_`(#SemanticCastToKItem(K),#SemanticCastToKItem(V)),#SemanticCastToMap(M)),#SemanticCastToKItem(K))=>#SemanticCastToKItem(V) requires #token("true","Bool") ensures `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(K),#SemanticCastToMap(M))) [org.kframework.attributes.Location(Location(432,8,432,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol]), simplification]
  rule `Map:lookup`(`Map:update`(#SemanticCastToMap(_MAP),#SemanticCastToKItem(K),#SemanticCastToKItem(V1)),#SemanticCastToKItem(K))=>#SemanticCastToKItem(V1) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(434,8,434,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `Map:lookup`(`Map:update`(#SemanticCastToMap(MAP),#SemanticCastToKItem(K1),#SemanticCastToKItem(_V1)),#SemanticCastToKItem(K2))=>`Map:lookup`(#SemanticCastToMap(MAP),#SemanticCastToKItem(K2)) requires `_=/=K_`(#SemanticCastToKItem(K1),#SemanticCastToKItem(K2)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(435,8,435,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  rule #Equals(`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(@Key),`_Map_`(`_|->_`(#SemanticCastToKItem(Key'),#SemanticCastToKItem(Val)),#SemanticCastToMap(@M))),#token("false","Bool"))=>#And(#And(#And(#Ceil(#SemanticCastToKItem(@Key)),#Ceil(`_Map_`(`_|->_`(#SemanticCastToKItem(Key'),#SemanticCastToKItem(Val)),#SemanticCastToMap(@M)))),#Not(#Equals(#SemanticCastToKItem(@Key),#SemanticCastToKItem(Key')))),#Equals(`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(@Key),#SemanticCastToMap(@M)),#token("false","Bool"))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(452,8,452,165)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(@Key),`.Map`(.KList)),#token("false","Bool"))=>#Ceil(#SemanticCastToKItem(@Key)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(450,8,450,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(#token("false","Bool"),`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(@Key),`_Map_`(`_|->_`(#SemanticCastToKItem(Key'),#SemanticCastToKItem(Val)),#SemanticCastToMap(@M))))=>#And(#And(#And(#Ceil(#SemanticCastToKItem(@Key)),#Ceil(`_Map_`(`_|->_`(#SemanticCastToKItem(Key'),#SemanticCastToKItem(Val)),#SemanticCastToMap(@M)))),#Not(#Equals(#SemanticCastToKItem(@Key),#SemanticCastToKItem(Key')))),#Equals(#token("false","Bool"),`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(@Key),#SemanticCastToMap(@M)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(451,8,451,165)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Equals(#token("false","Bool"),`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(@Key),`.Map`(.KList)))=>#Ceil(#SemanticCastToKItem(@Key)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(449,8,449,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Ceil(`Map:lookup`(#SemanticCastToMap(@M),#SemanticCastToKItem(@K)))=>#And(#And(#Equals(`_in_keys(_)_MAP_Bool_KItem_Map`(#SemanticCastToKItem(@K),#SemanticCastToMap(@M)),#token("true","Bool")),#Ceil(#SemanticCastToMap(@M))),#Ceil(#SemanticCastToKItem(@K))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(411,8,411,97)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
endmodule


module MAP-SYMBOLIC [digest(�Nhkz����Y�����$�tn���S����+%), org.kframework.attributes.Location(Location(463,1,465,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports MAP-KORE-SYMBOLIC
endmodule


module MINT-SYNTAX [digest(�Hf�3��BRֲ�E@r���e�֛�x�戸), org.kframework.attributes.Location(Location(2826,1,2833,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  syntax {Width} MInt{Width} ::= r"[\\+-]?[0-9]+[pP][0-9]+" [hook(MINT.literal), prec(2), token]
  syntax MInt{Width} [hook(MINT.MInt), org.kframework.attributes.Location(Location(2829,3,2829,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
endmodule


module ML-SYNTAX [digest(�2��T���
G$z-A��]����^x,M�z'YG[~), not-lr1, org.kframework.attributes.Location(Location(138,1,165,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports SORT-K
  syntax {Sort} Sort ::= Sort "#Or" Sort [assoc, comm, format(%i%1%d%n%2%n%i%3%d), klabel(#Or), left, mlOp, symbol, unit(#Bottom)]
  syntax {Sort} Sort ::= Sort "#Implies" Sort [format(%i%1%d%n%2%n%i%3%d), klabel(#Implies), mlImplies, mlOp, symbol]
  syntax {Sort} Sort ::= Sort "#And" Sort [assoc, comm, format(%i%1%d%n%2%n%i%3%d), klabel(#And), left, mlAnd, mlOp, symbol, unit(#Top)]
  syntax {Sort} Sort ::= "#wEF" "(" Sort ")" [klabel(weakExistsFinally), mlOp, symbol]
  syntax {Sort} Sort ::= "#wAF" "(" Sort ")" [klabel(weakAlwaysFinally), mlOp, symbol]
  syntax {Sort} Sort ::= "#True" [klabel(#Top), mlUnary, symbol, unparseAvoid]
  syntax {Sort} Sort ::= "#Top" [klabel(#Top), mlUnary, symbol]
  syntax {Sort} Sort ::= "#Not" "(" Sort ")" [klabel(#Not), mlOp, mlUnary, symbol]
  syntax {Sort} Sort ::= "#False" [klabel(#Bottom), mlUnary, symbol, unparseAvoid]
  syntax {Sort} Sort ::= "#Bottom" [klabel(#Bottom), mlUnary, symbol]
  syntax {Sort} Sort ::= "#AG" "(" Sort ")" [klabel(#AG), mlOp, symbol]
  syntax {Sort1, Sort2} Sort2 ::= "{" Sort1 "#Equals" Sort1 "}" [comm, format(%1%i%n%2%d%n%3%i%n%4%d%n%5), klabel(#Equals), mlEquals, mlOp, symbol]
  syntax {Sort1, Sort2} Sort2 ::= "#Forall" Sort1 "." Sort2 [klabel(#Forall), mlBinder, mlOp, mlQuantifier, symbol]
  syntax {Sort1, Sort2} Sort2 ::= "#Floor" "(" Sort1 ")" [klabel(#Floor), mlOp, mlUnary, symbol]
  syntax {Sort1, Sort2} Sort2 ::= "#Exists" Sort1 "." Sort2 [klabel(#Exists), mlBinder, mlOp, mlQuantifier, symbol]
  syntax {Sort1, Sort2} Sort2 ::= "#Ceil" "(" Sort1 ")" [klabel(#Ceil), mlOp, mlUnary, symbol]
  syntax priority #Top #Floor #Ceil #Not #Bottom > #Equals > #And
  syntax priority #Implies > #Exists #Forall
  syntax priority #And > #Or > #Implies
  syntax associativity left #Or
  syntax associativity left #And
endmodule


module NETWORK [digest(g����bX�w�s
s�2Ved����}'o), org.kframework.attributes.Location(Location(8,1,117,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md))]
  imports STRING-SYNTAX
  syntax String ::= "StatusCode2String" "(" StatusCode ")" [function, klabel(StatusCode2String)]
  syntax StatusCode ::= EndStatusCode
  syntax StatusCode ::= "EVMC_REJECTED"
  syntax StatusCode ::= "EVMC_INTERNAL_ERROR"
  syntax StatusCode ::= ".StatusCode"
  syntax ExceptionalStatusCode ::= "EVMC_UNDEFINED_INSTRUCTION"
  syntax ExceptionalStatusCode ::= "EVMC_STATIC_MODE_VIOLATION"
  syntax ExceptionalStatusCode ::= "EVMC_STACK_UNDERFLOW"
  syntax ExceptionalStatusCode ::= "EVMC_STACK_OVERFLOW"
  syntax ExceptionalStatusCode ::= "EVMC_PRECOMPILE_FAILURE"
  syntax ExceptionalStatusCode ::= "EVMC_OUT_OF_GAS"
  syntax ExceptionalStatusCode ::= "EVMC_NONCE_EXCEEDED"
  syntax ExceptionalStatusCode ::= "EVMC_INVALID_MEMORY_ACCESS"
  syntax ExceptionalStatusCode ::= "EVMC_INVALID_INSTRUCTION"
  syntax ExceptionalStatusCode ::= "EVMC_FAILURE"
  syntax ExceptionalStatusCode ::= "EVMC_CALL_DEPTH_EXCEEDED"
  syntax ExceptionalStatusCode ::= "EVMC_BALANCE_UNDERFLOW"
  syntax ExceptionalStatusCode ::= "EVMC_BAD_JUMP_DESTINATION"
  syntax ExceptionalStatusCode ::= "EVMC_ACCOUNT_ALREADY_EXISTS"
  syntax EndStatusCode ::= ExceptionalStatusCode
  syntax EndStatusCode ::= "EVMC_SUCCESS"
  syntax EndStatusCode ::= "EVMC_REVERT"
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_UNDEFINED_INSTRUCTION_NETWORK_ExceptionalStatusCode`(.KList))=>#token("\"EVMC_UNDEFINED_INSTRUCTION\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(52,10,52,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_SUCCESS_NETWORK_EndStatusCode`(.KList))=>#token("\"EVMC_SUCCESS\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(76,10,76,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_STATIC_MODE_VIOLATION_NETWORK_ExceptionalStatusCode`(.KList))=>#token("\"EVMC_STATIC_MODE_VIOLATION\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(59,10,59,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_STACK_UNDERFLOW_NETWORK_ExceptionalStatusCode`(.KList))=>#token("\"EVMC_STACK_UNDERFLOW\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(56,10,56,81)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_STACK_OVERFLOW_NETWORK_ExceptionalStatusCode`(.KList))=>#token("\"EVMC_STACK_OVERFLOW\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(55,10,55,80)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_REVERT_NETWORK_EndStatusCode`(.KList))=>#token("\"EVMC_REVERT\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(77,10,77,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_REJECTED_NETWORK_StatusCode`(.KList))=>#token("\"EVMC_REJECTED\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(94,10,94,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_PRECOMPILE_FAILURE_NETWORK_ExceptionalStatusCode`(.KList))=>#token("\"EVMC_PRECOMPILE_FAILURE\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(60,10,60,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_OUT_OF_GAS_NETWORK_ExceptionalStatusCode`(.KList))=>#token("\"EVMC_OUT_OF_GAS\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(53,10,53,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_NONCE_EXCEEDED_NETWORK_ExceptionalStatusCode`(.KList))=>#token("\"EVMC_NONCE_EXCEEDED\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(61,10,61,80)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_INVALID_MEMORY_ACCESS_NETWORK_ExceptionalStatusCode`(.KList))=>#token("\"EVMC_INVALID_MEMORY_ACCESS\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(58,10,58,87)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_INVALID_INSTRUCTION_NETWORK_ExceptionalStatusCode`(.KList))=>#token("\"EVMC_INVALID_INSTRUCTION\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(51,10,51,85)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_INTERNAL_ERROR_NETWORK_StatusCode`(.KList))=>#token("\"EVMC_INTERNAL_ERROR\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(95,10,95,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_FAILURE_NETWORK_ExceptionalStatusCode`(.KList))=>#token("\"EVMC_FAILURE\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(50,10,50,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_CALL_DEPTH_EXCEEDED_NETWORK_ExceptionalStatusCode`(.KList))=>#token("\"EVMC_CALL_DEPTH_EXCEEDED\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(57,10,57,85)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_BALANCE_UNDERFLOW_NETWORK_ExceptionalStatusCode`(.KList))=>#token("\"EVMC_BALANCE_UNDERFLOW\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(113,10,113,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_BAD_JUMP_DESTINATION_NETWORK_ExceptionalStatusCode`(.KList))=>#token("\"EVMC_BAD_JUMP_DESTINATION\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(54,10,54,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`EVMC_ACCOUNT_ALREADY_EXISTS_NETWORK_ExceptionalStatusCode`(.KList))=>#token("\"EVMC_ACCOUNT_ALREADY_EXISTS\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(112,10,112,89)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StatusCode2String(_)_NETWORK_String_StatusCode`(`.StatusCode_NETWORK_StatusCode`(.KList))=>#token("\"\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(96,10,96,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module PROGRAM-LISTS [digest(�8�#u7(�:�52�����@�:��zT�%�'�), org.kframework.attributes.Location(Location(408,1,420,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports SORT-K
endmodule


module RECORD-PRODUCTIONS [digest(��1���A�_��9�[Y�*&^��|��M), org.kframework.attributes.Location(Location(429,1,434,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
endmodule


module REQUIRES-ENSURES [digest(Q,��r��X�{J��_uX�Q3(���~BF), org.kframework.attributes.Location(Location(346,1,357,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports BASIC-K
  syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]
  syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol]
  syntax #RuleContent ::= #RuleBody "when" Bool "ensures" Bool [klabel(#ruleRequiresEnsures), symbol]
  syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]
  syntax #RuleContent ::= #RuleBody "requires" Bool "ensures" Bool [klabel(#ruleRequiresEnsures), symbol]
  syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol]
  syntax #RuleBody ::= K
endmodule


module RULE-CELLS [digest(�(1��U������,�݄\�w��6d.�), org.kframework.attributes.Location(Location(275,1,296,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports RULE-LISTS
  imports KCELLS
  syntax Int [org.kframework.attributes.Location(Location(286,3,286,13)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  syntax GeneratedCounterCell ::= "<generatedCounter>" Int "</generatedCounter>" [cell, internal, klabel(<generatedCounter>), symbol]
  syntax #OptionalDots ::= "..." [klabel(#dots), symbol]
  syntax #OptionalDots ::= "" [klabel(#noDots), symbol]
endmodule


module RULE-LISTS [digest("�'���ear���2�À���]�T�B�uh�), org.kframework.attributes.Location(Location(422,1,427,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
endmodule


module RULE-TAG-SYNTAX [digest(6<���i�O��s}l��P���`���D.), org.kframework.attributes.Location(Location(3037,1,3041,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports BUILTIN-ID-TOKENS
  syntax #RuleTag ::= #LowerId [token]
endmodule


module SCHEDULE [digest(�C�|��\�%���$3#U�N\&.�ǻ#^), org.kframework.attributes.Location(Location(20,1,347,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md))]
  imports EVM-DATA
  syntax ScheduleFlag ::= "Gzerovaluenewaccountgas"
  syntax ScheduleFlag ::= "Gstaticcalldepth"
  syntax ScheduleFlag ::= "Gselfdestructnewaccount"
  syntax ScheduleFlag ::= "Ghasstaticcall"
  syntax ScheduleFlag ::= "Ghassstorestipend"
  syntax ScheduleFlag ::= "Ghasshift"
  syntax ScheduleFlag ::= "Ghasselfbalance"
  syntax ScheduleFlag ::= "Ghasrevert"
  syntax ScheduleFlag ::= "Ghasreturndata"
  syntax ScheduleFlag ::= "Ghasrejectedfirstbyte"
  syntax ScheduleFlag ::= "Ghasprevrandao"
  syntax ScheduleFlag ::= "Ghasextcodehash"
  syntax ScheduleFlag ::= "Ghasdirtysstore"
  syntax ScheduleFlag ::= "Ghascreate2"
  syntax ScheduleFlag ::= "Ghaschainid"
  syntax ScheduleFlag ::= "Ghasbasefee"
  syntax ScheduleFlag ::= "Ghasaccesslist"
  syntax ScheduleFlag ::= "Gemptyisnonexistent"
  syntax ScheduleConst ::= "maxCodeSize"
  syntax ScheduleConst ::= "Rsstoreclear"
  syntax ScheduleConst ::= "Rselfdestruct"
  syntax ScheduleConst ::= "Rmaxquotient"
  syntax ScheduleConst ::= "Rb"
  syntax ScheduleConst ::= "Gzero"
  syntax ScheduleConst ::= "Gwarmstorageread"
  syntax ScheduleConst ::= "Gverylow"
  syntax ScheduleConst ::= "Gtxdatazero"
  syntax ScheduleConst ::= "Gtxdatanonzero"
  syntax ScheduleConst ::= "Gtxcreate"
  syntax ScheduleConst ::= "Gtransaction"
  syntax ScheduleConst ::= "Gsstoreset"
  syntax ScheduleConst ::= "Gsstorereset"
  syntax ScheduleConst ::= "Gsload"
  syntax ScheduleConst ::= "Gsha3word"
  syntax ScheduleConst ::= "Gsha3"
  syntax ScheduleConst ::= "Gselfdestruct"
  syntax ScheduleConst ::= "Gquaddivisor"
  syntax ScheduleConst ::= "Gquadcoeff"
  syntax ScheduleConst ::= "Gnewaccount"
  syntax ScheduleConst ::= "Gmid"
  syntax ScheduleConst ::= "Gmemory"
  syntax ScheduleConst ::= "Glow"
  syntax ScheduleConst ::= "Glogtopic"
  syntax ScheduleConst ::= "Glogdata"
  syntax ScheduleConst ::= "Glog"
  syntax ScheduleConst ::= "Gjumpdest"
  syntax ScheduleConst ::= "Ghigh"
  syntax ScheduleConst ::= "Gfround"
  syntax ScheduleConst ::= "Gextcodesize"
  syntax ScheduleConst ::= "Gextcodecopy"
  syntax ScheduleConst ::= "Gexpbyte"
  syntax ScheduleConst ::= "Gexp"
  syntax ScheduleConst ::= "Gecpairconst"
  syntax ScheduleConst ::= "Gecpaircoeff"
  syntax ScheduleConst ::= "Gecmul"
  syntax ScheduleConst ::= "Gecadd"
  syntax ScheduleConst ::= "Gcreate"
  syntax ScheduleConst ::= "Gcopy"
  syntax ScheduleConst ::= "Gcoldsload"
  syntax ScheduleConst ::= "Gcoldaccountaccess"
  syntax ScheduleConst ::= "Gcodedeposit"
  syntax ScheduleConst ::= "Gcallvalue"
  syntax ScheduleConst ::= "Gcallstipend"
  syntax ScheduleConst ::= "Gcall"
  syntax ScheduleConst ::= "Gblockhash"
  syntax ScheduleConst ::= "Gbase"
  syntax ScheduleConst ::= "Gbalance"
  syntax ScheduleConst ::= "Gaccessliststoragekey"
  syntax ScheduleConst ::= "Gaccesslistaddress"
  syntax Schedule ::= "TANGERINE_WHISTLE" [klabel(TANGERINE_WHISTLE_EVM), smtlib(schedule_TANGERINE_WHISTLE), symbol]
  syntax Schedule ::= "SPURIOUS_DRAGON" [klabel(SPURIOUS_DRAGON_EVM), smtlib(schedule_SPURIOUS_DRAGON), symbol]
  syntax Schedule ::= "PETERSBURG" [klabel(PETERSBURG_EVM), smtlib(schedule_PETERSBURG), symbol]
  syntax Schedule ::= "MERGE" [klabel(MERGE_EVM), smtlib(schedule_MERGE), symbol]
  syntax Schedule ::= "LONDON" [klabel(LONDON_EVM), smtlib(schedule_LONDON), symbol]
  syntax Schedule ::= "ISTANBUL" [klabel(ISTANBUL_EVM), smtlib(schedule_ISTANBUL), symbol]
  syntax Schedule ::= "HOMESTEAD" [klabel(HOMESTEAD_EVM), smtlib(schedule_HOMESTEAD), symbol]
  syntax Schedule ::= "FRONTIER" [klabel(FRONTIER_EVM), smtlib(schedule_FRONTIER), symbol]
  syntax Schedule ::= "DEFAULT" [klabel(DEFAULT_EVM), smtlib(schedule_DEFAULT), symbol]
  syntax Schedule ::= "CONSTANTINOPLE" [klabel(CONSTANTINOPLE_EVM), smtlib(schedule_CONSTANTINOPLE), symbol]
  syntax Schedule ::= "BYZANTIUM" [klabel(BYZANTIUM_EVM), smtlib(schedule_BYZANTIUM), symbol]
  syntax Schedule ::= "BERLIN" [klabel(BERLIN_EVM), smtlib(schedule_BERLIN), symbol]
  syntax Int ::= ScheduleConst "<" Schedule ">" [function, total]
  syntax Bool ::= ScheduleFlag "<<" Schedule ">>" [function, total]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`maxCodeSize_SCHEDULE_ScheduleConst`(.KList),`SPURIOUS_DRAGON_EVM`(.KList))=>#token("24576","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(193,10,193,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`maxCodeSize_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>`_-Int_`(`_^Int_`(#token("2","Int"),#token("32","Int")),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(111,10,111,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rsstoreclear_SCHEDULE_ScheduleConst`(.KList),`LONDON_EVM`(.KList))=>`_+Int_`(`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstorereset_SCHEDULE_ScheduleConst`(.KList),`LONDON_EVM`(.KList)),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gaccessliststoragekey_SCHEDULE_ScheduleConst`(.KList),`LONDON_EVM`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(318,10,318,99)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rsstoreclear_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("15000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(73,10,73,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rselfdestruct_SCHEDULE_ScheduleConst`(.KList),`LONDON_EVM`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(317,10,317,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rselfdestruct_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("24000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(87,10,87,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rmaxquotient_SCHEDULE_ScheduleConst`(.KList),`LONDON_EVM`(.KList))=>#token("5","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(319,10,319,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rmaxquotient_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(121,10,121,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rb_SCHEDULE_ScheduleConst`(.KList),`MERGE_EVM`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(339,10,339,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rb_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>`_*Int_`(#token("5","Int"),`_^Int_`(#token("10","Int"),#token("18","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(112,10,112,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rb_SCHEDULE_ScheduleConst`(.KList),`CONSTANTINOPLE_EVM`(.KList))=>`_*Int_`(#token("2","Int"),`eth_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(224,10,224,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Rb_SCHEDULE_ScheduleConst`(.KList),`BYZANTIUM_EVM`(.KList))=>`_*Int_`(#token("3","Int"),`eth_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(208,10,208,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gzero_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(58,10,58,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gwarmstorageread_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(116,10,116,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gwarmstorageread_SCHEDULE_ScheduleConst`(.KList),`BERLIN_EVM`(.KList))=>#token("100","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(289,10,289,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gverylow_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(60,10,60,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gtxdatazero_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("4","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(96,10,96,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gtxdatanonzero_SCHEDULE_ScheduleConst`(.KList),`ISTANBUL_EVM`(.KList))=>#token("16","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(257,10,257,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gtxdatanonzero_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("68","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(97,10,97,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gtxcreate_SCHEDULE_ScheduleConst`(.KList),`FRONTIER_EVM`(.KList))=>#token("21000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(148,10,148,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gtxcreate_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("53000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(95,10,95,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gtransaction_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("21000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(94,10,94,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstoreset_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("20000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(71,10,71,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstorereset_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("5000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(72,10,72,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsstorereset_SCHEDULE_ScheduleConst`(.KList),`BERLIN_EVM`(.KList))=>`_-Int_`(#token("5000","Int"),`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcoldsload_SCHEDULE_ScheduleConst`(.KList),`BERLIN_EVM`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(291,10,291,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsload_SCHEDULE_ScheduleConst`(.KList),`TANGERINE_WHISTLE_EVM`(.KList))=>#token("200","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(170,10,170,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsload_SCHEDULE_ScheduleConst`(.KList),`ISTANBUL_EVM`(.KList))=>#token("800","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(258,10,258,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsload_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("50","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(70,10,70,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsload_SCHEDULE_ScheduleConst`(.KList),`BERLIN_EVM`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gwarmstorageread_SCHEDULE_ScheduleConst`(.KList),`BERLIN_EVM`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(290,10,290,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsha3word_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("6","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(68,10,68,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gsha3_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("30","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(67,10,67,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gselfdestruct_SCHEDULE_ScheduleConst`(.KList),`TANGERINE_WHISTLE_EVM`(.KList))=>#token("5000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(172,10,172,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gselfdestruct_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(86,10,86,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gquaddivisor_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("20","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(92,10,92,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gquaddivisor_SCHEDULE_ScheduleConst`(.KList),`BERLIN_EVM`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(292,10,292,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gquadcoeff_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("512","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(90,10,90,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gnewaccount_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("25000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(82,10,82,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gmid_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("8","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(62,10,62,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gmemory_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(89,10,89,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Glow_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("5","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(61,10,61,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Glogtopic_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("375","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(77,10,77,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Glogdata_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("8","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(76,10,76,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Glog_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("375","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(75,10,75,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gjumpdest_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(99,10,99,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Ghigh_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("10","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(63,10,63,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gfround_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(109,10,109,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gextcodesize_SCHEDULE_ScheduleConst`(.KList),`TANGERINE_WHISTLE_EVM`(.KList))=>#token("700","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(173,10,173,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gextcodesize_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("20","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(102,10,102,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gextcodecopy_SCHEDULE_ScheduleConst`(.KList),`TANGERINE_WHISTLE_EVM`(.KList))=>#token("700","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(174,10,174,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gextcodecopy_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("20","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(103,10,103,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gexpbyte_SCHEDULE_ScheduleConst`(.KList),`SPURIOUS_DRAGON_EVM`(.KList))=>#token("50","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(192,10,192,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gexpbyte_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("10","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(66,10,66,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gexp_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("10","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(65,10,65,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gecpairconst_SCHEDULE_ScheduleConst`(.KList),`ISTANBUL_EVM`(.KList))=>#token("45000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(255,10,255,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gecpairconst_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("100000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(107,10,107,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gecpaircoeff_SCHEDULE_ScheduleConst`(.KList),`ISTANBUL_EVM`(.KList))=>#token("34000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(256,10,256,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gecpaircoeff_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("80000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(108,10,108,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gecmul_SCHEDULE_ScheduleConst`(.KList),`ISTANBUL_EVM`(.KList))=>#token("6000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(254,10,254,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gecmul_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("40000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(106,10,106,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gecadd_SCHEDULE_ScheduleConst`(.KList),`ISTANBUL_EVM`(.KList))=>#token("150","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(253,10,253,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gecadd_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("500","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(105,10,105,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcreate_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("32000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(84,10,84,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcopy_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(91,10,91,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcoldsload_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(114,10,114,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcoldsload_SCHEDULE_ScheduleConst`(.KList),`BERLIN_EVM`(.KList))=>#token("2100","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(287,10,287,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcoldaccountaccess_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(115,10,115,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcoldaccountaccess_SCHEDULE_ScheduleConst`(.KList),`BERLIN_EVM`(.KList))=>#token("2600","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(288,10,288,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcodedeposit_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("200","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(85,10,85,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcallvalue_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("9000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(81,10,81,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcallstipend_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("2300","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(80,10,80,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcall_SCHEDULE_ScheduleConst`(.KList),`TANGERINE_WHISTLE_EVM`(.KList))=>#token("700","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(171,10,171,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gcall_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("40","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(79,10,79,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gblockhash_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("20","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(101,10,101,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbase_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(59,10,59,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbalance_SCHEDULE_ScheduleConst`(.KList),`TANGERINE_WHISTLE_EVM`(.KList))=>#token("400","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(169,10,169,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbalance_SCHEDULE_ScheduleConst`(.KList),`ISTANBUL_EVM`(.KList))=>#token("700","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(259,10,259,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gbalance_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("20","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(100,10,100,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gaccessliststoragekey_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(118,10,118,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gaccessliststoragekey_SCHEDULE_ScheduleConst`(.KList),`BERLIN_EVM`(.KList))=>#token("1900","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(293,10,293,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gaccesslistaddress_SCHEDULE_ScheduleConst`(.KList),`DEFAULT_EVM`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(119,10,119,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(`Gaccesslistaddress_SCHEDULE_ScheduleConst`(.KList),`BERLIN_EVM`(.KList))=>#token("2400","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(294,10,294,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`TANGERINE_WHISTLE_EVM`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`HOMESTEAD_EVM`(.KList)) requires `notBool_`(`_orBool_`(`_orBool_`(`_orBool_`(`_orBool_`(`_orBool_`(`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gbalance_SCHEDULE_ScheduleConst`(.KList)),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gsload_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gcall_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gselfdestruct_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gextcodesize_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gextcodecopy_SCHEDULE_ScheduleConst`(.KList)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(176,10,179,30)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`SPURIOUS_DRAGON_EVM`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`TANGERINE_WHISTLE_EVM`(.KList)) requires `_andBool_`(`_=/=K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gexpbyte_SCHEDULE_ScheduleConst`(.KList)),`_=/=K_`(#SemanticCastToScheduleConst(SCHEDCONST),`maxCodeSize_SCHEDULE_ScheduleConst`(.KList))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(195,10,195,147)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`PETERSBURG_EVM`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`CONSTANTINOPLE_EVM`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(241,10,241,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`MERGE_EVM`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`LONDON_EVM`(.KList)) requires `notBool_`(`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Rb_SCHEDULE_ScheduleConst`(.KList))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(340,10,341,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`LONDON_EVM`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`BERLIN_EVM`(.KList)) requires `notBool_`(`_orBool_`(`_orBool_`(`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Rselfdestruct_SCHEDULE_ScheduleConst`(.KList)),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Rsstoreclear_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Rmaxquotient_SCHEDULE_ScheduleConst`(.KList)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(320,10,324,25)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`ISTANBUL_EVM`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`PETERSBURG_EVM`(.KList)) requires `notBool_`(`_orBool_`(`_orBool_`(`_orBool_`(`_orBool_`(`_orBool_`(`_orBool_`(`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gecadd_SCHEDULE_ScheduleConst`(.KList)),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gecmul_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gecpairconst_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gecpaircoeff_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gtxdatanonzero_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gsload_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gbalance_SCHEDULE_ScheduleConst`(.KList)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(260,10,268,25)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`HOMESTEAD_EVM`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`DEFAULT_EVM`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(159,10,159,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`FRONTIER_EVM`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`DEFAULT_EVM`(.KList)) requires `_=/=K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gtxcreate_SCHEDULE_ScheduleConst`(.KList)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(149,10,149,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`CONSTANTINOPLE_EVM`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`BYZANTIUM_EVM`(.KList)) requires `notBool_`(`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Rb_SCHEDULE_ScheduleConst`(.KList))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(225,10,226,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`BYZANTIUM_EVM`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`SPURIOUS_DRAGON_EVM`(.KList)) requires `notBool_`(`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Rb_SCHEDULE_ScheduleConst`(.KList))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(209,10,210,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`BERLIN_EVM`(.KList))=>`_<_>_SCHEDULE_Int_ScheduleConst_Schedule`(#SemanticCastToScheduleConst(SCHEDCONST),`ISTANBUL_EVM`(.KList)) requires `notBool_`(`_orBool_`(`_orBool_`(`_orBool_`(`_orBool_`(`_orBool_`(`_orBool_`(`_orBool_`(`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gcoldsload_SCHEDULE_ScheduleConst`(.KList)),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gcoldaccountaccess_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gwarmstorageread_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gsload_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gsstorereset_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gquaddivisor_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gaccessliststoragekey_SCHEDULE_ScheduleConst`(.KList))),`_==K_`(#SemanticCastToScheduleConst(SCHEDCONST),`Gaccesslistaddress_SCHEDULE_ScheduleConst`(.KList)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(296,10,305,25)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gzerovaluenewaccountgas_SCHEDULE_ScheduleFlag`(.KList),`SPURIOUS_DRAGON_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(198,10,198,64)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gzerovaluenewaccountgas_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(126,10,126,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gstaticcalldepth_SCHEDULE_ScheduleFlag`(.KList),`TANGERINE_WHISTLE_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(182,10,182,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gstaticcalldepth_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(124,10,124,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gselfdestructnewaccount_SCHEDULE_ScheduleFlag`(.KList),`TANGERINE_WHISTLE_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(181,10,181,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gselfdestructnewaccount_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(123,10,123,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasstaticcall_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(129,10,129,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasstaticcall_SCHEDULE_ScheduleFlag`(.KList),`BYZANTIUM_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(214,10,214,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghassstorestipend_SCHEDULE_ScheduleFlag`(.KList),`ISTANBUL_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(272,10,272,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghassstorestipend_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(132,10,132,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasshift_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(130,10,130,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasshift_SCHEDULE_ScheduleFlag`(.KList),`CONSTANTINOPLE_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(228,10,228,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasselfbalance_SCHEDULE_ScheduleFlag`(.KList),`ISTANBUL_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(270,10,270,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasselfbalance_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(135,10,135,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasrevert_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(127,10,127,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasrevert_SCHEDULE_ScheduleFlag`(.KList),`BYZANTIUM_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(212,10,212,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasreturndata_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(128,10,128,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasreturndata_SCHEDULE_ScheduleFlag`(.KList),`BYZANTIUM_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(213,10,213,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasrejectedfirstbyte_SCHEDULE_ScheduleFlag`(.KList),`LONDON_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(327,10,327,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasrejectedfirstbyte_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(139,10,139,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasprevrandao_SCHEDULE_ScheduleFlag`(.KList),`MERGE_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(343,10,343,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasprevrandao_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(140,10,140,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasextcodehash_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(134,10,134,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasextcodehash_SCHEDULE_ScheduleFlag`(.KList),`CONSTANTINOPLE_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(231,10,231,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasdirtysstore_SCHEDULE_ScheduleFlag`(.KList),`PETERSBURG_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(243,10,243,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasdirtysstore_SCHEDULE_ScheduleFlag`(.KList),`ISTANBUL_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(271,10,271,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasdirtysstore_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(131,10,131,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasdirtysstore_SCHEDULE_ScheduleFlag`(.KList),`CONSTANTINOPLE_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(229,10,229,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghascreate2_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(133,10,133,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghascreate2_SCHEDULE_ScheduleFlag`(.KList),`CONSTANTINOPLE_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(230,10,230,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghaschainid_SCHEDULE_ScheduleFlag`(.KList),`ISTANBUL_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(273,10,273,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghaschainid_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(136,10,136,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasbasefee_SCHEDULE_ScheduleFlag`(.KList),`LONDON_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(326,10,326,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasbasefee_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(138,10,138,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(137,10,137,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList),`BERLIN_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(307,10,307,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gemptyisnonexistent_SCHEDULE_ScheduleFlag`(.KList),`SPURIOUS_DRAGON_EVM`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(197,10,197,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(`Gemptyisnonexistent_SCHEDULE_ScheduleFlag`(.KList),`DEFAULT_EVM`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(125,10,125,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`PETERSBURG_EVM`(.KList))=>`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`CONSTANTINOPLE_EVM`(.KList)) requires `notBool_`(`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghasdirtysstore_SCHEDULE_ScheduleFlag`(.KList))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(244,10,245,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`MERGE_EVM`(.KList))=>`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`LONDON_EVM`(.KList)) requires `notBool_`(`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghasprevrandao_SCHEDULE_ScheduleFlag`(.KList))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(344,10,345,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`LONDON_EVM`(.KList))=>`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`BERLIN_EVM`(.KList)) requires `notBool_`(`_orBool_`(`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghasbasefee_SCHEDULE_ScheduleFlag`(.KList)),`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghasrejectedfirstbyte_SCHEDULE_ScheduleFlag`(.KList)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(328,10,331,25)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`ISTANBUL_EVM`(.KList))=>`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`PETERSBURG_EVM`(.KList)) requires `notBool_`(`_orBool_`(`_orBool_`(`_orBool_`(`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghasselfbalance_SCHEDULE_ScheduleFlag`(.KList)),`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghasdirtysstore_SCHEDULE_ScheduleFlag`(.KList))),`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghassstorestipend_SCHEDULE_ScheduleFlag`(.KList))),`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghaschainid_SCHEDULE_ScheduleFlag`(.KList)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(274,10,279,25)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`HOMESTEAD_EVM`(.KList))=>`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`DEFAULT_EVM`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(161,10,161,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`FRONTIER_EVM`(.KList))=>`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`DEFAULT_EVM`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(151,10,151,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`CONSTANTINOPLE_EVM`(.KList))=>`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`BYZANTIUM_EVM`(.KList)) requires `notBool_`(`_orBool_`(`_orBool_`(`_orBool_`(`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghasshift_SCHEDULE_ScheduleFlag`(.KList)),`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghasdirtysstore_SCHEDULE_ScheduleFlag`(.KList))),`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghascreate2_SCHEDULE_ScheduleFlag`(.KList))),`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghasextcodehash_SCHEDULE_ScheduleFlag`(.KList)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(232,10,233,158)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`BYZANTIUM_EVM`(.KList))=>`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`SPURIOUS_DRAGON_EVM`(.KList)) requires `notBool_`(`_orBool_`(`_orBool_`(`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghasrevert_SCHEDULE_ScheduleFlag`(.KList)),`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghasreturndata_SCHEDULE_ScheduleFlag`(.KList))),`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghasstaticcall_SCHEDULE_ScheduleFlag`(.KList)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(215,10,216,124)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`BERLIN_EVM`(.KList))=>`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDFLAG),`ISTANBUL_EVM`(.KList)) requires `notBool_`(`_==K_`(#SemanticCastToScheduleFlag(SCHEDFLAG),`Ghasaccesslist_SCHEDULE_ScheduleFlag`(.KList))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(308,10,309,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDCONST),`TANGERINE_WHISTLE_EVM`(.KList))=>`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDCONST),`HOMESTEAD_EVM`(.KList)) requires `notBool_`(`_orBool_`(`_==K_`(#SemanticCastToScheduleFlag(SCHEDCONST),`Gselfdestructnewaccount_SCHEDULE_ScheduleFlag`(.KList)),`_==K_`(#SemanticCastToScheduleFlag(SCHEDCONST),`Gstaticcalldepth_SCHEDULE_ScheduleFlag`(.KList)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(183,10,184,110)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDCONST),`SPURIOUS_DRAGON_EVM`(.KList))=>`_<<_>>_SCHEDULE_Bool_ScheduleFlag_Schedule`(#SemanticCastToScheduleFlag(SCHEDCONST),`TANGERINE_WHISTLE_EVM`(.KList)) requires `notBool_`(`_orBool_`(`_==K_`(#SemanticCastToScheduleFlag(SCHEDCONST),`Gemptyisnonexistent_SCHEDULE_ScheduleFlag`(.KList)),`_==K_`(#SemanticCastToScheduleFlag(SCHEDCONST),`Gzerovaluenewaccountgas_SCHEDULE_ScheduleFlag`(.KList)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(199,10,200,113)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/schedule.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
endmodule


module SCRIPT-CONTRACT [digest(넮�����E�O��9���l9n��X�), org.kframework.attributes.Location(Location(3,1,38,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k))]
  imports FOUNDRY
  syntax ScriptMethod ::= "vm" "(" ")" [klabel(method_Script_vm_), symbol]
  syntax ScriptMethod ::= "IS_SCRIPT" "(" ")" [klabel(method_Script_IS_SCRIPT_), symbol]
  syntax ScriptField ::= "IS_SCRIPT" [klabel(field_Script_IS_SCRIPT), symbol]
  syntax ScriptContract ::= "Script" [klabel(contract_Script), symbol]
  syntax Field ::= ScriptField
  syntax Contract ::= ScriptContract
  syntax Bytes ::= ScriptContract "." ScriptMethod [function, klabel(method_Script), symbol]
  rule binRuntime(`contract_Script`(.KList))=>`#parseByteStack(_)_SERIALIZATION_Bytes_String`(#token("\"0x\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(10,11,10,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Script`(`contract_Script`(.KList),`method_Script_vm_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"vm\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(29,11,29,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Script`(`contract_Script`(.KList),`method_Script_IS_SCRIPT_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"IS_SCRIPT\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(26,11,26,82)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `contract_access_loc`(`contract_access_field`(`contract_Script`(.KList),`field_Script_IS_SCRIPT`(.KList)))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(17,11,17,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"vm()\"","String"))=>#token("980845667","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(35,11,35,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"IS_SCRIPT()\"","String"))=>#token("4174167879","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(32,11,32,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module SCRIPT-VERIFICATION [digest(��zM�/�8��б{Q����q�e�T7), org.kframework.attributes.Location(Location(19,1,24,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/foundry.k))]
  imports SCRIPT-CONTRACT
endmodule


module SERIALIZATION [digest(ڿ]7�׉�L�P���#n�A��̥��D?��� ), org.kframework.attributes.Location(Location(11,1,695,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md))]
  imports STRING-BUFFER
  imports KRYPTO
  imports JSON-EXT
  imports EVM-TYPES
  syntax String ::= "Raw2Hex" "(" String ")" [function, klabel(Raw2Hex)]
  syntax String ::= "MerkleMapRLP" "(" Map "," Int ")" [function, klabel(MerkleMapRLP)]
  syntax String ::= "Hex2Raw" "(" String ")" [function, klabel(Hex2Raw)]
  syntax String ::= "#unparseQuantity" "(" Int ")" [function, klabel(#unparseQuantity)]
  syntax String ::= "#unparseDataBytes" "(" Bytes ")" [function, klabel(#unparseDataBytes)]
  syntax String ::= "#unparseData" "(" Int "," Int ")" [function, klabel(#unparseData)]
  syntax String ::= "#unparseByteStack" "(" Bytes ")" [function, klabel(unparseByteStack), symbol]
  syntax String ::= "#rlpMerkleH" "(" String ")" [function, klabel(MerkleRLPAux)]
  syntax String ::= "#rlpEncodeWord" "(" Int ")" [function, klabel(#rlpEncodeWord)]
  syntax String ::= "#rlpEncodeTxData" "(" TxData ")" [function, klabel(#rlpEncodeTxData)]
  syntax String ::= "#rlpEncodeTopics" "(" List "," StringBuffer ")" [function, klabel(#rlpEncodeTopics)]
  syntax String ::= "#rlpEncodeString" "(" String ")" [function, klabel(#rlpEncodeString)]
  syntax String ::= "#rlpEncodeReceipt" "(" Int "," Int "," Bytes "," List ")" [function, klabel(#rlpEncodeReceipt)]
  syntax String ::= "#rlpEncodeMerkleTree" "(" MerkleTree ")" [function, klabel(#rlpEncodeMerkleTree)]
  syntax String ::= "#rlpEncodeLogsAux" "(" List "," StringBuffer ")" [function, klabel(#rlpEncodeLogsAux)]
  syntax String ::= "#rlpEncodeLogs" "(" List ")" [function, klabel(#rlpEncodeLogs)]
  syntax String ::= "#rlpEncodeLength" "(" String "," Int "," String ")" [function, klabel(#rlpEncodeLengthAux)]
  syntax String ::= "#rlpEncodeLength" "(" String "," Int ")" [function, klabel(#rlpEncodeLength)]
  syntax String ::= "#rlpEncodeInt" "(" Int ")" [function, klabel(#rlpEncodeInt)]
  syntax String ::= "#rlpEncodeFullAccount" "(" Int "," Int "," Map "," Bytes ")" [function, klabel(#rlpEncodeFullAccount)]
  syntax String ::= "#rlpEncodeBytes" "(" Bytes ")" [function, klabel(#rlpEncodeBytes)]
  syntax String ::= "#rlpEncodeAddress" "(" Account ")" [function, klabel(#rlpEncodeAddress)]
  syntax String ::= "#rlpEncode" "(" JSONs "," StringBuffer ")" [function, klabel(#rlpEncodeJsonAux)]
  syntax String ::= "#rlpEncode" "(" JSON ")" [function, klabel(#rlpEncode)]
  syntax String ::= "#padByte" "(" String ")" [function, klabel(#padByte)]
  syntax String ::= "#hashTxData" "(" TxData ")" [function, klabel(#hashTxData)]
  syntax String ::= "#hashSignedTx" "(" Int "," Int "," Int "," Account "," Int "," Bytes "," Int "," Bytes "," Bytes ")" [function, klabel(#hashSignedTx)]
  syntax String ::= "#emptyContractRLP" [function]
  syntax String ::= "#alignHexString" "(" String ")" [function, klabel(#alignHexString), total]
  syntax MerkleTree ::= "MerkleUpdateMapAux" "(" MerkleTree "," Map "," List ")" [function, klabel(MerkleUpdateMapAux)]
  syntax MerkleTree ::= "MerkleUpdateMap" "(" MerkleTree "," Map ")" [function, klabel(MerkleUpdateMap)]
  syntax MerkleTree ::= "MerkleUpdate" "(" MerkleTree "," String "," String ")" [function, klabel(MerkleUpdate)]
  syntax MerkleTree ::= "MerkleUpdate" "(" MerkleTree "," Bytes "," String ")" [function, klabel(MerkleUpdateAux)]
  syntax MerkleTree ::= "MerklePut" "(" MerkleTree "," Bytes "," String ")" [function, klabel(MerklePut)]
  syntax MerkleTree ::= "MerkleLeaf" "(" Bytes "," String ")" [klabel(MerkleLeaf)]
  syntax MerkleTree ::= "MerkleExtension" "(" Bytes "," MerkleTree ")" [klabel(MerkleExtension)]
  syntax MerkleTree ::= "MerkleDelete" "(" MerkleTree "," Bytes ")" [function, klabel(MerkleDelete)]
  syntax MerkleTree ::= "MerkleCheck" "(" MerkleTree ")" [function, klabel(MerkleCheck)]
  syntax MerkleTree ::= "MerkleBranch" "(" Map "," String ")" [klabel(MerkleBranch)]
  syntax MerkleTree ::= ".MerkleTree"
  syntax MerkleTree ::= "#storageRoot" "(" Map ")" [function, klabel(#storageRoot)]
  syntax MerkleTree ::= "#merkleUpdateBranch" "(" Map "," String "," Int "," Bytes "," String ")" [function, klabel(#merkleUpdateBranch)]
  syntax MerkleTree ::= "#merkleExtensionSplitter" "(" Bytes "," Bytes "," MerkleTree "," Bytes "," String ")" [function, klabel(#merkleExtensionSplitter)]
  syntax MerkleTree ::= "#merkleExtensionBuilderAux" "(" Bytes "," Bytes "," String "," Bytes "," String ")" [function, klabel(#merkleExtensionBuilderAux)]
  syntax MerkleTree ::= "#merkleExtensionBuilder" "(" Bytes "," Bytes "," String "," Bytes "," String ")" [function, klabel(#merkleExtensionBuilder)]
  syntax MerkleTree ::= "#merkleExtensionBrancher" "(" MerkleTree "," Bytes "," MerkleTree ")" [function, klabel(#merkleExtensionBrancher)]
  syntax Map ::= "#precompiledAccountsMapAux" "(" List "," Map ")" [function, klabel(#precompiledAccountsMapAux)]
  syntax Map ::= "#precompiledAccountsMap" "(" Set ")" [function, klabel(#precompiledAccountsMap)]
  syntax Map ::= "#parseMap" "(" JSON ")" [function, klabel(#parseMap)]
  syntax Map ::= "#intMap2StorageMapAux" "(" Map "," Map "," List ")" [function, klabel(#intMap2StorageMapAux)]
  syntax Map ::= "#intMap2StorageMap" "(" Map ")" [function, klabel(#intMap2StorageMap)]
  syntax Map ::= "#cleanBranchMapAux" "(" Map "," List "," Set ")" [function, klabel(#cleanBranchMapAux)]
  syntax Map ::= "#cleanBranchMap" "(" Map ")" [function, klabel(#cleanBranchMap)]
  syntax List ::= "#parseAccessListStorageKeys" "(" JSONs "," List ")" [function, klabel(#parseAccessListStorageKeysAux)]
  syntax List ::= "#parseAccessListStorageKeys" "(" JSONs ")" [function, klabel(#parseAccessListStorageKeys)]
  syntax LengthPrefixType ::= "#str"
  syntax LengthPrefixType ::= "#list"
  syntax LengthPrefix ::= LengthPrefixType "(" Int "," Int ")"
  syntax LengthPrefix ::= "#decodeLengthPrefixLength" "(" LengthPrefixType "," String "," Int "," Int ")" [function, klabel(#decodeLengthPrefixLength)]
  syntax LengthPrefix ::= "#decodeLengthPrefixLength" "(" LengthPrefixType "," Int "," Int "," Int ")" [function, klabel(#decodeLengthPrefixLengthAux)]
  syntax LengthPrefix ::= "#decodeLengthPrefix" "(" String "," Int "," Int ")" [function, klabel(#decodeLengthPrefixAux)]
  syntax LengthPrefix ::= "#decodeLengthPrefix" "(" String "," Int ")" [function, klabel(#decodeLengthPrefix)]
  syntax KItem ::= MerkleTree
  syntax KItem ::= Int
  syntax JSONs ::= "#rlpDecodeTransaction" "(" Bytes ")" [function, klabel(#rlpDecodeTransaction)]
  syntax JSONs ::= "#rlpDecodeList" "(" String "," Int "," LengthPrefix ")" [function, klabel(#rlpDecodeListAux)]
  syntax JSONs ::= "#rlpDecodeList" "(" String "," Int ")" [function, klabel(#rlpDecodeList)]
  syntax JSON ::= Bytes
  syntax JSON ::= "#rlpDecode" "(" String "," LengthPrefix ")" [function, klabel(#rlpDecodeAux)]
  syntax JSON ::= "#rlpDecode" "(" String ")" [function, klabel(#rlpDecode)]
  syntax Int ::= "keccak" "(" Bytes ")" [function, klabel(keccak), smtlib(smt_keccak), total]
  syntax Int ::= "HPEncodeAux" "(" Int ")" [function, klabel(HPEncodeAux)]
  syntax Int ::= "#parseWord" "(" String ")" [function, klabel(#parseWord)]
  syntax Int ::= "#parseHexWord" "(" String ")" [function, klabel(#parseHexWord)]
  syntax Int ::= "#parseAddr" "(" String ")" [function, klabel(#parseAddr)]
  syntax Int ::= "#newAddr" "(" Int "," Int "," Bytes ")" [function, klabel(#newAddrCreate2)]
  syntax Int ::= "#newAddr" "(" Int "," Int ")" [function, klabel(#newAddr)]
  syntax Int ::= "#blockHeaderHash" "(" String "," String "," String "," String "," String "," String "," String "," String "," String "," String "," String "," String "," String "," String "," String "," String ")" [function, klabel(#blockHashHeaderBaseFeeStr), symbol]
  syntax Int ::= "#blockHeaderHash" "(" String "," String "," String "," String "," String "," String "," String "," String "," String "," String "," String "," String "," String "," String "," String ")" [function, klabel(#blockHashHeaderStr), symbol]
  syntax Int ::= "#blockHeaderHash" "(" Int "," Int "," Int "," Int "," Int "," Int "," Bytes "," Int "," Int "," Int "," Int "," Int "," Bytes "," Int "," Int "," Int ")" [function, klabel(blockHeaderHashBaseFee), symbol]
  syntax Int ::= "#blockHeaderHash" "(" Int "," Int "," Int "," Int "," Int "," Int "," Bytes "," Int "," Int "," Int "," Int "," Int "," Bytes "," Int "," Int ")" [function, klabel(blockHeaderHash), symbol]
  syntax Int ::= "#addrFromPrivateKey" "(" String ")" [function, klabel(addrFromPrivateKey)]
  syntax Bytes ::= "#wordBytes" "(" Int ")" [function, klabel(#wordBytes)]
  syntax Bytes ::= "#parseHexBytesAux" "(" String ")" [function, klabel(#parseHexBytesAux)]
  syntax Bytes ::= "#parseHexBytes" "(" String ")" [function, klabel(#parseHexBytes)]
  syntax Bytes ::= "#parseByteStackRaw" "(" String ")" [function, klabel(#parseByteStackRaw)]
  syntax Bytes ::= "#parseByteStack" "(" String ")" [function, klabel(#parseByteStack), memo]
  syntax Bytes ::= "#nibbleize" "(" Bytes ")" [function, klabel(#nibbleize)]
  syntax Bytes ::= "#byteify" "(" Bytes ")" [function, klabel(#byteify)]
  syntax Bytes ::= "#addrBytes" "(" Account ")" [function, klabel(#addrBytes)]
  syntax Bytes ::= "#HPEncode" "(" Bytes "," Int ")" [function, klabel(#HPEncode)]
  syntax Account ::= "#sender" "(" TxData "," Int "," Bytes "," Bytes ")" [function, klabel(#senderTxData)]
  syntax Account ::= "#sender" "(" String "," Int "," String "," String ")" [function, klabel(#senderAux)]
  syntax Account ::= "#sender" "(" String ")" [function, klabel(#senderAux2)]
  rule unparseByteStack(#SemanticCastToBytes(WS))=>`Bytes2String(_)_BYTES-HOOKED_String_Bytes`(#SemanticCastToBytes(WS)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(189,10,189,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule blockHeaderHashBaseFee(#SemanticCastToInt(HP),#SemanticCastToInt(HO),#SemanticCastToInt(HC),#SemanticCastToInt(HR),#SemanticCastToInt(HT),#SemanticCastToInt(HE),#SemanticCastToBytes(HB),#SemanticCastToInt(HD),#SemanticCastToInt(HI),#SemanticCastToInt(HL),#SemanticCastToInt(HG),#SemanticCastToInt(HS),#SemanticCastToBytes(HX),#SemanticCastToInt(HM),#SemanticCastToInt(HN),#SemanticCastToInt(HF))=>`#parseHexWord(_)_SERIALIZATION_Int_String`(`Keccak256(_)_KRYPTO_String_String`(`#rlpEncode(_)_SERIALIZATION_String_JSON`(`JSONList`(`JSONs`(`#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(HP)),`JSONs`(`#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(HO)),`JSONs`(`#addrBytes(_)_SERIALIZATION_Bytes_Account`(#SemanticCastToInt(HC)),`JSONs`(`#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(HR)),`JSONs`(`#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(HT)),`JSONs`(`#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(HE)),`JSONs`(#SemanticCastToBytes(HB),`JSONs`(#SemanticCastToInt(HD),`JSONs`(#SemanticCastToInt(HI),`JSONs`(#SemanticCastToInt(HL),`JSONs`(#SemanticCastToInt(HG),`JSONs`(#SemanticCastToInt(HS),`JSONs`(#SemanticCastToBytes(HX),`JSONs`(`#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(HM)),`JSONs`(`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("8","Int"),`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(HN))),`JSONs`(#SemanticCastToInt(HF),`.List{"JSONs"}_JSONs`(.KList))))))))))))))))))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(85,10,94,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule blockHeaderHash(#SemanticCastToInt(HP),#SemanticCastToInt(HO),#SemanticCastToInt(HC),#SemanticCastToInt(HR),#SemanticCastToInt(HT),#SemanticCastToInt(HE),#SemanticCastToBytes(HB),#SemanticCastToInt(HD),#SemanticCastToInt(HI),#SemanticCastToInt(HL),#SemanticCastToInt(HG),#SemanticCastToInt(HS),#SemanticCastToBytes(HX),#SemanticCastToInt(HM),#SemanticCastToInt(HN))=>`#parseHexWord(_)_SERIALIZATION_Int_String`(`Keccak256(_)_KRYPTO_String_String`(`#rlpEncode(_)_SERIALIZATION_String_JSON`(`JSONList`(`JSONs`(`#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(HP)),`JSONs`(`#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(HO)),`JSONs`(`#addrBytes(_)_SERIALIZATION_Bytes_Account`(#SemanticCastToInt(HC)),`JSONs`(`#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(HR)),`JSONs`(`#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(HT)),`JSONs`(`#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(HE)),`JSONs`(#SemanticCastToBytes(HB),`JSONs`(#SemanticCastToInt(HD),`JSONs`(#SemanticCastToInt(HI),`JSONs`(#SemanticCastToInt(HL),`JSONs`(#SemanticCastToInt(HG),`JSONs`(#SemanticCastToInt(HS),`JSONs`(#SemanticCastToBytes(HX),`JSONs`(`#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(HM)),`JSONs`(`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("8","Int"),`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(HN))),`.List{"JSONs"}_JSONs`(.KList)))))))))))))))))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(72,10,80,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `keccak(_)_SERIALIZATION_Int_Bytes`(#SemanticCastToBytes(WS))=>`#parseHexWord(_)_SERIALIZATION_Int_String`(`Keccak256(_)_KRYPTO_String_String`(unparseByteStack(#SemanticCastToBytes(WS)))) requires #token("true","Bool") ensures #token("true","Bool") [concrete, label(SERIALIZATION.keccak), org.kframework.attributes.Location(Location(26,20,26,81)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `Raw2Hex(_)_SERIALIZATION_String_String`(#SemanticCastToString(S))=>`#unparseDataBytes(_)_SERIALIZATION_String_Bytes`(`#parseByteStackRaw(_)_SERIALIZATION_Bytes_String`(#SemanticCastToString(S))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(231,10,231,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `MerkleUpdateMapAux(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Map_List`(#SemanticCastToMerkleTree(TREE),#SemanticCastToMap(_),`.List`(.KList))=>#SemanticCastToMerkleTree(TREE) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(537,10,537,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `MerkleUpdateMapAux(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Map_List`(#SemanticCastToMerkleTree(TREE),#SemanticCastToMap(MMAP),`_List_`(`ListItem`(#SemanticCastToBytes(KEY)),#SemanticCastToList(REST)))=>`MerkleUpdateMapAux(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Map_List`(`MerkleUpdate(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(#SemanticCastToMerkleTree(TREE),`#nibbleize(_)_SERIALIZATION_Bytes_Bytes`(#SemanticCastToBytes(KEY)),`project:String`(`Map:lookup`(#SemanticCastToMap(MMAP),#SemanticCastToBytes(KEY)))),#SemanticCastToMap(MMAP),#SemanticCastToList(REST)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(538,10,539,112)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `MerkleUpdateMap(_,_)_SERIALIZATION_MerkleTree_MerkleTree_Map`(#SemanticCastToMerkleTree(TREE),#SemanticCastToMap(MMAP))=>`MerkleUpdateMapAux(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Map_List`(#SemanticCastToMerkleTree(TREE),#SemanticCastToMap(MMAP),`keys_list(_)_MAP_List_Map`(#SemanticCastToMap(MMAP))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(535,10,535,88)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `MerkleUpdate(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_String_String`(#SemanticCastToMerkleTree(TREE),#SemanticCastToString(S),#SemanticCastToString(VALUE))=>`MerkleUpdate(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(#SemanticCastToMerkleTree(TREE),`#nibbleize(_)_SERIALIZATION_Bytes_Bytes`(`#parseByteStackRaw(_)_SERIALIZATION_Bytes_String`(#SemanticCastToString(S))),#SemanticCastToString(VALUE)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(451,10,451,120)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `MerkleUpdate(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(#SemanticCastToMerkleTree(TREE),#SemanticCastToBytes(PATH),#token("\"\"","String"))=>`MerkleDelete(_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes`(#SemanticCastToMerkleTree(TREE),#SemanticCastToBytes(PATH)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(454,10,454,81)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `MerkleUpdate(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(#SemanticCastToMerkleTree(TREE),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE))=>`MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(#SemanticCastToMerkleTree(TREE),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE)) requires `_=/=String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(VALUE),#token("\"\"","String")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(453,10,453,113)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerkleLeaf(_,_)_SERIALIZATION_MerkleTree_Bytes_String`(#SemanticCastToBytes(LEAFPATH),#SemanticCastToString(_)),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE))=>`MerkleLeaf(_,_)_SERIALIZATION_MerkleTree_Bytes_String`(#SemanticCastToBytes(LEAFPATH),#SemanticCastToString(VALUE)) requires `_==K_`(#SemanticCastToBytes(LEAFPATH),#SemanticCastToBytes(PATH)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(458,10,460,33)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerkleLeaf(_,_)_SERIALIZATION_MerkleTree_Bytes_String`(#SemanticCastToBytes(LEAFPATH),#SemanticCastToString(LEAFVALUE)),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE))=>`MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(`.Map`(.KList),#token("\"\"","String")),#SemanticCastToBytes(LEAFPATH),#SemanticCastToString(LEAFVALUE)),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE)) requires `_andBool_`(`_andBool_`(`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(LEAFPATH)),#token("0","Int")),`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH)),#token("0","Int"))),`_=/=Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(LEAFPATH),#token("0","Int")),`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(PATH),#token("0","Int")))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(462,10,466,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerkleLeaf(_,_)_SERIALIZATION_MerkleTree_Bytes_String`(#SemanticCastToBytes(LEAFPATH),#SemanticCastToString(LEAFVALUE)),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE))=>`#merkleExtensionBuilder(_,_,_,_,_)_SERIALIZATION_MerkleTree_Bytes_Bytes_String_Bytes_String`(`.Bytes_BYTES-HOOKED_Bytes`(.KList),#SemanticCastToBytes(LEAFPATH),#SemanticCastToString(LEAFVALUE),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE)) requires `_andBool_`(`_andBool_`(`_andBool_`(`_=/=String__STRING-COMMON_Bool_String_String`(unparseByteStack(#SemanticCastToBytes(LEAFPATH)),unparseByteStack(#SemanticCastToBytes(PATH))),`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(LEAFPATH)),#token("0","Int"))),`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH)),#token("0","Int"))),`_==Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(LEAFPATH),#token("0","Int")),`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(PATH),#token("0","Int")))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(468,10,473,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(EXTPATH),#SemanticCastToMerkleTree(EXTTREE)),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE))=>`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(EXTPATH),`MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(#SemanticCastToMerkleTree(EXTTREE),`.Bytes_BYTES-HOOKED_Bytes`(.KList),#SemanticCastToString(VALUE))) requires `_==K_`(#SemanticCastToBytes(EXTPATH),#SemanticCastToBytes(PATH)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(475,10,477,32)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(EXTPATH),#SemanticCastToMerkleTree(EXTTREE)),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE))=>`#merkleExtensionSplitter(_,_,_,_,_)_SERIALIZATION_MerkleTree_Bytes_Bytes_MerkleTree_Bytes_String`(`.Bytes_BYTES-HOOKED_Bytes`(.KList),#SemanticCastToBytes(EXTPATH),#SemanticCastToMerkleTree(EXTTREE),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE)) requires `_andBool_`(`_andBool_`(`_=/=String__STRING-COMMON_Bool_String_String`(unparseByteStack(#SemanticCastToBytes(EXTPATH)),unparseByteStack(#SemanticCastToBytes(PATH))),`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH)),#token("0","Int"))),`_==Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(EXTPATH),#token("0","Int")),`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(PATH),#token("0","Int")))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(484,10,488,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(EXTPATH),#SemanticCastToMerkleTree(EXTTREE)),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE))=>`#merkleExtensionBrancher(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_MerkleTree`(`MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(`.Map`(.KList),#token("\"\"","String")),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE)),#SemanticCastToBytes(EXTPATH),#SemanticCastToMerkleTree(EXTTREE)) requires `_andBool_`(`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH)),#token("0","Int")),`_=/=Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(EXTPATH),#token("0","Int")),`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(PATH),#token("0","Int")))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(479,10,482,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(#SemanticCastToMap(M),#SemanticCastToString(_)),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE))=>`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(#SemanticCastToMap(M),#SemanticCastToString(VALUE)) requires `_==Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH)),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(490,10,492,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(#SemanticCastToMap(M),#SemanticCastToString(BRANCHVALUE)),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE))=>`#merkleUpdateBranch(_,_,_,_,_)_SERIALIZATION_MerkleTree_Map_String_Int_Bytes_String`(#SemanticCastToMap(M),#SemanticCastToString(BRANCHVALUE),`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(PATH),#token("0","Int")),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(PATH),#token("1","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH)),#token("1","Int"))),#SemanticCastToString(VALUE)) requires `_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH)),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(494,10,496,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`.MerkleTree_SERIALIZATION_MerkleTree`(.KList),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE))=>`MerkleLeaf(_,_)_SERIALIZATION_MerkleTree_Bytes_String`(#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(456,10,456,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#SemanticCastToInt(I))=>`#rlpMerkleH(_)_SERIALIZATION_String_String`(`#rlpEncodeMerkleTree(_)_SERIALIZATION_String_MerkleTree`(`project:MerkleTree`(`_[_]orDefault__MAP_KItem_Map_KItem_KItem`(#SemanticCastToMap(M),#SemanticCastToInt(I),`.MerkleTree_SERIALIZATION_MerkleTree`(.KList))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(375,10,375,113)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `MerkleDelete(_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes`(`MerkleLeaf(_,_)_SERIALIZATION_MerkleTree_Bytes_String`(#SemanticCastToBytes(LPATH),#SemanticCastToString(_V)),#SemanticCastToBytes(PATH))=>`.MerkleTree_SERIALIZATION_MerkleTree`(.KList) requires `_==K_`(#SemanticCastToBytes(LPATH),#SemanticCastToBytes(PATH)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(500,10,500,121)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerkleDelete(_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes`(`MerkleLeaf(_,_)_SERIALIZATION_MerkleTree_Bytes_String`(#SemanticCastToBytes(LPATH),#SemanticCastToString(V)),#SemanticCastToBytes(PATH))=>`MerkleCheck(_)_SERIALIZATION_MerkleTree_MerkleTree`(`MerkleLeaf(_,_)_SERIALIZATION_MerkleTree_Bytes_String`(#SemanticCastToBytes(LPATH),#SemanticCastToString(V))) requires `_=/=K_`(#SemanticCastToBytes(LPATH),#SemanticCastToBytes(PATH)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(501,10,501,121)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerkleDelete(_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes`(`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(EXTPATH),#SemanticCastToMerkleTree(TREE)),#SemanticCastToBytes(PATH))=>`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(EXTPATH),#SemanticCastToMerkleTree(TREE)) requires `notBool_`(`_andBool_`(`_<=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(EXTPATH)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH))),`_==K_`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(PATH),#token("0","Int"),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(EXTPATH))),#SemanticCastToBytes(EXTPATH)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(503,10,503,222)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerkleDelete(_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes`(`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(EXTPATH),#SemanticCastToMerkleTree(TREE)),#SemanticCastToBytes(PATH))=>`MerkleCheck(_)_SERIALIZATION_MerkleTree_MerkleTree`(`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(EXTPATH),`MerkleDelete(_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes`(#SemanticCastToMerkleTree(TREE),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(PATH),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(EXTPATH)),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(EXTPATH))))))) requires `_andBool_`(`_<=Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(EXTPATH)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH))),`_==K_`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(PATH),#token("0","Int"),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(EXTPATH))),#SemanticCastToBytes(EXTPATH))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(504,10,506,118)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerkleDelete(_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(#SemanticCastToMap(M),#SemanticCastToString(_V)),#SemanticCastToBytes(PATH))=>`MerkleCheck(_)_SERIALIZATION_MerkleTree_MerkleTree`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(#SemanticCastToMap(M),#token("\"\"","String"))) requires `_==Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH)),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(508,10,508,128)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerkleDelete(_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(#SemanticCastToMap(M),#SemanticCastToString(V)),#SemanticCastToBytes(PATH))=>`MerkleCheck(_)_SERIALIZATION_MerkleTree_MerkleTree`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(`Map:update`(#SemanticCastToMap(M),`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(PATH),#token("0","Int")),`MerkleDelete(_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes`(`project:MerkleTree`(`Map:lookup`(#SemanticCastToMap(M),`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(PATH),#token("0","Int")))),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(PATH),#token("1","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH)),#token("1","Int"))))),#SemanticCastToString(V))) requires `_andBool_`(`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH)),#token("0","Int")),`_in_keys(_)_MAP_Bool_KItem_Map`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(PATH),#token("0","Int")),#SemanticCastToMap(M))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(510,10,512,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerkleDelete(_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(#SemanticCastToMap(M),#SemanticCastToString(V)),#SemanticCastToBytes(PATH))=>`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(#SemanticCastToMap(M),#SemanticCastToString(V)) requires `_andBool_`(`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH)),#token("0","Int")),`notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(PATH),#token("0","Int")),#SemanticCastToMap(M)))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(509,10,509,162)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerkleDelete(_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes`(`.MerkleTree_SERIALIZATION_MerkleTree`(.KList),#SemanticCastToBytes(_))=>`.MerkleTree_SERIALIZATION_MerkleTree`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(498,10,498,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `MerkleCheck(_)_SERIALIZATION_MerkleTree_MerkleTree`(`MerkleLeaf(_,_)_SERIALIZATION_MerkleTree_Bytes_String`(#SemanticCastToBytes(_),#token("\"\"","String"))=>`.MerkleTree_SERIALIZATION_MerkleTree`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(518,10,518,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `MerkleCheck(_)_SERIALIZATION_MerkleTree_MerkleTree`(`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(_),`.MerkleTree_SERIALIZATION_MerkleTree`(.KList))=>`.MerkleTree_SERIALIZATION_MerkleTree`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(524,10,524,124)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `MerkleCheck(_)_SERIALIZATION_MerkleTree_MerkleTree`(`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(P1)=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(P1),#SemanticCastToBytes(P2)),`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(P2),#SemanticCastToMerkleTree(TREE))=>#SemanticCastToMerkleTree(TREE))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(526,10,526,128)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `MerkleCheck(_)_SERIALIZATION_MerkleTree_MerkleTree`(`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(P1),`MerkleLeaf(_,_)_SERIALIZATION_MerkleTree_Bytes_String`(#SemanticCastToBytes(P2),#SemanticCastToString(V)))=>`MerkleLeaf(_,_)_SERIALIZATION_MerkleTree_Bytes_String`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(P1),#SemanticCastToBytes(P2)),#SemanticCastToString(V))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(525,10,525,128)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `MerkleCheck(_)_SERIALIZATION_MerkleTree_MerkleTree`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(`_|->_`(#SemanticCastToInt(X),#SemanticCastToMerkleTree(T)),#token("\"\"","String"))=>`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(X)),#token("0","Int"),#token("1","Int")),#SemanticCastToMerkleTree(T))) requires `_=/=K_`(#SemanticCastToMerkleTree(T),`.MerkleTree_SERIALIZATION_MerkleTree`(.KList)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(521,10,521,151)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerkleCheck(_)_SERIALIZATION_MerkleTree_MerkleTree`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(`.Map`(.KList),#SemanticCastToString(V))=>`MerkleLeaf(_,_)_SERIALIZATION_MerkleTree_Bytes_String`(`.Bytes_BYTES-HOOKED_Bytes`(.KList),#SemanticCastToString(V))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(520,10,520,123)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `MerkleCheck(_)_SERIALIZATION_MerkleTree_MerkleTree`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(#SemanticCastToMap(M)=>`#cleanBranchMap(_)_SERIALIZATION_Map_Map`(#SemanticCastToMap(M)),#SemanticCastToString(_))) requires `_in__LIST_Bool_KItem_List`(`.MerkleTree_SERIALIZATION_MerkleTree`(.KList),`values(_)_MAP_List_Map`(#SemanticCastToMap(M))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(522,10,522,157)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `MerkleCheck(_)_SERIALIZATION_MerkleTree_MerkleTree`(#SemanticCastToMerkleTree(TREE))=>#SemanticCastToMerkleTree(TREE) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(516,10,516,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `Hex2Raw(_)_SERIALIZATION_String_String`(#SemanticCastToString(S))=>unparseByteStack(`#parseByteStack(_)_SERIALIZATION_Bytes_String`(#SemanticCastToString(S))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(230,10,230,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `HPEncodeAux(_)_SERIALIZATION_Int_Int`(#SemanticCastToInt(X))=>#token("2","Int") requires `notBool_`(`_==Int_`(#SemanticCastToInt(X),#token("0","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(573,10,573,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `HPEncodeAux(_)_SERIALIZATION_Int_Int`(#SemanticCastToInt(X))=>#token("0","Int") requires `_==Int_`(#SemanticCastToInt(X),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(572,10,572,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(WORD))=>`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("32","Int"),`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(WORD))) requires `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(WORD)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(217,10,217,100)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#unparseQuantity(_)_SERIALIZATION_String_Int`(#SemanticCastToInt(I))=>`_+String__STRING-COMMON_String_String_String`(#token("\"0x\"","String"),`Base2String(_,_)_STRING-COMMON_String_Int_Int`(#SemanticCastToInt(I),#token("16","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(198,10,198,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#unparseDataBytes(_)_SERIALIZATION_String_Bytes`(#SemanticCastToBytes(DATA))=>`replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(`Base2String(_,_)_STRING-COMMON_String_Int_Int`(`#asInteger(_)_EVM-TYPES_Int_Bytes`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#token("1","Int")),#SemanticCastToBytes(DATA))),#token("16","Int")),#token("\"1\"","String"),#token("\"0x\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(205,10,205,120)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#unparseData(_,_)_SERIALIZATION_String_Int_Int`(#SemanticCastToInt(DATA),#SemanticCastToInt(LENGTH))=>`#unparseDataBytes(_)_SERIALIZATION_String_Bytes`(`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#SemanticCastToInt(LENGTH),`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(DATA)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(203,10,203,99)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#storageRoot(_)_SERIALIZATION_MerkleTree_Map`(#SemanticCastToMap(STORAGE))=>`MerkleUpdateMap(_,_)_SERIALIZATION_MerkleTree_MerkleTree_Map`(`.MerkleTree_SERIALIZATION_MerkleTree`(.KList),`#intMap2StorageMap(_)_SERIALIZATION_Map_Map`(#SemanticCastToMap(STORAGE))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(673,10,673,98)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#sender(_,_,_,_)_SERIALIZATION_Account_TxData_Int_Bytes_Bytes`(#SemanticCastToTxData(_),#SemanticCastToInt(TW)=>`_+Int_`(#SemanticCastToInt(TW),#token("27","Int")),#SemanticCastToBytes(_),#SemanticCastToBytes(_)) requires `_orBool_`(`_==Int_`(#SemanticCastToInt(TW),#token("0","Int")),`_==Int_`(#SemanticCastToInt(TW),#token("1","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(44,10,45,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#sender(_,_,_,_)_SERIALIZATION_Account_TxData_Int_Bytes_Bytes`(#SemanticCastToTxData(TXDATA),#SemanticCastToInt(TW),#SemanticCastToBytes(TR),#SemanticCastToBytes(TS))=>`#sender(_,_,_,_)_SERIALIZATION_Account_String_Int_String_String`(`Hex2Raw(_)_SERIALIZATION_String_String`(`#hashTxData(_)_SERIALIZATION_String_TxData`(#SemanticCastToTxData(TXDATA))),#SemanticCastToInt(TW),unparseByteStack(#SemanticCastToBytes(TR)),unparseByteStack(#SemanticCastToBytes(TS))) requires `_andBool_`(`_=/=Int_`(#SemanticCastToInt(TW),#token("0","Int")),`_=/=Int_`(#SemanticCastToInt(TW),#token("1","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(47,10,49,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#sender(_,_,_,_)_SERIALIZATION_Account_String_Int_String_String`(#SemanticCastToString(HT),#SemanticCastToInt(TW),#SemanticCastToString(TR),#SemanticCastToString(TS))=>`#sender(_)_SERIALIZATION_Account_String`(`ECDSARecover(_,_,_,_)_KRYPTO_String_String_Int_String_String`(#SemanticCastToString(HT),#SemanticCastToInt(TW),#SemanticCastToString(TR),#SemanticCastToString(TS))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(51,10,51,74)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#sender(_)_SERIALIZATION_Account_String`(#token("\"\"","String"))=>`.Account_EVM-TYPES_Account`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(53,10,53,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#sender(_)_SERIALIZATION_Account_String`(#SemanticCastToString(STR))=>`#addr(_)_EVM-TYPES_Int_Int`(`#parseHexWord(_)_SERIALIZATION_Int_String`(`Keccak256(_)_KRYPTO_String_String`(#SemanticCastToString(STR)))) requires `_=/=String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(STR),#token("\"\"","String")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(54,10,54,88)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#rlpMerkleH(_)_SERIALIZATION_String_String`(#SemanticCastToString(X))=>`#rlpEncodeString(_)_SERIALIZATION_String_String`(`Hex2Raw(_)_SERIALIZATION_String_String`(`Keccak256(_)_KRYPTO_String_String`(#SemanticCastToString(X)))) requires `_>=Int_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(X)),#token("32","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(379,10,380,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#rlpMerkleH(_)_SERIALIZATION_String_String`(#SemanticCastToString(X))=>#SemanticCastToString(X) requires `notBool_`(`_>=Int_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(X)),#token("32","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(382,10,383,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#rlpEncodeWord(_)_SERIALIZATION_String_Int`(#SemanticCastToInt(WORD))=>`#rlpEncodeBytes(_)_SERIALIZATION_String_Bytes`(`#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(WORD))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(264,10,264,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeTxData(_)_SERIALIZATION_String_TxData`(`LegacyTxData(_,_,_,_,_,_)_EVM-TYPES_LegacyTx_Int_Int_Int_Account_Int_Bytes`(#SemanticCastToInt(TN),#SemanticCastToInt(TP),#SemanticCastToInt(TG),#SemanticCastToAccount(TT),#SemanticCastToInt(TV),#SemanticCastToBytes(TD)))=>`#rlpEncode(_)_SERIALIZATION_String_JSON`(`JSONList`(`JSONs`(#SemanticCastToInt(TN),`JSONs`(#SemanticCastToInt(TP),`JSONs`(#SemanticCastToInt(TG),`JSONs`(`#addrBytes(_)_SERIALIZATION_Bytes_Account`(#SemanticCastToAccount(TT)),`JSONs`(#SemanticCastToInt(TV),`JSONs`(#SemanticCastToBytes(TD),`.List{"JSONs"}_JSONs`(.KList))))))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(332,10,333,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeTxData(_)_SERIALIZATION_String_TxData`(`LegacyProtectedTxData(_,_,_,_,_,_,_)_EVM-TYPES_LegacyTx_Int_Int_Int_Account_Int_Bytes_Int`(#SemanticCastToInt(TN),#SemanticCastToInt(TP),#SemanticCastToInt(TG),#SemanticCastToAccount(TT),#SemanticCastToInt(TV),#SemanticCastToBytes(TD),#SemanticCastToInt(CID)))=>`#rlpEncode(_)_SERIALIZATION_String_JSON`(`JSONList`(`JSONs`(#SemanticCastToInt(TN),`JSONs`(#SemanticCastToInt(TP),`JSONs`(#SemanticCastToInt(TG),`JSONs`(`#addrBytes(_)_SERIALIZATION_Bytes_Account`(#SemanticCastToAccount(TT)),`JSONs`(#SemanticCastToInt(TV),`JSONs`(#SemanticCastToBytes(TD),`JSONs`(#SemanticCastToInt(CID),`JSONs`(#token("\"\"","String"),`JSONs`(#token("\"\"","String"),`.List{"JSONs"}_JSONs`(.KList)))))))))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(335,10,336,75)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeTxData(_)_SERIALIZATION_String_TxData`(`DynamicFeeTxData(_,_,_,_,_,_,_,_,_)_EVM-TYPES_DynamicFeeTx_Int_Int_Int_Int_Account_Int_Bytes_Int_JSONs`(#SemanticCastToInt(TN),#SemanticCastToInt(TPF),#SemanticCastToInt(TM),#SemanticCastToInt(TG),#SemanticCastToAccount(TT),#SemanticCastToInt(TV),#SemanticCastToBytes(DATA),#SemanticCastToInt(CID),`JSONs`(`JSONList`(#SemanticCastToJSONs(TA)),`.List{"JSONs"}_JSONs`(.KList))))=>`#rlpEncode(_)_SERIALIZATION_String_JSON`(`JSONList`(`JSONs`(#SemanticCastToInt(CID),`JSONs`(#SemanticCastToInt(TN),`JSONs`(#SemanticCastToInt(TPF),`JSONs`(#SemanticCastToInt(TM),`JSONs`(#SemanticCastToInt(TG),`JSONs`(`#addrBytes(_)_SERIALIZATION_Bytes_Account`(#SemanticCastToAccount(TT)),`JSONs`(#SemanticCastToInt(TV),`JSONs`(#SemanticCastToBytes(DATA),`JSONs`(`JSONList`(#SemanticCastToJSONs(TA)),`.List{"JSONs"}_JSONs`(.KList)))))))))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(341,10,342,80)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeTxData(_)_SERIALIZATION_String_TxData`(`AccessListTxData(_,_,_,_,_,_,_,_)_EVM-TYPES_AccessListTx_Int_Int_Int_Account_Int_Bytes_Int_JSONs`(#SemanticCastToInt(TN),#SemanticCastToInt(TP),#SemanticCastToInt(TG),#SemanticCastToAccount(TT),#SemanticCastToInt(TV),#SemanticCastToBytes(TD),#SemanticCastToInt(CID),`JSONs`(`JSONList`(#SemanticCastToJSONs(TA)),`.List{"JSONs"}_JSONs`(.KList))))=>`#rlpEncode(_)_SERIALIZATION_String_JSON`(`JSONList`(`JSONs`(#SemanticCastToInt(CID),`JSONs`(#SemanticCastToInt(TN),`JSONs`(#SemanticCastToInt(TP),`JSONs`(#SemanticCastToInt(TG),`JSONs`(`#addrBytes(_)_SERIALIZATION_Bytes_Account`(#SemanticCastToAccount(TT)),`JSONs`(#SemanticCastToInt(TV),`JSONs`(#SemanticCastToBytes(TD),`JSONs`(`JSONList`(#SemanticCastToJSONs(TA)),`.List{"JSONs"}_JSONs`(.KList))))))))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(338,10,339,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeTopics(_,_)_SERIALIZATION_String_List_StringBuffer`(`_List_`(`ListItem`(#SemanticCastToInt(X))=>`.List`(.KList),#SemanticCastToList(_)),#SemanticCastToStringBuffer(OUT)=>`_+String__STRING-BUFFER-IN-K_StringBuffer_StringBuffer_String`(#SemanticCastToStringBuffer(OUT),`#rlpEncodeWord(_)_SERIALIZATION_String_Int`(#SemanticCastToInt(X)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(326,10,328,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeTopics(_,_)_SERIALIZATION_String_List_StringBuffer`(`.List`(.KList),#SemanticCastToStringBuffer(OUT))=>`#rlpEncodeLength(_,_)_SERIALIZATION_String_String_Int`(`StringBuffer2String(_)_STRING-BUFFER-IN-K_String_StringBuffer`(#SemanticCastToStringBuffer(OUT)),#token("192","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(325,10,325,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeString(_)_SERIALIZATION_String_String`(#SemanticCastToString(STR))=>`#rlpEncodeLength(_,_)_SERIALIZATION_String_String_Int`(#SemanticCastToString(STR),#token("128","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(272,10,272,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#rlpEncodeString(_)_SERIALIZATION_String_String`(#SemanticCastToString(STR))=>#token("\"\\x80\"","String") requires `_<Int_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(STR)),#token("1","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(270,10,270,96)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#rlpEncodeString(_)_SERIALIZATION_String_String`(#SemanticCastToString(STR))=>#SemanticCastToString(STR) requires `_andBool_`(`_==Int_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(STR)),#token("1","Int")),`_<Int_`(`ordChar(_)_STRING-COMMON_Int_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(STR),#token("0","Int"),#token("1","Int"))),#token("128","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(271,10,271,146)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#rlpEncodeReceipt(_,_,_,_)_SERIALIZATION_String_Int_Int_Bytes_List`(#SemanticCastToInt(RS),#SemanticCastToInt(RG),#SemanticCastToBytes(RB),#SemanticCastToList(RL))=>`#rlpEncodeLength(_,_)_SERIALIZATION_String_String_Int`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`#rlpEncodeInt(_)_SERIALIZATION_String_Int`(#SemanticCastToInt(RS)),`#rlpEncodeInt(_)_SERIALIZATION_String_Int`(#SemanticCastToInt(RG))),`#rlpEncodeString(_)_SERIALIZATION_String_String`(unparseByteStack(#SemanticCastToBytes(RB)))),`#rlpEncodeLogs(_)_SERIALIZATION_String_List`(#SemanticCastToList(RL))),#token("192","Int")) requires #token("true","Bool") ensures #token("true","Bool") [label(SERIALIZATION.rlpReceipt), org.kframework.attributes.Location(Location(305,24,311,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeMerkleTree(_)_SERIALIZATION_String_MerkleTree`(`MerkleLeaf(_,_)_SERIALIZATION_MerkleTree_Bytes_String`(#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE)))=>`#rlpEncodeLength(_,_)_SERIALIZATION_String_String_Int`(`_+String__STRING-COMMON_String_String_String`(`#rlpEncodeString(_)_SERIALIZATION_String_String`(unparseByteStack(`#HPEncode(_,_)_SERIALIZATION_Bytes_Bytes_Int`(#SemanticCastToBytes(PATH),#token("1","Int")))),`#rlpEncodeString(_)_SERIALIZATION_String_String`(#SemanticCastToString(VALUE))),#token("192","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(348,10,352,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeMerkleTree(_)_SERIALIZATION_String_MerkleTree`(`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(PATH),#SemanticCastToMerkleTree(TREE)))=>`#rlpEncodeLength(_,_)_SERIALIZATION_String_String_Int`(`_+String__STRING-COMMON_String_String_String`(`#rlpEncodeString(_)_SERIALIZATION_String_String`(unparseByteStack(`#HPEncode(_,_)_SERIALIZATION_Bytes_Bytes_Int`(#SemanticCastToBytes(PATH),#token("0","Int")))),`#rlpMerkleH(_)_SERIALIZATION_String_String`(`#rlpEncodeMerkleTree(_)_SERIALIZATION_String_MerkleTree`(#SemanticCastToMerkleTree(TREE)))),#token("192","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(354,10,358,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeMerkleTree(_)_SERIALIZATION_String_MerkleTree`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(#SemanticCastToMap(M),#SemanticCastToString(VALUE)))=>`#rlpEncodeLength(_,_)_SERIALIZATION_String_String_Int`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("0","Int")),`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("1","Int"))),`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("2","Int"))),`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("3","Int"))),`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("4","Int"))),`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("5","Int"))),`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("6","Int"))),`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("7","Int"))),`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("8","Int"))),`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("9","Int"))),`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("10","Int"))),`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("11","Int"))),`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("12","Int"))),`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("13","Int"))),`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("14","Int"))),`MerkleMapRLP(_,_)_SERIALIZATION_String_Map_Int`(#SemanticCastToMap(M),#token("15","Int"))),`#rlpEncodeString(_)_SERIALIZATION_String_String`(#SemanticCastToString(VALUE))),#token("192","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(360,10,371,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeMerkleTree(_)_SERIALIZATION_String_MerkleTree`(`.MerkleTree_SERIALIZATION_MerkleTree`(.KList))=>#token("\"\\x80\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(346,10,346,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeLogsAux(_,_)_SERIALIZATION_String_List_StringBuffer`(`_List_`(`ListItem`(`{_|_|_}_EVM-TYPES_SubstateLogEntry_Int_List_Bytes`(#SemanticCastToInt(ACCT),#SemanticCastToList(TOPICS),#SemanticCastToBytes(DATA)))=>`.List`(.KList),#SemanticCastToList(_)),#SemanticCastToStringBuffer(OUT)=>`_+String__STRING-BUFFER-IN-K_StringBuffer_StringBuffer_String`(#SemanticCastToStringBuffer(OUT),`#rlpEncodeLength(_,_)_SERIALIZATION_String_String_Int`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`#rlpEncodeAddress(_)_SERIALIZATION_String_Account`(#SemanticCastToInt(ACCT)),`#rlpEncodeTopics(_,_)_SERIALIZATION_String_List_StringBuffer`(#SemanticCastToList(TOPICS),`.StringBuffer_STRING-BUFFER-IN-K_StringBuffer`(.KList))),`#rlpEncodeString(_)_SERIALIZATION_String_String`(unparseByteStack(#SemanticCastToBytes(DATA)))),#token("192","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(316,10,323,28)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeLogsAux(_,_)_SERIALIZATION_String_List_StringBuffer`(`.List`(.KList),#SemanticCastToStringBuffer(OUT))=>`#rlpEncodeLength(_,_)_SERIALIZATION_String_String_Int`(`StringBuffer2String(_)_STRING-BUFFER-IN-K_String_StringBuffer`(#SemanticCastToStringBuffer(OUT)),#token("192","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(315,10,315,91)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeLogs(_)_SERIALIZATION_String_List`(#SemanticCastToList(LOGS))=>`#rlpEncodeLogsAux(_,_)_SERIALIZATION_String_List_StringBuffer`(#SemanticCastToList(LOGS),`.StringBuffer_STRING-BUFFER-IN-K_StringBuffer`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(313,10,313,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeLength(_,_,_)_SERIALIZATION_String_String_Int_String`(#SemanticCastToString(STR),#SemanticCastToInt(OFFSET),#SemanticCastToString(BL))=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`chrChar(_)_STRING-COMMON_String_Int`(`_+Int_`(`_+Int_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(BL)),#SemanticCastToInt(OFFSET)),#token("55","Int"))),#SemanticCastToString(BL)),#SemanticCastToString(STR)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(288,10,288,115)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeLength(_,_)_SERIALIZATION_String_String_Int`(#SemanticCastToString(STR),#SemanticCastToInt(OFFSET))=>`_+String__STRING-COMMON_String_String_String`(`chrChar(_)_STRING-COMMON_String_Int`(`_+Int_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(STR)),#SemanticCastToInt(OFFSET))),#SemanticCastToString(STR)) requires `_<Int_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(STR)),#token("56","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(286,10,286,169)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#rlpEncodeLength(_,_)_SERIALIZATION_String_String_Int`(#SemanticCastToString(STR),#SemanticCastToInt(OFFSET))=>`#rlpEncodeLength(_,_,_)_SERIALIZATION_String_String_Int_String`(#SemanticCastToString(STR),#SemanticCastToInt(OFFSET),unparseByteStack(`#asByteStack(_)_EVM-TYPES_Bytes_Int`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(STR))))) requires `notBool_`(`_<Int_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(STR)),#token("56","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(287,10,287,171)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#rlpEncodeInt(_)_SERIALIZATION_String_Int`(#token("0","Int"))=>#token("\"\\x80\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(260,10,260,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeInt(_)_SERIALIZATION_String_Int`(#SemanticCastToInt(WORD))=>`chrChar(_)_STRING-COMMON_String_Int`(#SemanticCastToInt(WORD)) requires `_andBool_`(`_>Int_`(#SemanticCastToInt(WORD),#token("0","Int")),`_<Int_`(#SemanticCastToInt(WORD),#token("128","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(261,10,261,89)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#rlpEncodeInt(_)_SERIALIZATION_String_Int`(#SemanticCastToInt(WORD))=>`#rlpEncodeBytes(_)_SERIALIZATION_String_Bytes`(`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(WORD))) requires `_>=Int_`(#SemanticCastToInt(WORD),#token("128","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(262,10,262,92)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#rlpEncodeFullAccount(_,_,_,_)_SERIALIZATION_String_Int_Int_Map_Bytes`(#SemanticCastToInt(NONCE),#SemanticCastToInt(BAL),#SemanticCastToMap(STORAGE),#SemanticCastToBytes(CODE))=>`#rlpEncodeLength(_,_)_SERIALIZATION_String_String_Int`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`#rlpEncodeInt(_)_SERIALIZATION_String_Int`(#SemanticCastToInt(NONCE)),`#rlpEncodeInt(_)_SERIALIZATION_String_Int`(#SemanticCastToInt(BAL))),`#rlpEncodeString(_)_SERIALIZATION_String_String`(`Hex2Raw(_)_SERIALIZATION_String_String`(`Keccak256(_)_KRYPTO_String_String`(`#rlpEncodeMerkleTree(_)_SERIALIZATION_String_MerkleTree`(`#storageRoot(_)_SERIALIZATION_MerkleTree_Map`(#SemanticCastToMap(STORAGE))))))),`#rlpEncodeString(_)_SERIALIZATION_String_String`(`Hex2Raw(_)_SERIALIZATION_String_String`(`Keccak256(_)_KRYPTO_String_String`(unparseByteStack(#SemanticCastToBytes(CODE)))))),#token("192","Int")) requires #token("true","Bool") ensures #token("true","Bool") [label(SERIALIZATION.rlpAcct), org.kframework.attributes.Location(Location(292,21,298,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeBytes(_)_SERIALIZATION_String_Bytes`(#SemanticCastToBytes(BYTES))=>`#rlpEncodeString(_)_SERIALIZATION_String_String`(unparseByteStack(#SemanticCastToBytes(BYTES))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(268,10,268,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncodeAddress(_)_SERIALIZATION_String_Account`(#SemanticCastToAccount(ACCT))=>`#rlpEncodeBytes(_)_SERIALIZATION_String_Bytes`(`#addrBytes(_)_SERIALIZATION_Bytes_Account`(#SemanticCastToAccount(ACCT))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(266,10,266,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncode(_,_)_SERIALIZATION_String_JSONs_StringBuffer`(`JSONs`(`JSONList`(#SemanticCastToJSONs(J)),#SemanticCastToJSONs(REST)),#SemanticCastToStringBuffer(BUF))=>`#rlpEncode(_,_)_SERIALIZATION_String_JSONs_StringBuffer`(#SemanticCastToJSONs(REST),`_+String__STRING-BUFFER-IN-K_StringBuffer_StringBuffer_String`(#SemanticCastToStringBuffer(BUF),`#rlpEncode(_)_SERIALIZATION_String_JSON`(`JSONList`(#SemanticCastToJSONs(J))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(281,10,281,107)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncode(_,_)_SERIALIZATION_String_JSONs_StringBuffer`(`JSONs`(#SemanticCastToString(J),#SemanticCastToJSONs(REST)),#SemanticCastToStringBuffer(BUF))=>`#rlpEncode(_,_)_SERIALIZATION_String_JSONs_StringBuffer`(#SemanticCastToJSONs(REST),`_+String__STRING-BUFFER-IN-K_StringBuffer_StringBuffer_String`(#SemanticCastToStringBuffer(BUF),`#rlpEncodeString(_)_SERIALIZATION_String_String`(#SemanticCastToString(J)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(279,10,279,107)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncode(_,_)_SERIALIZATION_String_JSONs_StringBuffer`(`JSONs`(#SemanticCastToInt(J),#SemanticCastToJSONs(REST)),#SemanticCastToStringBuffer(BUF))=>`#rlpEncode(_,_)_SERIALIZATION_String_JSONs_StringBuffer`(#SemanticCastToJSONs(REST),`_+String__STRING-BUFFER-IN-K_StringBuffer_StringBuffer_String`(#SemanticCastToStringBuffer(BUF),`#rlpEncodeInt(_)_SERIALIZATION_String_Int`(#SemanticCastToInt(J)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(278,10,278,107)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncode(_,_)_SERIALIZATION_String_JSONs_StringBuffer`(`JSONs`(#SemanticCastToBytes(J),#SemanticCastToJSONs(REST)),#SemanticCastToStringBuffer(BUF))=>`#rlpEncode(_,_)_SERIALIZATION_String_JSONs_StringBuffer`(#SemanticCastToJSONs(REST),`_+String__STRING-BUFFER-IN-K_StringBuffer_StringBuffer_String`(#SemanticCastToStringBuffer(BUF),`#rlpEncodeBytes(_)_SERIALIZATION_String_Bytes`(#SemanticCastToBytes(J)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(280,10,280,107)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncode(_,_)_SERIALIZATION_String_JSONs_StringBuffer`(`.List{"JSONs"}_JSONs`(.KList),#SemanticCastToStringBuffer(BUF))=>`StringBuffer2String(_)_STRING-BUFFER-IN-K_String_StringBuffer`(#SemanticCastToStringBuffer(BUF)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(277,10,277,82)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpEncode(_)_SERIALIZATION_String_JSON`(`JSONList`(#SemanticCastToJSONs(J)))=>`#rlpEncodeLength(_,_)_SERIALIZATION_String_String_Int`(`#rlpEncode(_,_)_SERIALIZATION_String_JSONs_StringBuffer`(#SemanticCastToJSONs(J),`.StringBuffer_STRING-BUFFER-IN-K_StringBuffer`(.KList)),#token("192","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(275,10,275,93)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpDecodeTransaction(_)_SERIALIZATION_JSONs_Bytes`(#SemanticCastToBytes(T))=>`JSONs`(unparseByteStack(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(T),#token("0","Int"),#token("1","Int"))),`JSONs`(`#rlpDecode(_)_SERIALIZATION_JSON_String`(unparseByteStack(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(T),#token("1","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(T)),#token("1","Int"))))),`.List{"JSONs"}_JSONs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(428,10,428,141)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpDecodeList(_,_,_)_SERIALIZATION_JSONs_String_Int_LengthPrefix`(#SemanticCastToString(STR),#SemanticCastToInt(POS),`_(_,_)_SERIALIZATION_LengthPrefix_LengthPrefixType_Int_Int`(#SemanticCastToLengthPrefixType(_),#SemanticCastToInt(L),#SemanticCastToInt(P)))=>`JSONs`(`#rlpDecode(_)_SERIALIZATION_JSON_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(STR),#SemanticCastToInt(POS),`_+Int_`(#SemanticCastToInt(L),#SemanticCastToInt(P)))),`#rlpDecodeList(_,_)_SERIALIZATION_JSONs_String_Int`(#SemanticCastToString(STR),`_+Int_`(#SemanticCastToInt(L),#SemanticCastToInt(P)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(405,10,405,140)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpDecodeList(_,_)_SERIALIZATION_JSONs_String_Int`(#SemanticCastToString(_),#SemanticCastToInt(_))=>`.List{"JSONs"}_JSONs`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(404,10,404,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#rlpDecodeList(_,_)_SERIALIZATION_JSONs_String_Int`(#SemanticCastToString(STR),#SemanticCastToInt(POS))=>`#rlpDecodeList(_,_,_)_SERIALIZATION_JSONs_String_Int_LengthPrefix`(#SemanticCastToString(STR),#SemanticCastToInt(POS),`#decodeLengthPrefix(_,_)_SERIALIZATION_LengthPrefix_String_Int`(#SemanticCastToString(STR),#SemanticCastToInt(POS))) requires `_<Int_`(#SemanticCastToInt(POS),`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(STR))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(403,10,403,129)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#rlpDecode(_,_)_SERIALIZATION_JSON_String_LengthPrefix`(#SemanticCastToString(STR),`_(_,_)_SERIALIZATION_LengthPrefix_LengthPrefixType_Int_Int`(`#str_SERIALIZATION_LengthPrefixType`(.KList),#SemanticCastToInt(LEN),#SemanticCastToInt(POS)))=>`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(STR),#SemanticCastToInt(POS),`_+Int_`(#SemanticCastToInt(POS),#SemanticCastToInt(LEN))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(397,10,397,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpDecode(_,_)_SERIALIZATION_JSON_String_LengthPrefix`(#SemanticCastToString(STR),`_(_,_)_SERIALIZATION_LengthPrefix_LengthPrefixType_Int_Int`(`#list_SERIALIZATION_LengthPrefixType`(.KList),#SemanticCastToInt(_LEN),#SemanticCastToInt(POS)))=>`JSONList`(`#rlpDecodeList(_,_)_SERIALIZATION_JSONs_String_Int`(#SemanticCastToString(STR),#SemanticCastToInt(POS))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(398,10,398,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rlpDecode(_)_SERIALIZATION_JSON_String`(#SemanticCastToString(STR))=>`#rlpDecode(_,_)_SERIALIZATION_JSON_String_LengthPrefix`(#SemanticCastToString(STR),`#decodeLengthPrefix(_,_)_SERIALIZATION_LengthPrefix_String_Int`(#SemanticCastToString(STR),#token("0","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(396,10,396,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiledAccountsMapAux(_,_)_SERIALIZATION_Map_List_Map`(`_List_`(`ListItem`(#SemanticCastToInt(ACCT))=>`.List`(.KList),#SemanticCastToList(_)),#SemanticCastToMap(M)=>`Map:update`(#SemanticCastToMap(M),`#parseByteStackRaw(_)_SERIALIZATION_Bytes_String`(`Hex2Raw(_)_SERIALIZATION_String_String`(`#unparseData(_,_)_SERIALIZATION_String_Int_Int`(#SemanticCastToInt(ACCT),#token("20","Int")))),`#emptyContractRLP_SERIALIZATION_String`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(685,10,685,157)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiledAccountsMapAux(_,_)_SERIALIZATION_Map_List_Map`(`.List`(.KList),#SemanticCastToMap(M))=>#SemanticCastToMap(M) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(684,10,684,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#precompiledAccountsMap(_)_SERIALIZATION_Map_Set`(#SemanticCastToSet(ACCTS))=>`#precompiledAccountsMapAux(_,_)_SERIALIZATION_Map_List_Map`(`Set2List(_)_COLLECTIONS_List_Set`(#SemanticCastToSet(ACCTS)),`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(682,10,682,99)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#parseWord(_)_SERIALIZATION_Int_String`(#token("\"\"","String"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(137,10,137,29)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#parseWord(_)_SERIALIZATION_Int_String`(#SemanticCastToString(S))=>`String2Int(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(139,10,139,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#parseWord(_)_SERIALIZATION_Int_String`(#SemanticCastToString(S))=>`#parseHexWord(_)_SERIALIZATION_Int_String`(#SemanticCastToString(S)) requires `_andBool_`(`_>=Int_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S)),#token("2","Int")),`_==String__STRING-COMMON_Bool_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(S),#token("0","Int"),#token("2","Int")),#token("\"0x\"","String"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(138,10,138,121)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#parseMap(_)_SERIALIZATION_Map_JSON`(`JSONObject`(`JSONs`(`JSONEntry`(#SemanticCastToString(KEY),#SemanticCastToString(VALUE)),#SemanticCastToJSONs(REST))))=>`Map:update`(`#parseMap(_)_SERIALIZATION_Map_JSON`(`JSONObject`(#SemanticCastToJSONs(REST))),`#parseHexWord(_)_SERIALIZATION_Int_String`(#SemanticCastToString(KEY)),`#parseHexWord(_)_SERIALIZATION_Int_String`(#SemanticCastToString(VALUE))) requires `_=/=K_`(`#parseHexWord(_)_SERIALIZATION_Int_String`(#SemanticCastToString(VALUE)),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(164,10,164,161)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#parseMap(_)_SERIALIZATION_Map_JSON`(`JSONObject`(`JSONs`(`JSONEntry`(#SemanticCastToJSONKey(_),#SemanticCastToString(VALUE)),#SemanticCastToJSONs(REST))))=>`#parseMap(_)_SERIALIZATION_Map_JSON`(`JSONObject`(#SemanticCastToJSONs(REST))) requires `_==K_`(`#parseHexWord(_)_SERIALIZATION_Int_String`(#SemanticCastToString(VALUE)),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(163,10,163,160)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#parseMap(_)_SERIALIZATION_Map_JSON`(`JSONObject`(`.List{"JSONs"}_JSONs`(.KList)))=>`.Map`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(162,10,162,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#parseHexWord(_)_SERIALIZATION_Int_String`(#token("\"\"","String"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(133,10,133,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#parseHexWord(_)_SERIALIZATION_Int_String`(#token("\"0x\"","String"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(134,10,134,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#parseHexWord(_)_SERIALIZATION_Int_String`(#SemanticCastToString(S))=>`String2Base(_,_)_STRING-COMMON_Int_String_Int`(`replaceAll(_,_,_)_STRING-COMMON_String_String_String_String`(#SemanticCastToString(S),#token("\"0x\"","String"),#token("\"\"","String")),#token("16","Int")) requires `_andBool_`(`_=/=String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(S),#token("\"\"","String")),`_=/=String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(S),#token("\"0x\"","String"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(135,10,135,126)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#parseHexBytesAux(_)_SERIALIZATION_Bytes_String`(#token("\"\"","String"))=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(154,10,154,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#parseHexBytesAux(_)_SERIALIZATION_Bytes_String`(#SemanticCastToString(S))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(`_/Int_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S)),#token("2","Int")),`String2Base(_,_)_STRING-COMMON_Int_String_Int`(#SemanticCastToString(S),#token("16","Int")),bigEndianBytes(.KList)) requires `_>=Int_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S)),#token("2","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(155,10,156,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#parseHexBytes(_)_SERIALIZATION_Bytes_String`(#SemanticCastToString(S))=>`#parseHexBytesAux(_)_SERIALIZATION_Bytes_String`(`#alignHexString(_)_SERIALIZATION_String_String`(#SemanticCastToString(S))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(153,10,153,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#parseByteStackRaw(_)_SERIALIZATION_Bytes_String`(#SemanticCastToString(S))=>`String2Bytes(_)_BYTES-HOOKED_Bytes_String`(#SemanticCastToString(S)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(158,10,158,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#parseByteStack(_)_SERIALIZATION_Bytes_String`(#SemanticCastToString(S))=>`#parseHexBytes(_)_SERIALIZATION_Bytes_String`(`replaceAll(_,_,_)_STRING-COMMON_String_String_String_String`(#SemanticCastToString(S),#token("\"0x\"","String"),#token("\"\"","String"))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(151,10,151,71)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#parseAddr(_)_SERIALIZATION_Int_String`(#SemanticCastToString(S))=>`#addr(_)_EVM-TYPES_Int_Int`(`#parseHexWord(_)_SERIALIZATION_Int_String`(#SemanticCastToString(S))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(168,10,168,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#parseAccessListStorageKeys(_,_)_SERIALIZATION_List_JSONs_List`(`JSONs`(`JSONList`(`JSONs`(#SemanticCastToString(S),#SemanticCastToJSONs(REST))),`.List{"JSONs"}_JSONs`(.KList)),#SemanticCastToList(RESULT))=>`#parseAccessListStorageKeys(_,_)_SERIALIZATION_List_JSONs_List`(`JSONs`(`JSONList`(#SemanticCastToJSONs(REST)),`.List{"JSONs"}_JSONs`(.KList)),`_List_`(`ListItem`(`#asWord(_)_EVM-TYPES_Int_Bytes`(`#parseByteStackRaw(_)_SERIALIZATION_Bytes_String`(#SemanticCastToString(S)))),#SemanticCastToList(RESULT))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(174,10,174,157)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#parseAccessListStorageKeys(_,_)_SERIALIZATION_List_JSONs_List`(`JSONs`(`JSONList`(`.List{"JSONs"}_JSONs`(.KList)),`.List{"JSONs"}_JSONs`(.KList)),#SemanticCastToList(RESULT))=>#SemanticCastToList(RESULT) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(175,10,175,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#parseAccessListStorageKeys(_)_SERIALIZATION_List_JSONs`(#SemanticCastToJSONs(J))=>`#parseAccessListStorageKeys(_,_)_SERIALIZATION_List_JSONs_List`(#SemanticCastToJSONs(J),`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(173,10,173,109)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#padByte(_)_SERIALIZATION_String_String`(#SemanticCastToString(S))=>`_+String__STRING-COMMON_String_String_String`(#token("\"0\"","String"),#SemanticCastToString(S)) requires `_==K_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S)),#token("1","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(194,10,194,71)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#padByte(_)_SERIALIZATION_String_String`(#SemanticCastToString(S))=>#SemanticCastToString(S) requires `_==K_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S)),#token("2","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(193,10,193,71)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#nibbleize(_)_SERIALIZATION_Bytes_Bytes`(#SemanticCastToBytes(B))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`#asByteStack(_)_EVM-TYPES_Bytes_Int`(`_/Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(B),#token("0","Int")),#token("16","Int"))),#token("0","Int"),#token("1","Int")),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`#asByteStack(_)_EVM-TYPES_Bytes_Int`(`_%Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(B),#token("0","Int")),#token("16","Int"))),#token("0","Int"),#token("1","Int"))),`#nibbleize(_)_SERIALIZATION_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B),#token("1","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)),#token("1","Int"))))) requires `_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(549,10,552,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#nibbleize(_)_SERIALIZATION_Bytes_Bytes`(#SemanticCastToBytes(B))=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires `notBool_`(`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)),#token("0","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(554,10,554,75)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#newAddr(_,_,_)_SERIALIZATION_Int_Int_Int_Bytes`(#SemanticCastToInt(ACCT),#SemanticCastToInt(SALT),#SemanticCastToBytes(INITCODE))=>`#addr(_)_EVM-TYPES_Int_Int`(`#parseHexWord(_)_SERIALIZATION_Int_String`(`Keccak256(_)_KRYPTO_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(#token("\"\\xff\"","String"),unparseByteStack(`#addrBytes(_)_SERIALIZATION_Bytes_Account`(#SemanticCastToInt(ACCT)))),unparseByteStack(`#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(SALT)))),unparseByteStack(`#parseHexBytes(_)_SERIALIZATION_Bytes_String`(`Keccak256(_)_KRYPTO_String_String`(unparseByteStack(#SemanticCastToBytes(INITCODE))))))))) requires #token("true","Bool") ensures #token("true","Bool") [concrete, label(SERIALIZATION.#newAddrCreate2), org.kframework.attributes.Location(Location(38,29,38,272)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#newAddr(_,_)_SERIALIZATION_Int_Int_Int`(#SemanticCastToInt(ACCT),#SemanticCastToInt(NONCE))=>`#addr(_)_EVM-TYPES_Int_Int`(`#parseHexWord(_)_SERIALIZATION_Int_String`(`Keccak256(_)_KRYPTO_String_String`(`#rlpEncode(_)_SERIALIZATION_String_JSON`(`JSONList`(`JSONs`(`#addrBytes(_)_SERIALIZATION_Bytes_Account`(#SemanticCastToInt(ACCT)),`JSONs`(#SemanticCastToInt(NONCE),`.List{"JSONs"}_JSONs`(.KList)))))))) requires #token("true","Bool") ensures #token("true","Bool") [concrete, label(SERIALIZATION.#newAddr), org.kframework.attributes.Location(Location(37,29,37,124)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#merkleUpdateBranch(_,_,_,_,_)_SERIALIZATION_MerkleTree_Map_String_Int_Bytes_String`(`_Map_`(`_|->_`(#SemanticCastToInt(X),#SemanticCastToMerkleTree(TREE)),#SemanticCastToMap(M)),#SemanticCastToString(BRANCHVALUE),#SemanticCastToInt(X),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE))=>`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(`Map:update`(#SemanticCastToMap(M),#SemanticCastToInt(X),`MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(#SemanticCastToMerkleTree(TREE),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE))),#SemanticCastToString(BRANCHVALUE)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(586,10,587,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#merkleUpdateBranch(_,_,_,_,_)_SERIALIZATION_MerkleTree_Map_String_Int_Bytes_String`(#SemanticCastToMap(M),#SemanticCastToString(BRANCHVALUE),#SemanticCastToInt(X),#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE))=>`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(`Map:update`(#SemanticCastToMap(M),#SemanticCastToInt(X),`MerkleLeaf(_,_)_SERIALIZATION_MerkleTree_Bytes_String`(#SemanticCastToBytes(PATH),#SemanticCastToString(VALUE))),#SemanticCastToString(BRANCHVALUE)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(589,10,590,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#merkleExtensionSplitter(_,_,_,_,_)_SERIALIZATION_MerkleTree_Bytes_Bytes_MerkleTree_Bytes_String`(#SemanticCastToBytes(PATH)=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(PATH),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(P1),#token("0","Int"),#token("1","Int"))),#SemanticCastToBytes(P1)=>`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(P1),#token("1","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(P1)),#token("1","Int"))),#SemanticCastToMerkleTree(_),#SemanticCastToBytes(P2)=>`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(P2),#token("1","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(P2)),#token("1","Int"))),#SemanticCastToString(_)) requires `_andBool_`(`_andBool_`(`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(P1)),#token("0","Int")),`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(P2)),#token("0","Int"))),`_==Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(P1),#token("0","Int")),`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(P2),#token("0","Int")))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(627,10,633,33)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#merkleExtensionSplitter(_,_,_,_,_)_SERIALIZATION_MerkleTree_Bytes_Bytes_MerkleTree_Bytes_String`(#SemanticCastToBytes(PATH),#SemanticCastToBytes(P1),#SemanticCastToMerkleTree(TREE),#SemanticCastToBytes(P2),#SemanticCastToString(VALUE))=>`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(PATH),`MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(#SemanticCastToMerkleTree(TREE),#SemanticCastToBytes(P2),#SemanticCastToString(VALUE))) requires `_==Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(P1)),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(641,10,643,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#merkleExtensionSplitter(_,_,_,_,_)_SERIALIZATION_MerkleTree_Bytes_Bytes_MerkleTree_Bytes_String`(#SemanticCastToBytes(PATH),#SemanticCastToBytes(P1),#SemanticCastToMerkleTree(TREE),#SemanticCastToBytes(P2),#SemanticCastToString(VALUE))=>`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(PATH),`#merkleExtensionBrancher(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_MerkleTree`(`MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(`.Map`(.KList),#token("\"\"","String")),#SemanticCastToBytes(P2),#SemanticCastToString(VALUE)),#SemanticCastToBytes(P1),#SemanticCastToMerkleTree(TREE))) requires `_andBool_`(`_andBool_`(`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(P1)),#token("0","Int")),`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(P2)),#token("0","Int"))),`_=/=Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(P1),#token("0","Int")),`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(P2),#token("0","Int")))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(635,10,639,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#merkleExtensionSplitter(_,_,_,_,_)_SERIALIZATION_MerkleTree_Bytes_Bytes_MerkleTree_Bytes_String`(#SemanticCastToBytes(PATH),#SemanticCastToBytes(P1),#SemanticCastToMerkleTree(TREE),#SemanticCastToBytes(P2),#SemanticCastToString(VALUE))=>`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(PATH),`#merkleExtensionBrancher(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_MerkleTree`(`MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(`.Map`(.KList),#token("\"\"","String")),#SemanticCastToBytes(P2),#SemanticCastToString(VALUE)),#SemanticCastToBytes(P1),#SemanticCastToMerkleTree(TREE))) requires `_==Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(P2)),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(645,10,647,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#merkleExtensionBuilderAux(_,_,_,_,_)_SERIALIZATION_MerkleTree_Bytes_Bytes_String_Bytes_String`(#SemanticCastToBytes(PATH),#SemanticCastToBytes(P1),#SemanticCastToString(V1),#SemanticCastToBytes(P2),#SemanticCastToString(V2))=>`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(PATH),`MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(`.Map`(.KList),#token("\"\"","String")),#SemanticCastToBytes(P1),#SemanticCastToString(V1)),#SemanticCastToBytes(P2),#SemanticCastToString(V2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(611,10,612,101)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#merkleExtensionBuilderAux(_,_,_,_,_)_SERIALIZATION_MerkleTree_Bytes_Bytes_String_Bytes_String`(#SemanticCastToBytes(PATH),#SemanticCastToBytes(P1),#SemanticCastToString(V1),#SemanticCastToBytes(P2),#SemanticCastToString(V2))=>`#merkleExtensionBuilder(_,_,_,_,_)_SERIALIZATION_MerkleTree_Bytes_Bytes_String_Bytes_String`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(#SemanticCastToBytes(PATH),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(P1),#token("0","Int"),#token("1","Int"))),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(P1),#token("1","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(P1)),#token("1","Int"))),#SemanticCastToString(V1),`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(P2),#token("1","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(P2)),#token("1","Int"))),#SemanticCastToString(V2)) requires `_==Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(P1),#token("0","Int")),`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(P2),#token("0","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(604,10,609,33)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#merkleExtensionBuilder(_,_,_,_,_)_SERIALIZATION_MerkleTree_Bytes_Bytes_String_Bytes_String`(#SemanticCastToBytes(PATH),#SemanticCastToBytes(P1),#SemanticCastToString(V1),#SemanticCastToBytes(P2),#SemanticCastToString(V2))=>`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(#SemanticCastToBytes(PATH),`MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerklePut(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_String`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(`.Map`(.KList),#token("\"\"","String")),#SemanticCastToBytes(P1),#SemanticCastToString(V1)),#SemanticCastToBytes(P2),#SemanticCastToString(V2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(600,10,601,101)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#merkleExtensionBuilder(_,_,_,_,_)_SERIALIZATION_MerkleTree_Bytes_Bytes_String_Bytes_String`(#SemanticCastToBytes(PATH),#SemanticCastToBytes(P1),#SemanticCastToString(V1),#SemanticCastToBytes(P2),#SemanticCastToString(V2))=>`#merkleExtensionBuilderAux(_,_,_,_,_)_SERIALIZATION_MerkleTree_Bytes_Bytes_String_Bytes_String`(#SemanticCastToBytes(PATH),#SemanticCastToBytes(P1),#SemanticCastToString(V1),#SemanticCastToBytes(P2),#SemanticCastToString(V2)) requires `_andBool_`(`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(P1)),#token("0","Int")),`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(P2)),#token("0","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(595,10,598,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#merkleExtensionBrancher(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_MerkleTree`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(#SemanticCastToMap(M),#SemanticCastToString(VALUE)),#SemanticCastToBytes(PATH),#SemanticCastToMerkleTree(EXTTREE))=>`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(`Map:update`(#SemanticCastToMap(M),`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(PATH),#token("0","Int")),`MerkleExtension(_,_)_SERIALIZATION_MerkleTree_Bytes_MerkleTree`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(PATH),#token("1","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH)),#token("1","Int"))),#SemanticCastToMerkleTree(EXTTREE))),#SemanticCastToString(VALUE)) requires `_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH)),#token("1","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(617,10,619,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#merkleExtensionBrancher(_,_,_)_SERIALIZATION_MerkleTree_MerkleTree_Bytes_MerkleTree`(`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(#SemanticCastToMap(M),#SemanticCastToString(VALUE)),#SemanticCastToBytes(PATH),#SemanticCastToMerkleTree(EXTTREE))=>`MerkleBranch(_,_)_SERIALIZATION_MerkleTree_Map_String`(`Map:update`(#SemanticCastToMap(M),`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(PATH),#token("0","Int")),#SemanticCastToMerkleTree(EXTTREE)),#SemanticCastToString(VALUE)) requires `_==Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(PATH)),#token("1","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(621,10,623,41)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#intMap2StorageMapAux(_,_,_)_SERIALIZATION_Map_Map_Map_List`(#SemanticCastToMap(SMAP),#SemanticCastToMap(_),`.List`(.KList))=>#SemanticCastToMap(SMAP) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(661,10,661,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#intMap2StorageMapAux(_,_,_)_SERIALIZATION_Map_Map_Map_List`(#SemanticCastToMap(SMAP),#SemanticCastToMap(IMAP),`_List_`(`ListItem`(#SemanticCastToKItem(K)),#SemanticCastToList(REST)))=>`#intMap2StorageMapAux(_,_,_)_SERIALIZATION_Map_Map_Map_List`(#SemanticCastToMap(SMAP),#SemanticCastToMap(IMAP),#SemanticCastToList(REST)) requires `_==Int_`(`project:Int`(`Map:lookup`(#SemanticCastToMap(IMAP),#SemanticCastToKItem(K))),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(666,10,668,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#intMap2StorageMapAux(_,_,_)_SERIALIZATION_Map_Map_Map_List`(#SemanticCastToMap(SMAP),#SemanticCastToMap(IMAP),`_List_`(`ListItem`(#SemanticCastToInt(K)),#SemanticCastToList(REST)))=>`#intMap2StorageMapAux(_,_,_)_SERIALIZATION_Map_Map_Map_List`(`_Map_`(`_|->_`(`#wordBytes(_)_SERIALIZATION_Bytes_Int`(#SemanticCastToInt(K)),`#rlpEncodeInt(_)_SERIALIZATION_String_Int`(`project:Int`(`Map:lookup`(#SemanticCastToMap(IMAP),#SemanticCastToInt(K))))),#SemanticCastToMap(SMAP)),#SemanticCastToMap(IMAP),#SemanticCastToList(REST)) requires `_=/=Int_`(`project:Int`(`Map:lookup`(#SemanticCastToMap(IMAP),#SemanticCastToInt(K))),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(662,10,664,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#intMap2StorageMap(_)_SERIALIZATION_Map_Map`(#SemanticCastToMap(M))=>`#intMap2StorageMapAux(_,_,_)_SERIALIZATION_Map_Map_Map_List`(`.Map`(.KList),#SemanticCastToMap(M),`keys_list(_)_MAP_List_Map`(#SemanticCastToMap(M))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(659,10,659,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#hashTxData(_)_SERIALIZATION_String_TxData`(#SemanticCastToTxData(TXDATA))=>`Keccak256(_)_KRYPTO_String_String`(`_+String__STRING-COMMON_String_String_String`(#token("\"\\x02\"","String"),`#rlpEncodeTxData(_)_SERIALIZATION_String_TxData`(#SemanticCastToTxData(TXDATA)))) requires isDynamicFeeTx(#SemanticCastToTxData(TXDATA)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(108,10,108,119)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#hashTxData(_)_SERIALIZATION_String_TxData`(#SemanticCastToTxData(TXDATA))=>`Keccak256(_)_KRYPTO_String_String`(`_+String__STRING-COMMON_String_String_String`(#token("\"\\x01\"","String"),`#rlpEncodeTxData(_)_SERIALIZATION_String_TxData`(#SemanticCastToTxData(TXDATA)))) requires isAccessListTx(#SemanticCastToTxData(TXDATA)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(107,10,107,119)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#hashTxData(_)_SERIALIZATION_String_TxData`(#SemanticCastToTxData(TXDATA))=>`Keccak256(_)_KRYPTO_String_String`(`#rlpEncodeTxData(_)_SERIALIZATION_String_TxData`(#SemanticCastToTxData(TXDATA))) requires isLegacyTx(#SemanticCastToTxData(TXDATA)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(106,10,106,119)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#hashSignedTx(_,_,_,_,_,_,_,_,_)_SERIALIZATION_String_Int_Int_Int_Account_Int_Bytes_Int_Bytes_Bytes`(#SemanticCastToInt(TN),#SemanticCastToInt(TP),#SemanticCastToInt(TG),#SemanticCastToAccount(TT),#SemanticCastToInt(TV),#SemanticCastToBytes(TD),#SemanticCastToInt(TW),#SemanticCastToBytes(TR),#SemanticCastToBytes(TS))=>`Keccak256(_)_KRYPTO_String_String`(`#rlpEncode(_)_SERIALIZATION_String_JSON`(`JSONList`(`JSONs`(#SemanticCastToInt(TN),`JSONs`(#SemanticCastToInt(TP),`JSONs`(#SemanticCastToInt(TG),`JSONs`(`#addrBytes(_)_SERIALIZATION_Bytes_Account`(#SemanticCastToAccount(TT)),`JSONs`(#SemanticCastToInt(TV),`JSONs`(#SemanticCastToBytes(TD),`JSONs`(#SemanticCastToInt(TW),`JSONs`(#SemanticCastToBytes(TR),`JSONs`(#SemanticCastToBytes(TS),`.List{"JSONs"}_JSONs`(.KList))))))))))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(103,10,104,85)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#emptyContractRLP_SERIALIZATION_String`(.KList)=>`#rlpEncodeLength(_,_)_SERIALIZATION_String_String_Int`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`#rlpEncodeInt(_)_SERIALIZATION_String_Int`(#token("0","Int")),`#rlpEncodeInt(_)_SERIALIZATION_String_Int`(#token("0","Int"))),`#rlpEncodeString(_)_SERIALIZATION_String_String`(`Hex2Raw(_)_SERIALIZATION_String_String`(`Keccak256(_)_KRYPTO_String_String`(#token("\"\\x80\"","String"))))),`#rlpEncodeString(_)_SERIALIZATION_String_String`(`Hex2Raw(_)_SERIALIZATION_String_String`(`Keccak256(_)_KRYPTO_String_String`(#token("\"\"","String"))))),#token("192","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(689,10,694,48)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#decodeLengthPrefixLength(_,_,_,_)_SERIALIZATION_LengthPrefix_LengthPrefixType_String_Int_Int`(`#str_SERIALIZATION_LengthPrefixType`(.KList),#SemanticCastToString(STR),#SemanticCastToInt(START),#SemanticCastToInt(B0))=>`#decodeLengthPrefixLength(_,_,_,_)_SERIALIZATION_LengthPrefix_LengthPrefixType_Int_Int_Int`(`#str_SERIALIZATION_LengthPrefixType`(.KList),#SemanticCastToInt(START),`_+Int_`(`_-Int_`(`_-Int_`(#SemanticCastToInt(B0),#token("128","Int")),#token("56","Int")),#token("1","Int")),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#parseByteStackRaw(_)_SERIALIZATION_Bytes_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(STR),`_+Int_`(#SemanticCastToInt(START),#token("1","Int")),`_+Int_`(`_+Int_`(#SemanticCastToInt(START),#token("1","Int")),`_+Int_`(`_-Int_`(`_-Int_`(#SemanticCastToInt(B0),#token("128","Int")),#token("56","Int")),#token("1","Int"))))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(422,10,422,239)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#decodeLengthPrefixLength(_,_,_,_)_SERIALIZATION_LengthPrefix_LengthPrefixType_String_Int_Int`(`#list_SERIALIZATION_LengthPrefixType`(.KList),#SemanticCastToString(STR),#SemanticCastToInt(START),#SemanticCastToInt(B0))=>`#decodeLengthPrefixLength(_,_,_,_)_SERIALIZATION_LengthPrefix_LengthPrefixType_Int_Int_Int`(`#list_SERIALIZATION_LengthPrefixType`(.KList),#SemanticCastToInt(START),`_+Int_`(`_-Int_`(`_-Int_`(#SemanticCastToInt(B0),#token("192","Int")),#token("56","Int")),#token("1","Int")),`#asWord(_)_EVM-TYPES_Int_Bytes`(`#parseByteStackRaw(_)_SERIALIZATION_Bytes_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(STR),`_+Int_`(#SemanticCastToInt(START),#token("1","Int")),`_+Int_`(`_+Int_`(#SemanticCastToInt(START),#token("1","Int")),`_+Int_`(`_-Int_`(`_-Int_`(#SemanticCastToInt(B0),#token("192","Int")),#token("56","Int")),#token("1","Int"))))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(423,10,423,239)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#decodeLengthPrefixLength(_,_,_,_)_SERIALIZATION_LengthPrefix_LengthPrefixType_Int_Int_Int`(#SemanticCastToLengthPrefixType(TYPE),#SemanticCastToInt(START),#SemanticCastToInt(LL),#SemanticCastToInt(L))=>`_(_,_)_SERIALIZATION_LengthPrefix_LengthPrefixType_Int_Int`(#SemanticCastToLengthPrefixType(TYPE),#SemanticCastToInt(L),`_+Int_`(`_+Int_`(#SemanticCastToInt(START),#token("1","Int")),#SemanticCastToInt(LL))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(424,10,424,88)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#decodeLengthPrefix(_,_,_)_SERIALIZATION_LengthPrefix_String_Int_Int`(#SemanticCastToString(_),#SemanticCastToInt(START),#SemanticCastToInt(B0))=>`_(_,_)_SERIALIZATION_LengthPrefix_LengthPrefixType_Int_Int`(`#str_SERIALIZATION_LengthPrefixType`(.KList),`_-Int_`(#SemanticCastToInt(B0),#token("128","Int")),`_+Int_`(#SemanticCastToInt(START),#token("1","Int"))) requires `_andBool_`(`_>=Int_`(#SemanticCastToInt(B0),#token("128","Int")),`_<Int_`(#SemanticCastToInt(B0),`_+Int_`(#token("128","Int"),#token("56","Int")))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(417,10,417,149)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#decodeLengthPrefix(_,_,_)_SERIALIZATION_LengthPrefix_String_Int_Int`(#SemanticCastToString(_),#SemanticCastToInt(START),#SemanticCastToInt(B0))=>`_(_,_)_SERIALIZATION_LengthPrefix_LengthPrefixType_Int_Int`(`#str_SERIALIZATION_LengthPrefixType`(.KList),#token("1","Int"),#SemanticCastToInt(START)) requires `_<Int_`(#SemanticCastToInt(B0),#token("128","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(416,10,416,118)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#decodeLengthPrefix(_,_,_)_SERIALIZATION_LengthPrefix_String_Int_Int`(#SemanticCastToString(_),#SemanticCastToInt(START),#SemanticCastToInt(B0))=>`_(_,_)_SERIALIZATION_LengthPrefix_LengthPrefixType_Int_Int`(`#list_SERIALIZATION_LengthPrefixType`(.KList),`_-Int_`(#SemanticCastToInt(B0),#token("192","Int")),`_+Int_`(#SemanticCastToInt(START),#token("1","Int"))) requires `_andBool_`(`_>=Int_`(#SemanticCastToInt(B0),#token("192","Int")),`_<Int_`(#SemanticCastToInt(B0),`_+Int_`(#token("192","Int"),#token("56","Int")))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(419,10,419,147)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#decodeLengthPrefix(_,_,_)_SERIALIZATION_LengthPrefix_String_Int_Int`(#SemanticCastToString(STR),#SemanticCastToInt(START),#SemanticCastToInt(B0))=>`#decodeLengthPrefixLength(_,_,_,_)_SERIALIZATION_LengthPrefix_LengthPrefixType_String_Int_Int`(`#str_SERIALIZATION_LengthPrefixType`(.KList),#SemanticCastToString(STR),#SemanticCastToInt(START),#SemanticCastToInt(B0)) requires `_andBool_`(`_>=Int_`(#SemanticCastToInt(B0),`_+Int_`(#token("128","Int"),#token("56","Int"))),`_<Int_`(#SemanticCastToInt(B0),#token("192","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(418,10,418,149)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#decodeLengthPrefix(_,_,_)_SERIALIZATION_LengthPrefix_String_Int_Int`(#SemanticCastToString(STR),#SemanticCastToInt(START),#SemanticCastToInt(B0))=>`#decodeLengthPrefixLength(_,_,_,_)_SERIALIZATION_LengthPrefix_LengthPrefixType_String_Int_Int`(`#list_SERIALIZATION_LengthPrefixType`(.KList),#SemanticCastToString(STR),#SemanticCastToInt(START),#SemanticCastToInt(B0)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(420,10,420,97)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#decodeLengthPrefix(_,_)_SERIALIZATION_LengthPrefix_String_Int`(#SemanticCastToString(STR),#SemanticCastToInt(START))=>`#decodeLengthPrefix(_,_,_)_SERIALIZATION_LengthPrefix_String_Int_Int`(#SemanticCastToString(STR),#SemanticCastToInt(START),`ordChar(_)_STRING-COMMON_Int_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(STR),#SemanticCastToInt(START),`_+Int_`(#SemanticCastToInt(START),#token("1","Int"))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(414,10,414,125)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#cleanBranchMapAux(_,_,_)_SERIALIZATION_Map_Map_List_Set`(`_Map_`(`_|->_`(#SemanticCastToKItem(X),`.MerkleTree_SERIALIZATION_MerkleTree`(.KList)),#SemanticCastToMap(_)),`_List_`(`ListItem`(#SemanticCastToKItem(X))=>`.List`(.KList),#SemanticCastToList(_)),`_Set_`(`.Set`(.KList)=>`SetItem`(#SemanticCastToKItem(X)),#SemanticCastToSet(_))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(581,10,581,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#cleanBranchMapAux(_,_,_)_SERIALIZATION_Map_Map_List_Set`(#SemanticCastToMap(_),`_List_`(`ListItem`(#SemanticCastToKItem(_))=>`.List`(.KList),#SemanticCastToList(_)),#SemanticCastToSet(_)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(582,10,582,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  rule `#cleanBranchMapAux(_,_,_)_SERIALIZATION_Map_Map_List_Set`(#SemanticCastToMap(M),`.List`(.KList),#SemanticCastToSet(S))=>`removeAll(_,_)_MAP_Map_Map_Set`(#SemanticCastToMap(M),#SemanticCastToSet(S)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(580,10,580,126)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#cleanBranchMap(_)_SERIALIZATION_Map_Map`(#SemanticCastToMap(M))=>`#cleanBranchMapAux(_,_,_)_SERIALIZATION_Map_Map_List_Set`(#SemanticCastToMap(M),`keys_list(_)_MAP_List_Map`(#SemanticCastToMap(M)),`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(578,10,578,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#byteify(_)_SERIALIZATION_Bytes_Bytes`(#SemanticCastToBytes(B))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`#asByteStack(_)_EVM-TYPES_Bytes_Int`(`_+Int_`(`_*Int_`(`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(B),#token("0","Int")),#token("16","Int")),`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(B),#token("1","Int")))),#token("0","Int"),#token("1","Int")),`#byteify(_)_SERIALIZATION_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(B),#token("2","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)),#token("2","Int"))))) requires `_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(556,10,558,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#byteify(_)_SERIALIZATION_Bytes_Bytes`(#SemanticCastToBytes(B))=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires `notBool_`(`_>Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(B)),#token("0","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(560,10,560,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#alignHexString(_)_SERIALIZATION_String_String`(#SemanticCastToString(S))=>`_+String__STRING-COMMON_String_String_String`(#token("\"0\"","String"),#SemanticCastToString(S)) requires `notBool_`(`_==Int_`(`_modInt_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S)),#token("2","Int")),#token("0","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(144,10,144,95)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#alignHexString(_)_SERIALIZATION_String_String`(#SemanticCastToString(S))=>#SemanticCastToString(S) requires `_==Int_`(`_modInt_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S)),#token("2","Int")),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(143,10,143,95)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#addrFromPrivateKey(_)_SERIALIZATION_Int_String`(#SemanticCastToString(KEY))=>`#addr(_)_EVM-TYPES_Int_Int`(`#parseHexWord(_)_SERIALIZATION_Int_String`(`Keccak256(_)_KRYPTO_String_String`(`Hex2Raw(_)_SERIALIZATION_String_String`(`ECDSAPubKey(_)_KRYPTO_String_String`(`Hex2Raw(_)_SERIALIZATION_String_String`(#SemanticCastToString(KEY))))))) requires #token("true","Bool") ensures #token("true","Bool") [concrete, label(SERIALIZATION.addrFromPrivateKey), org.kframework.attributes.Location(Location(58,32,58,143)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#addrBytes(_)_SERIALIZATION_Bytes_Account`(`.Account_EVM-TYPES_Account`(.KList))=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(215,10,215,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#addrBytes(_)_SERIALIZATION_Bytes_Account`(#SemanticCastToInt(ACCT))=>`#padToWidth(_,_)_EVM-TYPES_Bytes_Int_Bytes`(#token("20","Int"),`#asByteStack(_)_EVM-TYPES_Bytes_Int`(#SemanticCastToInt(ACCT))) requires `#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(ACCT)) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(216,10,216,98)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#HPEncode(_,_)_SERIALIZATION_Bytes_Bytes_Int`(#SemanticCastToBytes(X),#SemanticCastToInt(T))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(`#asByteStack(_)_EVM-TYPES_Bytes_Int`(`_*Int_`(`HPEncodeAux(_)_SERIALIZATION_Int_Int`(#SemanticCastToInt(T)),#token("16","Int"))),#token("0","Int"),#token("1","Int")),`#byteify(_)_SERIALIZATION_Bytes_Bytes`(#SemanticCastToBytes(X))) requires `notBool_`(`_=/=Int_`(`_%Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(X)),#token("2","Int")),#token("0","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(567,10,568,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `#HPEncode(_,_)_SERIALIZATION_Bytes_Bytes_Int`(#SemanticCastToBytes(X),#SemanticCastToInt(T))=>`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#asByteStack(_)_EVM-TYPES_Bytes_Int`(`_+Int_`(`_*Int_`(`_+Int_`(`HPEncodeAux(_)_SERIALIZATION_Int_Int`(#SemanticCastToInt(T)),#token("1","Int")),#token("16","Int")),`_[_]_BYTES-HOOKED_Int_Bytes_Int`(#SemanticCastToBytes(X),#token("0","Int")))),`#byteify(_)_SERIALIZATION_Bytes_Bytes`(`#range(_,_,_)_EVM-TYPES_Bytes_Bytes_Int_Int`(#SemanticCastToBytes(X),#token("1","Int"),`_-Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(X)),#token("1","Int"))))) requires `_=/=Int_`(`_%Int_`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(X)),#token("2","Int")),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(564,10,565,46)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule #blockHashHeaderStr(#SemanticCastToString(HP),#SemanticCastToString(HO),#SemanticCastToString(HC),#SemanticCastToString(HR),#SemanticCastToString(HT),#SemanticCastToString(HE),#SemanticCastToString(HB),#SemanticCastToString(HD),#SemanticCastToString(HI),#SemanticCastToString(HL),#SemanticCastToString(HG),#SemanticCastToString(HS),#SemanticCastToString(HX),#SemanticCastToString(HM),#SemanticCastToString(HN))=>`#parseHexWord(_)_SERIALIZATION_Int_String`(`Keccak256(_)_KRYPTO_String_String`(`#rlpEncode(_)_SERIALIZATION_String_JSON`(`JSONList`(`JSONs`(#SemanticCastToString(HP),`JSONs`(#SemanticCastToString(HO),`JSONs`(#SemanticCastToString(HC),`JSONs`(#SemanticCastToString(HR),`JSONs`(#SemanticCastToString(HT),`JSONs`(#SemanticCastToString(HE),`JSONs`(#SemanticCastToString(HB),`JSONs`(#SemanticCastToString(HD),`JSONs`(#SemanticCastToString(HI),`JSONs`(#SemanticCastToString(HL),`JSONs`(#SemanticCastToString(HG),`JSONs`(#SemanticCastToString(HS),`JSONs`(#SemanticCastToString(HX),`JSONs`(#SemanticCastToString(HM),`JSONs`(#SemanticCastToString(HN),`.List{"JSONs"}_JSONs`(.KList)))))))))))))))))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(69,10,70,119)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #blockHashHeaderBaseFeeStr(#SemanticCastToString(HP),#SemanticCastToString(HO),#SemanticCastToString(HC),#SemanticCastToString(HR),#SemanticCastToString(HT),#SemanticCastToString(HE),#SemanticCastToString(HB),#SemanticCastToString(HD),#SemanticCastToString(HI),#SemanticCastToString(HL),#SemanticCastToString(HG),#SemanticCastToString(HS),#SemanticCastToString(HX),#SemanticCastToString(HM),#SemanticCastToString(HN),#SemanticCastToString(HF))=>`#parseHexWord(_)_SERIALIZATION_Int_String`(`Keccak256(_)_KRYPTO_String_String`(`#rlpEncode(_)_SERIALIZATION_String_JSON`(`JSONList`(`JSONs`(#SemanticCastToString(HP),`JSONs`(#SemanticCastToString(HO),`JSONs`(#SemanticCastToString(HC),`JSONs`(#SemanticCastToString(HR),`JSONs`(#SemanticCastToString(HT),`JSONs`(#SemanticCastToString(HE),`JSONs`(#SemanticCastToString(HB),`JSONs`(#SemanticCastToString(HD),`JSONs`(#SemanticCastToString(HI),`JSONs`(#SemanticCastToString(HL),`JSONs`(#SemanticCastToString(HG),`JSONs`(#SemanticCastToString(HS),`JSONs`(#SemanticCastToString(HX),`JSONs`(#SemanticCastToString(HM),`JSONs`(#SemanticCastToString(HN),`JSONs`(#SemanticCastToString(HF),`.List{"JSONs"}_JSONs`(.KList))))))))))))))))))))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(82,10,83,123)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module SET [digest(�|�Js�r�y��!2�ؾ�<宅��:��), org.kframework.attributes.Location(Location(696,1,808,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports INT-SYNTAX
  imports BASIC-K
  syntax associativity left _|Set__SET_Set_Set_Set
  syntax associativity left _Set_
  syntax Set [hook(SET.Set), org.kframework.attributes.Location(Location(700,3,700,29)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  syntax Set ::= Set Set [assoc, comm, element(SetItem), format(%1%n%2), function, hook(SET.concat), idem, klabel(_Set_), left, symbol, unit(.Set)]
  syntax Set ::= Set "|Set" Set [comm, function, hook(SET.union), left, total]
  syntax Set ::= Set "-Set" Set [function, hook(SET.difference), klabel(Set:difference), latex({#1}-_{\it Set}{#2}), symbol, total]
  syntax Set ::= "intersectSet" "(" Set "," Set ")" [comm, function, hook(SET.intersection), klabel(intersectSet), total]
  syntax Set ::= "SetItem" "(" KItem ")" [function, hook(SET.element), injective, klabel(SetItem), symbol, total]
  syntax Set ::= ".Set" [function, hook(SET.unit), klabel(.Set), latex(\dotCt{Set}), symbol, total]
  syntax KItem ::= "choice" "(" Set ")" [function, hook(SET.choice), klabel(Set:choice)]
  syntax Int ::= "size" "(" Set ")" [function, hook(SET.size), klabel(size), total]
  syntax Bool ::= Set "<=Set" Set [function, hook(SET.inclusion), total]
  syntax Bool ::= KItem "in" Set [function, hook(SET.in), klabel(Set:in), symbol, total]
  rule `_|Set__SET_Set_Set_Set`(#SemanticCastToSet(S1),#SemanticCastToSet(S2))=>`_Set_`(#SemanticCastToSet(S1),`Set:difference`(#SemanticCastToSet(S2),#SemanticCastToSet(S1))) requires #token("true","Bool") ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(749,8,749,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module SET-KORE-SYMBOLIC [digest(�²��ӡ,�v�� A�$��Eb�����f�.0), kore, org.kframework.attributes.Location(Location(817,1,891,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), symbolic]
  imports SET
  imports K-EQUAL
  imports BOOL
  rule `intersectSet(_,_)_SET_Set_Set_Set`(`_Set_`(#SemanticCastToSet(S1),`SetItem`(#SemanticCastToKItem(X))),`_Set_`(#SemanticCastToSet(S2),`SetItem`(#SemanticCastToKItem(X))))=>`_Set_`(`intersectSet(_,_)_SET_Set_Set_Set`(#SemanticCastToSet(S1),#SemanticCastToSet(S2)),`SetItem`(#SemanticCastToKItem(X))) requires #token("true","Bool") ensures `_andBool_`(`notBool_`(`Set:in`(#SemanticCastToKItem(X),#SemanticCastToSet(S1))),`notBool_`(`Set:in`(#SemanticCastToKItem(X),#SemanticCastToSet(S2)))) [org.kframework.attributes.Location(Location(871,8,873,82)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol]), simplification]
  rule `intersectSet(_,_)_SET_Set_Set_Set`(`_Set_`(#SemanticCastToSet(S),`SetItem`(#SemanticCastToKItem(X))),`SetItem`(#SemanticCastToKItem(X)))=>`SetItem`(#SemanticCastToKItem(X)) requires #token("true","Bool") ensures `notBool_`(`Set:in`(#SemanticCastToKItem(X),#SemanticCastToSet(S))) [comm, org.kframework.attributes.Location(Location(867,8,868,81)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol]), simplification]
  rule `intersectSet(_,_)_SET_Set_Set_Set`(`.Set`(.KList),#SemanticCastToSet(_))=>`.Set`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [comm, org.kframework.attributes.Location(Location(864,8,864,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `intersectSet(_,_)_SET_Set_Set_Set`(#SemanticCastToSet(S),#SemanticCastToSet(S))=>#SemanticCastToSet(S) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(865,8,865,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_|Set__SET_Set_Set_Set`(`_Set_`(#SemanticCastToSet(S),`SetItem`(#SemanticCastToKItem(X))),`SetItem`(#SemanticCastToKItem(X)))=>`_Set_`(#SemanticCastToSet(S),`SetItem`(#SemanticCastToKItem(X))) requires #token("true","Bool") ensures `notBool_`(`Set:in`(#SemanticCastToKItem(X),#SemanticCastToSet(S))) [comm, org.kframework.attributes.Location(Location(857,8,858,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol]), simplification]
  rule `_|Set__SET_Set_Set_Set`(#SemanticCastToSet(S),`.Set`(.KList))=>#SemanticCastToSet(S) requires #token("true","Bool") ensures #token("true","Bool") [comm, org.kframework.attributes.Location(Location(854,8,854,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `_|Set__SET_Set_Set_Set`(#SemanticCastToSet(S),#SemanticCastToSet(S))=>#SemanticCastToSet(S) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(855,8,855,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `Set:in`(#SemanticCastToKItem(_E),`.Set`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(876,8,876,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `Set:in`(#SemanticCastToKItem(X),`_|Set__SET_Set_Set_Set`(`_Set_`(`SetItem`(#SemanticCastToKItem(X)),#SemanticCastToSet(S)),#SemanticCastToSet(_)))=>#token("true","Bool") requires #token("true","Bool") ensures `notBool_`(`Set:in`(#SemanticCastToKItem(X),#SemanticCastToSet(S))) [org.kframework.attributes.Location(Location(886,8,887,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol]), simplification]
  rule `Set:in`(#SemanticCastToKItem(X),`_|Set__SET_Set_Set_Set`(#SemanticCastToSet(_),`_Set_`(`SetItem`(#SemanticCastToKItem(X)),#SemanticCastToSet(S))))=>#token("true","Bool") requires #token("true","Bool") ensures `notBool_`(`Set:in`(#SemanticCastToKItem(X),#SemanticCastToSet(S))) [org.kframework.attributes.Location(Location(888,8,889,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol]), simplification]
  rule `Set:in`(#SemanticCastToKItem(E),`_Set_`(#SemanticCastToSet(S),`SetItem`(#SemanticCastToKItem(E))))=>#token("true","Bool") requires #token("true","Bool") ensures `notBool_`(`Set:in`(#SemanticCastToKItem(E),#SemanticCastToSet(S))) [org.kframework.attributes.Location(Location(877,8,878,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol]), simplification]
  rule `Set:difference`(`_Set_`(#SemanticCastToSet(S),`SetItem`(#SemanticCastToKItem(X))),`SetItem`(#SemanticCastToKItem(X)))=>#SemanticCastToSet(S) requires #token("true","Bool") ensures `notBool_`(`Set:in`(#SemanticCastToKItem(X),#SemanticCastToSet(S))) [org.kframework.attributes.Location(Location(843,8,844,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol]), simplification]
  rule `Set:difference`(`_Set_`(#SemanticCastToSet(S),`SetItem`(#SemanticCastToKItem(X))),#SemanticCastToSet(S))=>`SetItem`(#SemanticCastToKItem(X)) requires #token("true","Bool") ensures `notBool_`(`Set:in`(#SemanticCastToKItem(X),#SemanticCastToSet(S))) [org.kframework.attributes.Location(Location(841,8,842,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol]), simplification]
  rule `Set:difference`(`SetItem`(#SemanticCastToKItem(X)),`_Set_`(#SemanticCastToSet(S),`SetItem`(#SemanticCastToKItem(X))))=>`.Set`(.KList) requires #token("true","Bool") ensures `notBool_`(`Set:in`(#SemanticCastToKItem(X),#SemanticCastToSet(S))) [org.kframework.attributes.Location(Location(837,8,838,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol]), simplification]
  rule `Set:difference`(`.Set`(.KList),#SemanticCastToSet(_))=>`.Set`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(836,8,836,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule `Set:difference`(#SemanticCastToSet(S),`_Set_`(#SemanticCastToSet(S),`SetItem`(#SemanticCastToKItem(X))))=>`.Set`(.KList) requires #token("true","Bool") ensures `notBool_`(`Set:in`(#SemanticCastToKItem(X),#SemanticCastToSet(S))) [org.kframework.attributes.Location(Location(839,8,840,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol]), simplification]
  rule `Set:difference`(#SemanticCastToSet(S),`.Set`(.KList))=>#SemanticCastToSet(S) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(835,8,835,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  rule #Ceil(`_Set_`(#SemanticCastToSet(@S),`SetItem`(#SemanticCastToKItem(@E))))=>#And(#And(#Equals(`Set:in`(#SemanticCastToKItem(@E),#SemanticCastToSet(@S)),#token("false","Bool")),#Ceil(#SemanticCastToSet(@S))),#Ceil(#SemanticCastToKItem(@E))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(830,8,831,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
endmodule


module SET-SYMBOLIC [digest(�&���к�"�^!CګN-���
�J��t), org.kframework.attributes.Location(Location(893,1,895,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports SET-KORE-SYMBOLIC
endmodule


module SOLIDITY-FIELDS [digest(�N�q�z+q_�?����S�����5���), org.kframework.attributes.Location(Location(75,1,94,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md))]
  imports HASHED-LOCATIONS
  syntax Int ::= "#loc" "(" ContractAccess ")" [function, klabel(contract_access_loc), symbol]
  syntax Int ::= "#hash" "(" Int "," Int ")" [function, klabel(contract_access_hash), symbol]
  syntax Field [org.kframework.attributes.Location(Location(79,5,79,17)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md))]
  syntax ContractAccess ::= ContractAccess "[" Int "]" [klabel(contract_access_index), symbol]
  syntax ContractAccess ::= ContractAccess "." Field [klabel(contract_access_field), symbol]
  syntax ContractAccess ::= Contract
  syntax Contract [org.kframework.attributes.Location(Location(78,5,78,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md))]
  rule `contract_access_loc`(`contract_access_index`(#SemanticCastToContractAccess(C),#SemanticCastToInt(I)))=>`contract_access_hash`(`contract_access_loc`(#SemanticCastToContractAccess(C)),#SemanticCastToInt(I)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(88,10,88,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `contract_access_loc`(#SemanticCastToContract(_))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(87,10,87,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `contract_access_hash`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`keccak(_)_SERIALIZATION_Int_Bytes`(`_+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes`(`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),#SemanticCastToInt(I2)),`#bufStrict(_,_)_BUF-SYNTAX_Bytes_Int_Int`(#token("32","Int"),#SemanticCastToInt(I1)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(92,10,92,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module SORT-BOOL [digest(0�P�p�f��U�U��&6U��ǐ�G ��k����\), org.kframework.attributes.Location(Location(1067,1,1069,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  syntax Bool [hook(BOOL.Bool), org.kframework.attributes.Location(Location(1068,3,1068,32)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
endmodule


module SORT-K [digest(rL�@:�[���Z�^���q59�,t�:e�), org.kframework.attributes.Location(Location(26,1,28,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  syntax K [hook(K.K), org.kframework.attributes.Location(Location(27,3,27,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
endmodule


module SORT-KBOTT [digest(���FN�"Rѳ9i��DCk=mNP��K	JJ��), org.kframework.attributes.Location(Location(68,1,71,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
  imports SORT-K
  syntax KBott [org.kframework.attributes.Location(Location(70,3,70,15)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
endmodule


module SORT-PREDICATES [digest(jei���{���e��Kh���ǘ�i"&9�iZ), org.kframework.attributes.Location(Location(436,1,441,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/kast.md))]
endmodule


module STDERROR-CONTRACT [digest(�M(WND�ױځ�����IHk�Ga�{�O���C), org.kframework.attributes.Location(Location(216,1,308,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k))]
  imports FOUNDRY
  syntax StdErrorMethod ::= "zeroVarError" "(" ")" [klabel(method_stdError_zeroVarError_), symbol]
  syntax StdErrorMethod ::= "popError" "(" ")" [klabel(method_stdError_popError_), symbol]
  syntax StdErrorMethod ::= "memOverflowError" "(" ")" [klabel(method_stdError_memOverflowError_), symbol]
  syntax StdErrorMethod ::= "lowLevelError" "(" ")" [klabel(method_stdError_lowLevelError_), symbol]
  syntax StdErrorMethod ::= "indexOOBError" "(" ")" [klabel(method_stdError_indexOOBError_), symbol]
  syntax StdErrorMethod ::= "enumConversionError" "(" ")" [klabel(method_stdError_enumConversionError_), symbol]
  syntax StdErrorMethod ::= "encodeStorageError" "(" ")" [klabel(method_stdError_encodeStorageError_), symbol]
  syntax StdErrorMethod ::= "divisionError" "(" ")" [klabel(method_stdError_divisionError_), symbol]
  syntax StdErrorMethod ::= "assertionError" "(" ")" [klabel(method_stdError_assertionError_), symbol]
  syntax StdErrorMethod ::= "arithmeticError" "(" ")" [klabel(method_stdError_arithmeticError_), symbol]
  syntax StdErrorContract ::= "stdError" [klabel(contract_stdError), symbol]
  syntax Contract ::= StdErrorContract
  syntax Bytes ::= StdErrorContract "." StdErrorMethod [function, klabel(method_stdError), symbol]
  rule binRuntime(`contract_stdError`(.KList))=>`#parseByteStack(_)_SERIALIZATION_Bytes_String`(#token("\"0x73000000000000000000000000000000000000000030146080604052600436106100a85760003560e01c8063ac3d92c611610070578063ac3d92c6146100eb578063b22dc54d14610101578063b67689da14610109578063d160e4de14610111578063fa784a441461011957600080fd5b806305ee8612146100ad57806310332977146100cb5780631de45560146100d35780638995290f146100db578063986c5f68146100e3575b600080fd5b6100b5610121565b6040516100c291906101ec565b60405180910390f35b6100b561015c565b6100b561016e565b6100b5610180565b6100b5610192565b6100b56040518060200160405280600081525081565b6100b56101a4565b6100b56101b6565b6100b56101c8565b6100b56101da565b604051603260248201526044015b60408051601f198184030181529190526020810180516001600160e01b0316634e487b7160e01b17905281565b6040516001602482015260440161012f565b6040516021602482015260440161012f565b6040516011602482015260440161012f565b6040516041602482015260440161012f565b6040516031602482015260440161012f565b6040516051602482015260440161012f565b6040516022602482015260440161012f565b6040516012602482015260440161012f565b600060208083528351808285015260005b81811015610219578581018301518582016040015282016101fd565b8181111561022b576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220123df24b7f624e3eaa058d8ec30bc8fbc59f6b13d03026623d0f5787ad3dcb8264736f6c634300080d0033\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(223,11,223,1329)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_stdError`(`contract_stdError`(.KList),`method_stdError_zeroVarError_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"zeroVarError\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(275,11,275,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_stdError`(`contract_stdError`(.KList),`method_stdError_popError_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"popError\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(272,11,272,82)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_stdError`(`contract_stdError`(.KList),`method_stdError_memOverflowError_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"memOverflowError\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(269,11,269,98)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_stdError`(`contract_stdError`(.KList),`method_stdError_lowLevelError_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"lowLevelError\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(266,11,266,92)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_stdError`(`contract_stdError`(.KList),`method_stdError_indexOOBError_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"indexOOBError\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(263,11,263,92)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_stdError`(`contract_stdError`(.KList),`method_stdError_enumConversionError_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"enumConversionError\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(260,11,260,104)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_stdError`(`contract_stdError`(.KList),`method_stdError_encodeStorageError_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"encodeStorageError\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(257,11,257,102)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_stdError`(`contract_stdError`(.KList),`method_stdError_divisionError_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"divisionError\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(254,11,254,92)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_stdError`(`contract_stdError`(.KList),`method_stdError_assertionError_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"assertionError\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(251,11,251,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_stdError`(`contract_stdError`(.KList),`method_stdError_arithmeticError_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"arithmeticError\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(248,11,248,96)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"zeroVarError()\"","String"))=>#token("3061221850","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(305,11,305,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"popError()\"","String"))=>#token("2989344077","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(302,11,302,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"memOverflowError()\"","String"))=>#token("2557239144","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(299,11,299,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"lowLevelError()\"","String"))=>#token("2889716422","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(296,11,296,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"indexOOBError()\"","String"))=>#token("99517970","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(293,11,293,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"enumConversionError()\"","String"))=>#token("501503328","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(290,11,290,64)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"encodeStorageError()\"","String"))=>#token("3512788190","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(287,11,287,64)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"divisionError()\"","String"))=>#token("4202187332","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(284,11,284,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"assertionError()\"","String"))=>#token("271788407","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(281,11,281,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"arithmeticError()\"","String"))=>#token("2308253967","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(278,11,278,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module STDERROR-VERIFICATION [digest(��1J�pV��3ԍ�So��9�Hb��bsc� �), org.kframework.attributes.Location(Location(40,1,45,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/foundry.k))]
  imports STDERROR-CONTRACT
endmodule


module STDIN-STREAM [digest(q���̷	����àp{�Z}�y=Bݩt�#�), org.kframework.attributes.Location(Location(2655,1,2737,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports MAP
  imports LIST
  imports K-REFLECTION
  imports K-IO
  imports INT
  imports BOOL
  syntax StdinCell ::= "initStdinCell" "(" Map ")" [function, initializer, noThread]
  syntax StdinCell ::= "<stdin>" List "</stdin>" [cell, cellName(stdin), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), topcell]
  rule initStdinCell(Init)=>`<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(`#buffer(_)_K-IO_Stream_K`(#SemanticCastToString(`project:String`(`Map:lookup`(Init,#token("$STDIN","KConfigVar")))))),`ListItem`(#SemanticCastToString(`project:String`(`Map:lookup`(Init,#token("$IO","KConfigVar")))))),`ListItem`(`#istream(_)_K-IO_Stream_Int`(`#stdin_K-IO_Int`(.KList)))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`ListItem`(`#parseInput(_,_)_K-IO_Stream_String_String`(#SemanticCastToString(_),#SemanticCastToString(Delimiters))),`ListItem`(`#buffer(_)_K-IO_Stream_K`(#SemanticCastToString(S)=>`_+String__STRING-COMMON_String_String_String`(#SemanticCastToString(S),`chrChar(_)_STRING-COMMON_String_Int`(`project:Int`(`#getc(_)_K-IO_IOInt_Int`(#SemanticCastToInt(N)))))))),`ListItem`(#token("\"on\"","String"))),`ListItem`(`#istream(_)_K-IO_Stream_Int`(#SemanticCastToInt(N)))),#noDots(.KList)) requires `_==Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [label(STDIN-STREAM.stdinGetc), org.kframework.attributes.Location(Location(2666,8,2672,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(200), stream]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(`#parseInput(_,_)_K-IO_Stream_String_String`(#token("\"String\"","String"),#SemanticCastToString(Delimiters)))=>`ListItem`(#SemanticCastToString(S)),`ListItem`(`#buffer(_)_K-IO_Stream_K`(#SemanticCastToString(S)=>#token("\"\"","String")))),#SemanticCastToList(_)),#noDots(.KList)) requires `_=/=Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [label(STDIN-STREAM.stdinParseString), org.kframework.attributes.Location(Location(2677,8,2682,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), stream]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(`#parseInput(_,_)_K-IO_Stream_String_String`(#token("\"Int\"","String"),#SemanticCastToString(Delimiters)))=>`ListItem`(`String2Int(_)_STRING-COMMON_Int_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(S),#token("0","Int"),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int"))))),`ListItem`(`#buffer(_)_K-IO_Stream_K`(#SemanticCastToString(S)=>`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(S),`_+Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("1","Int")),`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S)))))),#SemanticCastToList(_)),#noDots(.KList)) requires `_andBool_`(`_=/=Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")),`_>Int_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S)),#token("1","Int"))) ensures #token("true","Bool") [label(STDIN-STREAM.stdinParseInt), org.kframework.attributes.Location(Location(2687,8,2694,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), stream]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(`#parseInput(_,_)_K-IO_Stream_String_String`(#SemanticCastToString(Sort),#SemanticCastToString(Delimiters))),`ListItem`(`#buffer(_)_K-IO_Stream_K`(#SemanticCastToString(S)=>`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(S),#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S)))))),#SemanticCastToList(_)),#noDots(.KList)) requires `_andBool_`(`_andBool_`(`_=/=Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")),`_=/=String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(Sort),#token("\"String\"","String"))),`_<=Int_`(`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S)),#token("1","Int"))) ensures #token("true","Bool") [label(STDIN-STREAM.stdinTrim), org.kframework.attributes.Location(Location(2698,8,2705,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), stream]
  rule `<stdin>`(#noDots(.KList),`_List_`(`.List`(.KList)=>`ListItem`(`#parseInput(_,_)_K-IO_Stream_String_String`(#SemanticCastToString(?Sort),#SemanticCastToString(?Delimiters))),`ListItem`(`#buffer(_)_K-IO_Stream_K`(#SemanticCastToString(_)))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [label(STDIN-STREAM.stdinUnblock), org.kframework.attributes.Location(Location(2723,8,2727,16)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), unblock]
endmodule


module STDMATH-CONTRACT [digest(
�ⴅ\|��(����N7��rb>7A�߮Ӂ;), org.kframework.attributes.Location(Location(310,1,320,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k))]
  imports FOUNDRY
  syntax StdMathContract ::= "stdMath" [klabel(contract_stdMath), symbol]
  syntax Contract ::= StdMathContract
  rule binRuntime(`contract_stdMath`(.KList))=>`#parseByteStack(_)_SERIALIZATION_Bytes_String`(#token("\"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ada2f27f44e724024917b604c512c1c20578588095600bf29d6557240faa52aa64736f6c634300080d0033\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(317,11,317,238)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module STDMATH-VERIFICATION [digest('�B�.Q��T���y/��3%K,���p�), org.kframework.attributes.Location(Location(47,1,52,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/foundry.k))]
  imports STDMATH-CONTRACT
endmodule


module STDOUT-STREAM [digest(_Tl�I��+�:���U`�u�Gw�qSڈ�t�), org.kframework.attributes.Location(Location(2739,1,2807,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports STRING
  imports MAP
  imports LIST
  imports K-IO
  syntax StdoutCell ::= "initStdoutCell" "(" Map ")" [function, initializer, noThread]
  syntax StdoutCell ::= "<stdout>" List "</stdout>" [cell, cellName(stdout), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), topcell]
  rule initStdoutCell(Init)=>`<stdout>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(`#ostream(_)_K-IO_Stream_Int`(`#stdout_K-IO_Int`(.KList))),`ListItem`(#SemanticCastToString(`project:String`(`Map:lookup`(Init,#token("$IO","KConfigVar")))))),`ListItem`(`#buffer(_)_K-IO_Stream_K`(#token("\"\"","String")))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(`#ostream(_)_K-IO_Stream_Int`(#SemanticCastToInt(_))),`ListItem`(#SemanticCastToKItem(_))),`ListItem`(`#buffer(_)_K-IO_Stream_K`(#SemanticCastToString(Buffer)=>`_+String__STRING-COMMON_String_String_String`(#SemanticCastToString(Buffer),`Int2String(_)_STRING-COMMON_String_Int`(#SemanticCastToInt(I)))))),`ListItem`(#SemanticCastToInt(I))=>`.List`(.KList)),#SemanticCastToList(_)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [label(STDOUT-STREAM.stdoutBufferInt), org.kframework.attributes.Location(Location(2758,8,2764,17)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), stream]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(`#ostream(_)_K-IO_Stream_Int`(#SemanticCastToInt(_))),`ListItem`(#SemanticCastToKItem(_))),`ListItem`(`#buffer(_)_K-IO_Stream_K`(#SemanticCastToString(Buffer)=>`_+String__STRING-COMMON_String_String_String`(#SemanticCastToString(Buffer),`Float2String(_)_STRING-COMMON_String_Float`(#SemanticCastToFloat(F)))))),`ListItem`(#SemanticCastToFloat(F))=>`.List`(.KList)),#SemanticCastToList(_)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [label(STDOUT-STREAM.stdoutBufferFloat), org.kframework.attributes.Location(Location(2748,8,2754,17)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), stream]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(`#ostream(_)_K-IO_Stream_Int`(#SemanticCastToInt(_))),`ListItem`(#SemanticCastToKItem(_))),`ListItem`(`#buffer(_)_K-IO_Stream_K`(#SemanticCastToString(Buffer)=>`_+String__STRING-COMMON_String_String_String`(#SemanticCastToString(Buffer),#SemanticCastToString(S))))),`ListItem`(#SemanticCastToString(S))=>`.List`(.KList)),#SemanticCastToList(_)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [label(STDOUT-STREAM.stdoutBufferString), org.kframework.attributes.Location(Location(2768,8,2774,17)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), stream]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`ListItem`(`#ostream(_)_K-IO_Stream_Int`(#SemanticCastToInt(N)=>`project:Int`(`#write(_,_)_K-IO_K_Int_String`(#SemanticCastToInt(N),#SemanticCastToString(S))~>#SemanticCastToInt(N)))),`ListItem`(#token("\"on\"","String"))),`ListItem`(`#buffer(_)_K-IO_Stream_K`(#SemanticCastToString(S)=>#token("\"\"","String")))),#SemanticCastToList(_)),#noDots(.KList)) requires `_=/=String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(S),#token("\"\"","String")) ensures #token("true","Bool") [label(STDOUT-STREAM.stdoutWrite), org.kframework.attributes.Location(Location(2780,8,2786,28)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(30), stream]
endmodule


module STDSTORAGE-CONTRACT [digest(�ǂ�#}�:��Ȯ1x��_����Q�t嶿�), org.kframework.attributes.Location(Location(322,1,345,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k))]
  imports FOUNDRY
  syntax StdStorageMethod ::= "bytesToBytes32" "(" Bytes ":" "bytes" "," Int ":" "uint256" ")" [klabel(method_stdStorage_bytesToBytes32_bytes_uint256), symbol]
  syntax StdStorageContract ::= "stdStorage" [klabel(contract_stdStorage), symbol]
  syntax Contract ::= StdStorageContract
  syntax Bytes ::= StdStorageContract "." StdStorageMethod [function, klabel(method_stdStorage), symbol]
  rule binRuntime(`contract_stdStorage`(.KList))=>`#parseByteStack(_)_SERIALIZATION_Bytes_String`(#token("\"0x73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063535849391461003a575b600080fd5b61004d6100483660046100f2565b61005f565b60405190815260200160405180910390f35b60008060006020855111610074578451610077565b60205b905060005b818110156100d25761008f8160086101bd565b8661009a83886101dc565b815181106100aa576100aa6101f4565b01602001516001600160f81b031916901c9290921791806100ca8161020a565b91505061007c565b5090949350505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561010557600080fd5b823567ffffffffffffffff8082111561011d57600080fd5b818501915085601f83011261013157600080fd5b813581811115610143576101436100dc565b604051601f8201601f19908116603f0116810190838211818310171561016b5761016b6100dc565b8160405282815288602084870101111561018457600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156101d7576101d76101a7565b500290565b600082198211156101ef576101ef6101a7565b500190565b634e487b7160e01b600052603260045260246000fd5b60006001820161021c5761021c6101a7565b506001019056fea2646970667358221220c2c037d3f1567d69c4ec6d7bde1962f8553acec82c19078ccce7d877a7c99ff864736f6c634300080d0033\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(329,11,329,1271)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_stdStorage`(`contract_stdStorage`(.KList),`method_stdStorage_bytesToBytes32_bytes_uint256`(#SemanticCastToBytes(V0_b),#SemanticCastToInt(V1_offset)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"bytesToBytes32\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes`(#SemanticCastToBytes(V0_b)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V1_offset)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures `_andBool_`(`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("128","Int"),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(V0_b))),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V1_offset))) [org.kframework.attributes.Location(Location(336,11,339,18)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `abi_selector`(#token("\"bytesToBytes32(bytes,uint256)\"","String"))=>#token("1398294841","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(342,11,342,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module STDSTORAGE-VERIFICATION [digest(%Ź���ڲ�ru{���ڱ��m;�L�R��n
), org.kframework.attributes.Location(Location(54,1,59,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/foundry.k))]
  imports STDSTORAGE-CONTRACT
endmodule


module STRING [digest(P��J �1��8�p�)���̧�~�^Z�4���), org.kframework.attributes.Location(Location(1903,1,1906,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports STRING-KORE
  imports STRING-COMMON
endmodule


module STRING-BUFFER [digest(x+�+D�\f����Œ���E[�����A�), org.kframework.attributes.Location(Location(1952,1,1955,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports STRING-BUFFER-IN-K
endmodule


module STRING-BUFFER-IN-K [digest(�5��F�;:�Y�Ǥ��?gS[PE��Zu��	), org.kframework.attributes.Location(Location(1928,1,1940,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), symbolic]
  imports STRING
  imports BASIC-K
  syntax StringBuffer ::= StringBuffer "+String" String [avoid, function, total]
  syntax StringBuffer ::= String
  syntax StringBuffer ::= ".StringBuffer" [function, total]
  syntax String ::= "StringBuffer2String" "(" StringBuffer ")" [function, klabel(StringBuffer2String), total]
  rule `_+String__STRING-BUFFER-IN-K_StringBuffer_StringBuffer_String`(#SemanticCastToString(SB),#SemanticCastToString(S))=>`_+String__STRING-COMMON_String_String_String`(#SemanticCastToString(SB),#SemanticCastToString(S)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1937,8,1937,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `StringBuffer2String(_)_STRING-BUFFER-IN-K_String_StringBuffer`(#SemanticCastToString(S))=>#SemanticCastToString(S) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1939,8,1939,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `.StringBuffer_STRING-BUFFER-IN-K_StringBuffer`(.KList)=>#token("\"\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1938,8,1938,27)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module STRING-COMMON [digest(��v�F6��n��(Je鵙�q���⋼S6p�lv�), org.kframework.attributes.Location(Location(1689,1,1893,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  imports STRING-SYNTAX
  imports K-EQUAL
  imports INT
  imports FLOAT-SYNTAX
  imports BOOL
  syntax associativity left _+String__STRING-COMMON_String_String_String
  syntax String ::= String "+String" String [function, hook(STRING.concat), latex({#1}+_{\scriptstyle\it String}{#2}), left, total]
  syntax String ::= "substrString" "(" String "," startIndex:Int "," endIndex:Int ")" [function, hook(STRING.substr), klabel(substrString), total]
  syntax String ::= "replaceFirst" "(" haystack:String "," needle:String "," replacement:String ")" [function, hook(STRING.replaceFirst), total]
  syntax String ::= "replaceAll" "(" haystack:String "," needle:String "," replacement:String ")" [function, hook(STRING.replaceAll), total]
  syntax String ::= "replace" "(" haystack:String "," needle:String "," replacement:String "," times:Int ")" [function, hook(STRING.replace)]
  syntax String ::= "newUUID" [function, hook(STRING.uuid), impure]
  syntax String ::= "directionalityChar" "(" String ")" [function, hook(STRING.directionality), klabel(directionalityChar)]
  syntax String ::= "chrChar" "(" Int ")" [function, hook(STRING.chr), klabel(chrChar)]
  syntax String ::= "categoryChar" "(" String ")" [function, hook(STRING.category), klabel(categoryChar)]
  syntax String ::= "Int2String" "(" Int ")" [function, hook(STRING.int2string), klabel(Int2String), total]
  syntax String ::= "Float2String" "(" Float "," format:String ")" [function, hook(STRING.floatFormat), klabel(FloatFormat)]
  syntax String ::= "Float2String" "(" Float ")" [function, hook(STRING.float2string), klabel(Float2String), total]
  syntax String ::= "Bool2String" "(" Bool ")" [function, klabel(Bool2String), total]
  syntax String ::= "Base2String" "(" Int "," base:Int ")" [function, hook(STRING.base2string), klabel(Base2String)]
  syntax Int ::= "rfindString" "(" haystack:String "," needle:String "," index:Int ")" [function, hook(STRING.rfind), klabel(rfindString)]
  syntax Int ::= "rfindChar" "(" haystack:String "," needles:String "," index:Int ")" [function, hook(STRING.rfindChar), klabel(rfindChar)]
  syntax Int ::= "ordChar" "(" String ")" [function, hook(STRING.ord), klabel(ordChar)]
  syntax Int ::= "lengthString" "(" String ")" [function, hook(STRING.length), klabel(lengthString), total]
  syntax Int ::= "findString" "(" haystack:String "," needle:String "," index:Int ")" [function, hook(STRING.find), klabel(findString)]
  syntax Int ::= "findChar" "(" haystack:String "," needles:String "," index:Int ")" [function, hook(STRING.findChar), klabel(findChar)]
  syntax Int ::= "countAllOccurrences" "(" haystack:String "," needle:String ")" [function, hook(STRING.countAllOccurrences), total]
  syntax Int ::= "String2Int" "(" String ")" [function, hook(STRING.string2int), klabel(String2Int)]
  syntax Int ::= "String2Base" "(" String "," base:Int ")" [function, hook(STRING.string2base), klabel(String2Base)]
  syntax Float ::= "String2Float" "(" String ")" [function, hook(STRING.string2float), klabel(String2Float)]
  syntax Bool ::= String ">String" String [function, hook(STRING.gt), total]
  syntax Bool ::= String ">=String" String [function, hook(STRING.ge), total]
  syntax Bool ::= String "==String" String [comm, function, hook(STRING.eq), total]
  syntax Bool ::= String "=/=String" String [comm, function, hook(STRING.ne), total]
  syntax Bool ::= String "<String" String [function, hook(STRING.lt), total]
  syntax Bool ::= String "<=String" String [function, hook(STRING.le), total]
  syntax Bool ::= "String2Bool" "(" String ")" [function, klabel(String2Bool)]
  rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(_),#token("\"\"","String"),#SemanticCastToInt(_))=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1872,8,1872,33)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S1),#SemanticCastToString(S2),#SemanticCastToInt(I))=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`rfindString(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S1),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),`rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S1),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(S2),#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S2))),#SemanticCastToInt(I))) requires `_=/=String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(S2),#token("\"\"","String")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1871,8,1871,182)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(_))=>#SemanticCastToString(Source) requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1882,8,1883,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement))=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(Source),#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int"))),#SemanticCastToString(Replacement)),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(Source),`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(ToReplace))),`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(Source)))) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1879,8,1881,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `replaceAll(_,_,_)_STRING-COMMON_String_String_String_String`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement))=>`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement),`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1891,8,1891,154)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(#SemanticCastToString(Source),#SemanticCastToString(_),#SemanticCastToString(_),#token("0","Int"))=>#SemanticCastToString(Source) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1890,8,1890,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement),#SemanticCastToInt(Count))=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(Source),#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int"))),#SemanticCastToString(Replacement)),`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(Source),`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(ToReplace))),`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(Source))),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement),`_-Int_`(#SemanticCastToInt(Count),#token("1","Int")))) requires `_>Int_`(#SemanticCastToInt(Count),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1886,8,1889,30)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(_),#token("\"\"","String"),#SemanticCastToInt(_))=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1870,8,1870,32)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S1),#SemanticCastToString(S2),#SemanticCastToInt(I))=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_==Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S1),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),#token("-1","Int")),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S1),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(S2),#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S2))),#SemanticCastToInt(I)),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`(`_==Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S1),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(S2),#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S2))),#SemanticCastToInt(I)),#token("-1","Int")),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S1),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S1),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(S1),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(S2),#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(S2))),#SemanticCastToInt(I))))) requires `_=/=String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(S2),#token("\"\"","String")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1869,8,1869,431)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(#SemanticCastToString(Source),#SemanticCastToString(ToCount))=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(#SemanticCastToString(Source),`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(Source),#SemanticCastToString(ToCount),#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(ToCount))),`lengthString(_)_STRING-COMMON_Int_String`(#SemanticCastToString(Source))),#SemanticCastToString(ToCount))) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(Source),#SemanticCastToString(ToCount),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1876,8,1877,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(#SemanticCastToString(Source),#SemanticCastToString(ToCount))=>#token("0","Int") requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(#SemanticCastToString(Source),#SemanticCastToString(ToCount),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1874,8,1875,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  rule `_>String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`_<String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(S2),#SemanticCastToString(S1)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1866,8,1866,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_>=String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(S1),#SemanticCastToString(S2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1867,8,1867,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_=/=String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`notBool_`(`_==String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(S1),#SemanticCastToString(S2))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1845,8,1845,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<=String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(S2),#SemanticCastToString(S1))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1865,8,1865,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"true\"","String"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1771,8,1771,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"false\"","String"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1772,8,1772,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("true","Bool"))=>#token("\"true\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1765,8,1765,36)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("false","Bool"))=>#token("\"false\"","String") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1766,8,1766,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module STRING-KORE [digest(fap�
7dK��(i���yI�r'9�^��,), kore, org.kframework.attributes.Location(Location(1895,1,1901,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), symbolic]
  imports STRING-COMMON
  imports K-EQUAL
  rule `_==K_`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`_==String__STRING-COMMON_Bool_String_String`(#SemanticCastToString(S1),#SemanticCastToString(S2)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1899,8,1899,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
endmodule


module STRING-SYNTAX [digest(��/��zMʑ�+�~Ӟ����XY�ڏ��L), org.kframework.attributes.Location(Location(1684,1,1687,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  syntax String [hook(STRING.String), org.kframework.attributes.Location(Location(1685,3,1685,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  syntax String ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token]
endmodule


module TEST-CONTRACT [digest(6_�4?��CBux	T�!s`~
�̪��OM��h]), org.kframework.attributes.Location(Location(148,1,214,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k))]
  imports FOUNDRY
  syntax TestMethod ::= "vm" "(" ")" [klabel(method_Test_vm_), symbol]
  syntax TestMethod ::= "failed" "(" ")" [klabel(method_Test_failed_), symbol]
  syntax TestMethod ::= "IS_TEST" "(" ")" [klabel(method_Test_IS_TEST_), symbol]
  syntax TestMethod ::= "IS_SCRIPT" "(" ")" [klabel(method_Test_IS_SCRIPT_), symbol]
  syntax TestField ::= "stdstore" [klabel(field_Test_stdstore), symbol]
  syntax TestField ::= "_failed" [klabel(field_Test__failed), symbol]
  syntax TestField ::= "IS_TEST" [klabel(field_Test_IS_TEST), symbol]
  syntax TestField ::= "IS_SCRIPT" [klabel(field_Test_IS_SCRIPT), symbol]
  syntax TestContract ::= "Test" [klabel(contract_Test), symbol]
  syntax Field ::= TestField
  syntax Contract ::= TestContract
  syntax Bytes ::= TestContract "." TestMethod [function, klabel(method_Test), symbol]
  rule binRuntime(`contract_Test`(.KList))=>`#parseByteStack(_)_SERIALIZATION_Bytes_String`(#token("\"0x\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(155,11,155,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Test`(`contract_Test`(.KList),`method_Test_vm_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"vm\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(199,11,199,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Test`(`contract_Test`(.KList),`method_Test_failed_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"failed\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(196,11,196,74)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Test`(`contract_Test`(.KList),`method_Test_IS_TEST_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"IS_TEST\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(193,11,193,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Test`(`contract_Test`(.KList),`method_Test_IS_SCRIPT_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"IS_SCRIPT\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(190,11,190,80)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `contract_access_loc`(`contract_access_field`(`contract_Test`(.KList),`field_Test_stdstore`(.KList)))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(177,11,177,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `contract_access_loc`(`contract_access_field`(`contract_Test`(.KList),`field_Test__failed`(.KList)))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(171,11,171,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `contract_access_loc`(`contract_access_field`(`contract_Test`(.KList),`field_Test_IS_TEST`(.KList)))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(168,11,168,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `contract_access_loc`(`contract_access_field`(`contract_Test`(.KList),`field_Test_IS_SCRIPT`(.KList)))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(174,11,174,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"vm()\"","String"))=>#token("980845667","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(211,11,211,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"failed()\"","String"))=>#token("3124842406","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(208,11,208,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"IS_TEST()\"","String"))=>#token("4202047188","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(205,11,205,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"IS_SCRIPT()\"","String"))=>#token("4174167879","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(202,11,202,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module TEST-VERIFICATION [digest(3d��W��k�4����[/,���HΝ>�n5J�), org.kframework.attributes.Location(Location(33,1,38,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/foundry.k))]
  imports TEST-CONTRACT
endmodule


module UNSIGNED-INT-SYNTAX [digest(M�}A��ɼ!��s�A-��(eS�}��Aȋ9), org.kframework.attributes.Location(Location(1188,1,1191,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  syntax Int [hook(INT.Int), org.kframework.attributes.Location(Location(1189,3,1189,29)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/kframework/include/kframework/builtin/domains.md))]
  syntax Int ::= r"[0-9]+" [prec(2), prefer, token]
endmodule


module VM-CONTRACT [digest(Ƿ���� ,��ou.���Ov���%�	��|), org.kframework.attributes.Location(Location(347,1,1096,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k))]
  imports FOUNDRY
  syntax VmMethod ::= "writeLine" "(" String ":" "string" "," String ":" "string" ")" [klabel(method_Vm_writeLine_string_string), symbol]
  syntax VmMethod ::= "writeFile" "(" String ":" "string" "," String ":" "string" ")" [klabel(method_Vm_writeFile_string_string), symbol]
  syntax VmMethod ::= "warp" "(" Int ":" "uint256" ")" [klabel(method_Vm_warp_uint256), symbol]
  syntax VmMethod ::= "toString" "(" Int ":" "uint256" ")" [klabel(method_Vm_toString_uint256), symbol]
  syntax VmMethod ::= "toString" "(" Int ":" "int256" ")" [klabel(method_Vm_toString_int256), symbol]
  syntax VmMethod ::= "toString" "(" Int ":" "bytes32" ")" [klabel(method_Vm_toString_bytes32), symbol]
  syntax VmMethod ::= "toString" "(" Int ":" "bool" ")" [klabel(method_Vm_toString_bool), symbol]
  syntax VmMethod ::= "toString" "(" Int ":" "address" ")" [klabel(method_Vm_toString_address), symbol]
  syntax VmMethod ::= "toString" "(" Bytes ":" "bytes" ")" [klabel(method_Vm_toString_bytes), symbol]
  syntax VmMethod ::= "store" "(" Int ":" "address" "," Int ":" "bytes32" "," Int ":" "bytes32" ")" [klabel(method_Vm_store_address_bytes32_bytes32), symbol]
  syntax VmMethod ::= "stopPrank" "(" ")" [klabel(method_Vm_stopPrank_), symbol]
  syntax VmMethod ::= "stopBroadcast" "(" ")" [klabel(method_Vm_stopBroadcast_), symbol]
  syntax VmMethod ::= "startPrank" "(" Int ":" "address" "," Int ":" "address" ")" [klabel(method_Vm_startPrank_address_address), symbol]
  syntax VmMethod ::= "startPrank" "(" Int ":" "address" ")" [klabel(method_Vm_startPrank_address), symbol]
  syntax VmMethod ::= "startBroadcast" "(" Int ":" "address" ")" [klabel(method_Vm_startBroadcast_address), symbol]
  syntax VmMethod ::= "startBroadcast" "(" ")" [klabel(method_Vm_startBroadcast_), symbol]
  syntax VmMethod ::= "snapshot" "(" ")" [klabel(method_Vm_snapshot_), symbol]
  syntax VmMethod ::= "sign" "(" Int ":" "uint256" "," Int ":" "bytes32" ")" [klabel(method_Vm_sign_uint256_bytes32), symbol]
  syntax VmMethod ::= "setNonce" "(" Int ":" "address" "," Int ":" "uint64" ")" [klabel(method_Vm_setNonce_address_uint64), symbol]
  syntax VmMethod ::= "setEnv" "(" String ":" "string" "," String ":" "string" ")" [klabel(method_Vm_setEnv_string_string), symbol]
  syntax VmMethod ::= "selectFork" "(" Int ":" "uint256" ")" [klabel(method_Vm_selectFork_uint256), symbol]
  syntax VmMethod ::= "rpcUrls" "(" ")" [klabel(method_Vm_rpcUrls_), symbol]
  syntax VmMethod ::= "rpcUrl" "(" String ":" "string" ")" [klabel(method_Vm_rpcUrl_string), symbol]
  syntax VmMethod ::= "rollFork" "(" Int ":" "uint256" "," Int ":" "uint256" ")" [klabel(method_Vm_rollFork_uint256_uint256), symbol]
  syntax VmMethod ::= "rollFork" "(" Int ":" "uint256" ")" [klabel(method_Vm_rollFork_uint256), symbol]
  syntax VmMethod ::= "roll" "(" Int ":" "uint256" ")" [klabel(method_Vm_roll_uint256), symbol]
  syntax VmMethod ::= "revertTo" "(" Int ":" "uint256" ")" [klabel(method_Vm_revertTo_uint256), symbol]
  syntax VmMethod ::= "removeFile" "(" String ":" "string" ")" [klabel(method_Vm_removeFile_string), symbol]
  syntax VmMethod ::= "recordLogs" "(" ")" [klabel(method_Vm_recordLogs_), symbol]
  syntax VmMethod ::= "record" "(" ")" [klabel(method_Vm_record_), symbol]
  syntax VmMethod ::= "readLine" "(" String ":" "string" ")" [klabel(method_Vm_readLine_string), symbol]
  syntax VmMethod ::= "readFile" "(" String ":" "string" ")" [klabel(method_Vm_readFile_string), symbol]
  syntax VmMethod ::= "prank" "(" Int ":" "address" "," Int ":" "address" ")" [klabel(method_Vm_prank_address_address), symbol]
  syntax VmMethod ::= "prank" "(" Int ":" "address" ")" [klabel(method_Vm_prank_address), symbol]
  syntax VmMethod ::= "mockCall" "(" Int ":" "address" "," Int ":" "uint256" "," Bytes ":" "bytes" "," Bytes ":" "bytes" ")" [klabel(method_Vm_mockCall_address_uint256_bytes_bytes), symbol]
  syntax VmMethod ::= "mockCall" "(" Int ":" "address" "," Bytes ":" "bytes" "," Bytes ":" "bytes" ")" [klabel(method_Vm_mockCall_address_bytes_bytes), symbol]
  syntax VmMethod ::= "load" "(" Int ":" "address" "," Int ":" "bytes32" ")" [klabel(method_Vm_load_address_bytes32), symbol]
  syntax VmMethod ::= "label" "(" Int ":" "address" "," String ":" "string" ")" [klabel(method_Vm_label_address_string), symbol]
  syntax VmMethod ::= "getRecordedLogs" "(" ")" [klabel(method_Vm_getRecordedLogs_), symbol]
  syntax VmMethod ::= "getNonce" "(" Int ":" "address" ")" [klabel(method_Vm_getNonce_address), symbol]
  syntax VmMethod ::= "getCode" "(" String ":" "string" ")" [klabel(method_Vm_getCode_string), symbol]
  syntax VmMethod ::= "ffi" "(" K ":" "string[]" ")" [klabel(method_Vm_ffi_string[]), symbol]
  syntax VmMethod ::= "fee" "(" Int ":" "uint256" ")" [klabel(method_Vm_fee_uint256), symbol]
  syntax VmMethod ::= "expectRevert" "(" Int ":" "bytes4" ")" [klabel(method_Vm_expectRevert_bytes4), symbol]
  syntax VmMethod ::= "expectRevert" "(" Bytes ":" "bytes" ")" [klabel(method_Vm_expectRevert_bytes), symbol]
  syntax VmMethod ::= "expectRevert" "(" ")" [klabel(method_Vm_expectRevert_), symbol]
  syntax VmMethod ::= "expectEmit" "(" Int ":" "bool" "," Int ":" "bool" "," Int ":" "bool" "," Int ":" "bool" "," Int ":" "address" ")" [klabel(method_Vm_expectEmit_bool_bool_bool_bool_address), symbol]
  syntax VmMethod ::= "expectEmit" "(" Int ":" "bool" "," Int ":" "bool" "," Int ":" "bool" "," Int ":" "bool" ")" [klabel(method_Vm_expectEmit_bool_bool_bool_bool), symbol]
  syntax VmMethod ::= "expectCall" "(" Int ":" "address" "," Int ":" "uint256" "," Bytes ":" "bytes" ")" [klabel(method_Vm_expectCall_address_uint256_bytes), symbol]
  syntax VmMethod ::= "expectCall" "(" Int ":" "address" "," Bytes ":" "bytes" ")" [klabel(method_Vm_expectCall_address_bytes), symbol]
  syntax VmMethod ::= "etch" "(" Int ":" "address" "," Bytes ":" "bytes" ")" [klabel(method_Vm_etch_address_bytes), symbol]
  syntax VmMethod ::= "envUint" "(" String ":" "string" "," String ":" "string" ")" [klabel(method_Vm_envUint_string_string), symbol]
  syntax VmMethod ::= "envUint" "(" String ":" "string" ")" [klabel(method_Vm_envUint_string), symbol]
  syntax VmMethod ::= "envString" "(" String ":" "string" "," String ":" "string" ")" [klabel(method_Vm_envString_string_string), symbol]
  syntax VmMethod ::= "envString" "(" String ":" "string" ")" [klabel(method_Vm_envString_string), symbol]
  syntax VmMethod ::= "envInt" "(" String ":" "string" "," String ":" "string" ")" [klabel(method_Vm_envInt_string_string), symbol]
  syntax VmMethod ::= "envInt" "(" String ":" "string" ")" [klabel(method_Vm_envInt_string), symbol]
  syntax VmMethod ::= "envBytes32" "(" String ":" "string" "," String ":" "string" ")" [klabel(method_Vm_envBytes32_string_string), symbol]
  syntax VmMethod ::= "envBytes32" "(" String ":" "string" ")" [klabel(method_Vm_envBytes32_string), symbol]
  syntax VmMethod ::= "envBytes" "(" String ":" "string" "," String ":" "string" ")" [klabel(method_Vm_envBytes_string_string), symbol]
  syntax VmMethod ::= "envBytes" "(" String ":" "string" ")" [klabel(method_Vm_envBytes_string), symbol]
  syntax VmMethod ::= "envBool" "(" String ":" "string" "," String ":" "string" ")" [klabel(method_Vm_envBool_string_string), symbol]
  syntax VmMethod ::= "envBool" "(" String ":" "string" ")" [klabel(method_Vm_envBool_string), symbol]
  syntax VmMethod ::= "envAddress" "(" String ":" "string" "," String ":" "string" ")" [klabel(method_Vm_envAddress_string_string), symbol]
  syntax VmMethod ::= "envAddress" "(" String ":" "string" ")" [klabel(method_Vm_envAddress_string), symbol]
  syntax VmMethod ::= "deriveKey" "(" String ":" "string" "," String ":" "string" "," Int ":" "uint32" ")" [klabel(method_Vm_deriveKey_string_string_uint32), symbol]
  syntax VmMethod ::= "deriveKey" "(" String ":" "string" "," Int ":" "uint32" ")" [klabel(method_Vm_deriveKey_string_uint32), symbol]
  syntax VmMethod ::= "deal" "(" Int ":" "address" "," Int ":" "uint256" ")" [klabel(method_Vm_deal_address_uint256), symbol]
  syntax VmMethod ::= "createSelectFork" "(" String ":" "string" "," Int ":" "uint256" ")" [klabel(method_Vm_createSelectFork_string_uint256), symbol]
  syntax VmMethod ::= "createSelectFork" "(" String ":" "string" ")" [klabel(method_Vm_createSelectFork_string), symbol]
  syntax VmMethod ::= "createFork" "(" String ":" "string" "," Int ":" "uint256" ")" [klabel(method_Vm_createFork_string_uint256), symbol]
  syntax VmMethod ::= "createFork" "(" String ":" "string" ")" [klabel(method_Vm_createFork_string), symbol]
  syntax VmMethod ::= "coinbase" "(" Int ":" "address" ")" [klabel(method_Vm_coinbase_address), symbol]
  syntax VmMethod ::= "closeFile" "(" String ":" "string" ")" [klabel(method_Vm_closeFile_string), symbol]
  syntax VmMethod ::= "clearMockedCalls" "(" ")" [klabel(method_Vm_clearMockedCalls_), symbol]
  syntax VmMethod ::= "chainId" "(" Int ":" "uint256" ")" [klabel(method_Vm_chainId_uint256), symbol]
  syntax VmMethod ::= "broadcast" "(" Int ":" "address" ")" [klabel(method_Vm_broadcast_address), symbol]
  syntax VmMethod ::= "broadcast" "(" ")" [klabel(method_Vm_broadcast_), symbol]
  syntax VmMethod ::= "assume" "(" Int ":" "bool" ")" [klabel(method_Vm_assume_bool), symbol]
  syntax VmMethod ::= "addr" "(" Int ":" "uint256" ")" [klabel(method_Vm_addr_uint256), symbol]
  syntax VmMethod ::= "activeFork" "(" ")" [klabel(method_Vm_activeFork_), symbol]
  syntax VmMethod ::= "accesses" "(" Int ":" "address" ")" [klabel(method_Vm_accesses_address), symbol]
  syntax VmContract ::= "Vm" [klabel(contract_Vm), symbol]
  syntax Contract ::= VmContract
  syntax Bytes ::= VmContract "." VmMethod [function, klabel(method_Vm), symbol]
  rule binRuntime(`contract_Vm`(.KList))=>`#parseByteStack(_)_SERIALIZATION_Bytes_String`(#token("\"0x\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(354,11,354,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_writeLine_string_string`(#SemanticCastToString(V0_),#SemanticCastToString(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"writeLine\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(847,11,847,142)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_writeFile_string_string`(#SemanticCastToString(V0_),#SemanticCastToString(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"writeFile\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(844,11,844,142)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_warp_uint256`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"warp\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(840,11,841,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_toString_uint256`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"toString\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(836,11,837,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_toString_int256`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"toString\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_int256`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeSInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(832,11,833,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_toString_bytes`(#SemanticCastToBytes(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"toString\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes`(#SemanticCastToBytes(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("128","Int"),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(V0_))) [org.kframework.attributes.Location(Location(824,11,825,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_toString_bytes32`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"toString\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes32`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(828,11,829,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_toString_bool`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"toString\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bool`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(820,11,821,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_toString_address`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"toString\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(816,11,817,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_store_address_bytes32_bytes32`(#SemanticCastToInt(V0_),#SemanticCastToInt(V1_),#SemanticCastToInt(V2_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"store\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes32`(#SemanticCastToInt(V1_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes32`(#SemanticCastToInt(V2_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))))) requires #token("true","Bool") ensures `_andBool_`(`#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)),`_andBool_`(`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V1_)),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V2_)))) [org.kframework.attributes.Location(Location(809,11,813,19)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_stopPrank_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"stopPrank\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(806,11,806,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_stopBroadcast_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"stopBroadcast\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(803,11,803,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_startPrank_address`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"startPrank\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(793,11,794,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_startPrank_address_address`(#SemanticCastToInt(V0_),#SemanticCastToInt(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"startPrank\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures `_andBool_`(`#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)),`#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V1_))) [org.kframework.attributes.Location(Location(797,11,800,18)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_startBroadcast_address`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"startBroadcast\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(789,11,790,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_startBroadcast_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"startBroadcast\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(786,11,786,88)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_snapshot_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"snapshot\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(783,11,783,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_sign_uint256_bytes32`(#SemanticCastToInt(V0_),#SemanticCastToInt(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"sign\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes32`(#SemanticCastToInt(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures `_andBool_`(`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V0_)),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V1_))) [org.kframework.attributes.Location(Location(777,11,780,18)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_setNonce_address_uint64`(#SemanticCastToInt(V0_),#SemanticCastToInt(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"setNonce\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint64`(#SemanticCastToInt(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures `_andBool_`(`#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("64","Int"),#SemanticCastToInt(V1_))) [org.kframework.attributes.Location(Location(771,11,774,18)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_setEnv_string_string`(#SemanticCastToString(V0_),#SemanticCastToString(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"setEnv\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(768,11,768,136)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_selectFork_uint256`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"selectFork\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(764,11,765,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_rpcUrls_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"rpcUrls\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(761,11,761,74)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_rpcUrl_string`(#SemanticCastToString(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"rpcUrl\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(758,11,758,103)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_roll_uint256`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"roll\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(744,11,745,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_rollFork_uint256`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"rollFork\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(748,11,749,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_rollFork_uint256_uint256`(#SemanticCastToInt(V0_forkId),#SemanticCastToInt(V1_blockNumber)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"rollFork\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V0_forkId)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V1_blockNumber)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures `_andBool_`(`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V0_forkId)),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V1_blockNumber))) [org.kframework.attributes.Location(Location(752,11,755,18)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_revertTo_uint256`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"revertTo\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(740,11,741,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_removeFile_string`(#SemanticCastToString(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"removeFile\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(737,11,737,111)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_record_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"record\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(731,11,731,72)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_recordLogs_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"recordLogs\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(734,11,734,80)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_readLine_string`(#SemanticCastToString(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"readLine\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(728,11,728,107)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_readFile_string`(#SemanticCastToString(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"readFile\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(725,11,725,107)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_prank_address`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"prank\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(715,11,716,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_prank_address_address`(#SemanticCastToInt(V0_),#SemanticCastToInt(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"prank\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures `_andBool_`(`#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)),`#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V1_))) [org.kframework.attributes.Location(Location(719,11,722,18)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_mockCall_address_uint256_bytes_bytes`(#SemanticCastToInt(V0_),#SemanticCastToInt(V1_),#SemanticCastToBytes(V2_),#SemanticCastToBytes(V3_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"mockCall\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V1_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes`(#SemanticCastToBytes(V2_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes`(#SemanticCastToBytes(V3_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))))) requires #token("true","Bool") ensures `_andBool_`(`#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)),`_andBool_`(`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V1_)),`_andBool_`(`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("128","Int"),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(V2_))),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("128","Int"),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(V3_)))))) [org.kframework.attributes.Location(Location(707,11,712,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_mockCall_address_bytes_bytes`(#SemanticCastToInt(V0_),#SemanticCastToBytes(V1_),#SemanticCastToBytes(V2_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"mockCall\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes`(#SemanticCastToBytes(V1_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes`(#SemanticCastToBytes(V2_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))))) requires #token("true","Bool") ensures `_andBool_`(`#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)),`_andBool_`(`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("128","Int"),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(V1_))),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("128","Int"),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(V2_))))) [org.kframework.attributes.Location(Location(700,11,704,19)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_load_address_bytes32`(#SemanticCastToInt(V0_),#SemanticCastToInt(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"load\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes32`(#SemanticCastToInt(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures `_andBool_`(`#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V1_))) [org.kframework.attributes.Location(Location(694,11,697,18)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_label_address_string`(#SemanticCastToInt(V0_),#SemanticCastToString(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"label\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures `#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(690,11,691,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_getRecordedLogs_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"getRecordedLogs\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(687,11,687,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_getNonce_address`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"getNonce\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(683,11,684,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_getCode_string`(#SemanticCastToString(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"getCode\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(680,11,680,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_fee_uint256`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"fee\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(676,11,677,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_expectRevert_bytes`(#SemanticCastToBytes(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"expectRevert\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes`(#SemanticCastToBytes(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("128","Int"),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(V0_))) [org.kframework.attributes.Location(Location(668,11,669,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_expectRevert_bytes4`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"expectRevert\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes4`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeBytes(_,_)_WORD_Bool_Int_Int`(#token("4","Int"),#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(672,11,673,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_expectRevert_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"expectRevert\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(665,11,665,84)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_expectEmit_bool_bool_bool_bool`(#SemanticCastToInt(V0_),#SemanticCastToInt(V1_),#SemanticCastToInt(V2_),#SemanticCastToInt(V3_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"expectEmit\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bool`(#SemanticCastToInt(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bool`(#SemanticCastToInt(V1_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bool`(#SemanticCastToInt(V2_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bool`(#SemanticCastToInt(V3_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))))) requires #token("true","Bool") ensures `_andBool_`(`#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)),`_andBool_`(`#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(V1_)),`_andBool_`(`#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(V2_)),`#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(V3_))))) [org.kframework.attributes.Location(Location(648,11,653,20)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_expectEmit_bool_bool_bool_bool_address`(#SemanticCastToInt(V0_),#SemanticCastToInt(V1_),#SemanticCastToInt(V2_),#SemanticCastToInt(V3_),#SemanticCastToInt(V4_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"expectEmit\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bool`(#SemanticCastToInt(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bool`(#SemanticCastToInt(V1_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bool`(#SemanticCastToInt(V2_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bool`(#SemanticCastToInt(V3_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V4_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))))))) requires #token("true","Bool") ensures `_andBool_`(`#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)),`_andBool_`(`#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(V1_)),`_andBool_`(`#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(V2_)),`_andBool_`(`#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(V3_)),`#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V4_)))))) [org.kframework.attributes.Location(Location(656,11,662,21)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_expectCall_address_uint256_bytes`(#SemanticCastToInt(V0_),#SemanticCastToInt(V1_),#SemanticCastToBytes(V2_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"expectCall\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V1_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes`(#SemanticCastToBytes(V2_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))))) requires #token("true","Bool") ensures `_andBool_`(`#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)),`_andBool_`(`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V1_)),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("128","Int"),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(V2_))))) [org.kframework.attributes.Location(Location(641,11,645,19)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_expectCall_address_bytes`(#SemanticCastToInt(V0_),#SemanticCastToBytes(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"expectCall\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes`(#SemanticCastToBytes(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures `_andBool_`(`#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("128","Int"),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(V1_)))) [org.kframework.attributes.Location(Location(635,11,638,18)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_etch_address_bytes`(#SemanticCastToInt(V0_),#SemanticCastToBytes(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"etch\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bytes`(#SemanticCastToBytes(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures `_andBool_`(`#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("128","Int"),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(#SemanticCastToBytes(V1_)))) [org.kframework.attributes.Location(Location(629,11,632,18)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_envUint_string`(#SemanticCastToString(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"envUint\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(623,11,623,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_envUint_string_string`(#SemanticCastToString(V0_),#SemanticCastToString(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"envUint\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(626,11,626,138)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_envString_string`(#SemanticCastToString(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"envString\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(617,11,617,109)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_envString_string_string`(#SemanticCastToString(V0_),#SemanticCastToString(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"envString\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(620,11,620,142)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_envInt_string`(#SemanticCastToString(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"envInt\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(611,11,611,103)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_envInt_string_string`(#SemanticCastToString(V0_),#SemanticCastToString(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"envInt\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(614,11,614,136)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_envBytes_string`(#SemanticCastToString(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"envBytes\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(599,11,599,107)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_envBytes_string_string`(#SemanticCastToString(V0_),#SemanticCastToString(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"envBytes\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(602,11,602,140)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_envBytes32_string`(#SemanticCastToString(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"envBytes32\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(605,11,605,111)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_envBytes32_string_string`(#SemanticCastToString(V0_),#SemanticCastToString(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"envBytes32\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(608,11,608,144)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_envBool_string`(#SemanticCastToString(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"envBool\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(593,11,593,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_envBool_string_string`(#SemanticCastToString(V0_),#SemanticCastToString(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"envBool\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(596,11,596,138)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_envAddress_string`(#SemanticCastToString(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"envAddress\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(587,11,587,111)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_envAddress_string_string`(#SemanticCastToString(V0_),#SemanticCastToString(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"envAddress\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(590,11,590,144)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_deriveKey_string_uint32`(#SemanticCastToString(V0_),#SemanticCastToInt(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"deriveKey\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint32`(#SemanticCastToInt(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("32","Int"),#SemanticCastToInt(V1_)) [org.kframework.attributes.Location(Location(583,11,584,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_deriveKey_string_string_uint32`(#SemanticCastToString(V0_),#SemanticCastToString(V1_),#SemanticCastToInt(V2_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"deriveKey\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V1_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint32`(#SemanticCastToInt(V2_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("32","Int"),#SemanticCastToInt(V2_)) [org.kframework.attributes.Location(Location(579,11,580,39)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_deal_address_uint256`(#SemanticCastToInt(V0_),#SemanticCastToInt(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"deal\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures `_andBool_`(`#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)),`#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V1_))) [org.kframework.attributes.Location(Location(573,11,576,18)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_createSelectFork_string`(#SemanticCastToString(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"createSelectFork\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(566,11,566,123)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_createSelectFork_string_uint256`(#SemanticCastToString(V0_),#SemanticCastToInt(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"createSelectFork\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V1_)) [org.kframework.attributes.Location(Location(569,11,570,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_createFork_string`(#SemanticCastToString(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"createFork\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(559,11,559,111)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_createFork_string_uint256`(#SemanticCastToString(V0_),#SemanticCastToInt(V1_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"createFork\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V1_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V1_)) [org.kframework.attributes.Location(Location(562,11,563,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_coinbase_address`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"coinbase\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(555,11,556,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_closeFile_string`(#SemanticCastToString(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"closeFile\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_string`(#SemanticCastToString(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(552,11,552,109)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_clearMockedCalls_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"clearMockedCalls\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(549,11,549,92)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_chainId_uint256`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"chainId\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(545,11,546,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_broadcast_address`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"broadcast\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(541,11,542,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_broadcast_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"broadcast\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(538,11,538,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_assume_bool`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"assume\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_bool`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(534,11,535,34)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_addr_uint256`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"addr\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_uint256`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(530,11,531,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_activeFork_`(.KList))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"activeFork\"","String"),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(527,11,527,80)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `method_Vm`(`contract_Vm`(.KList),`method_Vm_accesses_address`(#SemanticCastToInt(V0_)))=>`#abiCallData(_,_)_EVM-ABI_Bytes_String_TypedArgs`(#token("\"accesses\"","String"),`_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs`(`abi_type_address`(#SemanticCastToInt(V0_)),`.List{"_,__EVM-ABI_TypedArgs_TypedArg_TypedArgs"}_TypedArgs`(.KList))) requires #token("true","Bool") ensures `#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(V0_)) [org.kframework.attributes.Location(Location(523,11,524,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "ensures" Bool [klabel(#ruleEnsures), symbol])]
  rule `abi_selector`(#token("\"writeLine(string,string)\"","String"))=>#token("1637714303","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1093,11,1093,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"writeFile(string,string)\"","String"))=>#token("2306738839","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1090,11,1090,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"warp(uint256)\"","String"))=>#token("3856056066","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1087,11,1087,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"toString(uint256)\"","String"))=>#token("1761649582","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1084,11,1084,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"toString(int256)\"","String"))=>#token("2736964622","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1081,11,1081,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"toString(bytes32)\"","String"))=>#token("2971277800","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1078,11,1078,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"toString(bytes)\"","String"))=>#token("1907020045","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1075,11,1075,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"toString(bool)\"","String"))=>#token("1910302682","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1072,11,1072,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"toString(address)\"","String"))=>#token("1456103998","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1069,11,1069,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"store(address,bytes32,bytes32)\"","String"))=>#token("1892290747","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1066,11,1066,74)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"stopPrank()\"","String"))=>#token("2428830011","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1063,11,1063,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"stopBroadcast()\"","String"))=>#token("1995103542","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1060,11,1060,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"startPrank(address,address)\"","String"))=>#token("1169514616","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1057,11,1057,71)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"startPrank(address)\"","String"))=>#token("105151830","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1054,11,1054,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"startBroadcast(address)\"","String"))=>#token("2146183821","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1051,11,1051,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"startBroadcast()\"","String"))=>#token("2142579071","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1048,11,1048,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"snapshot()\"","String"))=>#token("2534502746","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1045,11,1045,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"sign(uint256,bytes32)\"","String"))=>#token("3812747940","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1042,11,1042,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"setNonce(address,uint64)\"","String"))=>#token("4175530839","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1039,11,1039,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"setEnv(string,string)\"","String"))=>#token("1029252078","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1036,11,1036,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"selectFork(uint256)\"","String"))=>#token("2663344167","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1033,11,1033,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"rpcUrls()\"","String"))=>#token("2824504344","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1030,11,1030,53)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"rpcUrl(string)\"","String"))=>#token("2539285737","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1027,11,1027,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"rollFork(uint256,uint256)\"","String"))=>#token("3612115876","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1024,11,1024,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"rollFork(uint256)\"","String"))=>#token("3652973473","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1021,11,1021,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"roll(uint256)\"","String"))=>#token("528174896","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1018,11,1018,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"revertTo(uint256)\"","String"))=>#token("1155002532","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1015,11,1015,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"removeFile(string)\"","String"))=>#token("4054835277","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1012,11,1012,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"recordLogs()\"","String"))=>#token("1101999954","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1009,11,1009,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"record()\"","String"))=>#token("644673801","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1006,11,1006,51)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"readLine(string)\"","String"))=>#token("1895126824","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1003,11,1003,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"readFile(string)\"","String"))=>#token("1626979089","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(1000,11,1000,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"prank(address,address)\"","String"))=>#token("1206193358","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(997,11,997,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"prank(address)\"","String"))=>#token("3395723175","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(994,11,994,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"mockCall(address,uint256,bytes,bytes)\"","String"))=>#token("2168494993","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(991,11,991,81)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"mockCall(address,bytes,bytes)\"","String"))=>#token("3110212580","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(988,11,988,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"load(address,bytes32)\"","String"))=>#token("1719639408","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(985,11,985,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"label(address,string)\"","String"))=>#token("3327641368","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(982,11,982,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"getRecordedLogs()\"","String"))=>#token("420828068","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(979,11,979,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"getNonce(address)\"","String"))=>#token("755185067","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(976,11,976,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"getCode(string)\"","String"))=>#token("2367473957","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(973,11,973,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"ffi(string[])\"","String"))=>#token("2299921511","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(970,11,970,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"fee(uint256)\"","String"))=>#token("968063664","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(967,11,967,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectRevert(bytes4)\"","String"))=>#token("3273568480","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(964,11,964,64)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectRevert(bytes)\"","String"))=>#token("4069379763","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(961,11,961,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectRevert()\"","String"))=>#token("4102309908","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(958,11,958,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectEmit(bool,bool,bool,bool,address)\"","String"))=>#token("2176505587","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(955,11,955,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectEmit(bool,bool,bool,bool)\"","String"))=>#token("1226622914","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(952,11,952,75)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectCall(address,uint256,bytes)\"","String"))=>#token("4077681571","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(949,11,949,77)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"expectCall(address,bytes)\"","String"))=>#token("3177903156","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(946,11,946,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"etch(address,bytes)\"","String"))=>#token("3033974658","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(943,11,943,63)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envUint(string,string)\"","String"))=>#token("4091461785","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(940,11,940,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envUint(string)\"","String"))=>#token("3247934751","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(937,11,937,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envString(string,string)\"","String"))=>#token("347089865","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(934,11,934,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envString(string)\"","String"))=>#token("4168600345","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(931,11,931,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envInt(string,string)\"","String"))=>#token("1108873552","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(928,11,928,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envInt(string)\"","String"))=>#token("2301234273","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(925,11,925,58)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envBytes32(string,string)\"","String"))=>#token("1525821889","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(922,11,922,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envBytes32(string)\"","String"))=>#token("2543095874","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(919,11,919,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envBytes(string,string)\"","String"))=>#token("3720504603","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(916,11,916,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envBytes(string)\"","String"))=>#token("1299951366","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(913,11,913,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envBool(string,string)\"","String"))=>#token("2863521455","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(910,11,910,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envBool(string)\"","String"))=>#token("2127686781","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(907,11,907,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envAddress(string,string)\"","String"))=>#token("2905717242","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(904,11,904,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"envAddress(string)\"","String"))=>#token("890066623","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(901,11,901,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"deriveKey(string,uint32)\"","String"))=>#token("1646872971","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(898,11,898,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"deriveKey(string,string,uint32)\"","String"))=>#token("1808477211","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(895,11,895,75)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"deal(address,uint256)\"","String"))=>#token("3364511341","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(892,11,892,65)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"createSelectFork(string,uint256)\"","String"))=>#token("1911440973","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(889,11,889,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"createSelectFork(string)\"","String"))=>#token("2556952628","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(886,11,886,68)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"createFork(string,uint256)\"","String"))=>#token("1805892139","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(883,11,883,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"createFork(string)\"","String"))=>#token("834286744","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(880,11,880,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"coinbase(address)\"","String"))=>#token("4282924116","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(877,11,877,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"closeFile(string)\"","String"))=>#token("1220748319","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(874,11,874,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"clearMockedCalls()\"","String"))=>#token("1071599125","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(871,11,871,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"chainId(uint256)\"","String"))=>#token("1078582738","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(868,11,868,60)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"broadcast(address)\"","String"))=>#token("3868601563","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(865,11,865,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"broadcast()\"","String"))=>#token("2949218368","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(862,11,862,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"assume(bool)\"","String"))=>#token("1281615202","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(859,11,859,56)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"addr(uint256)\"","String"))=>#token("4288775753","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(856,11,856,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"activeFork()\"","String"))=>#token("789593890","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(853,11,853,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `abi_selector`(#token("\"accesses(address)\"","String"))=>#token("1706857601","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(850,11,850,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/contracts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module VM-VERIFICATION [digest(V�g�4�VH5�y(5
�f��_8�{����Y!), org.kframework.attributes.Location(Location(61,1,66,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/kevm-pyk/src/tests/unit/test-data/foundry-list/out/kompiled/foundry.k))]
  imports VM-CONTRACT
endmodule


module WORD [digest(g5����#�}uxٚ憜�bP5��������), org.kframework.attributes.Location(Location(7,1,357,10)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md))]
  imports INT
  imports BYTES
  imports BOOL
  syntax Int ::= Int ">>Byte" Int [function]
  syntax Int ::= Int "<<Byte" Int [function]
  syntax Int ::= "pow96" [alias]
  syntax Int ::= "pow88" [alias]
  syntax Int ::= "pow80" [alias]
  syntax Int ::= "pow8" [macro]
  syntax Int ::= "pow72" [alias]
  syntax Int ::= "pow64" [alias]
  syntax Int ::= "pow56" [alias]
  syntax Int ::= "pow48" [alias]
  syntax Int ::= "pow40" [alias]
  syntax Int ::= "pow32" [alias]
  syntax Int ::= "pow256" [alias]
  syntax Int ::= "pow255" [alias]
  syntax Int ::= "pow248" [alias]
  syntax Int ::= "pow240" [alias]
  syntax Int ::= "pow24" [alias]
  syntax Int ::= "pow232" [alias]
  syntax Int ::= "pow224" [alias]
  syntax Int ::= "pow216" [alias]
  syntax Int ::= "pow208" [alias]
  syntax Int ::= "pow200" [alias]
  syntax Int ::= "pow192" [alias]
  syntax Int ::= "pow184" [alias]
  syntax Int ::= "pow176" [alias]
  syntax Int ::= "pow168" [alias]
  syntax Int ::= "pow160" [alias]
  syntax Int ::= "pow16" [alias]
  syntax Int ::= "pow152" [alias]
  syntax Int ::= "pow144" [alias]
  syntax Int ::= "pow136" [alias]
  syntax Int ::= "pow128" [alias]
  syntax Int ::= "pow120" [alias]
  syntax Int ::= "pow112" [alias]
  syntax Int ::= "pow104" [alias]
  syntax Int ::= "notMaxUInt96" [alias]
  syntax Int ::= "notMaxUInt5" [alias]
  syntax Int ::= "notMaxUInt224" [alias]
  syntax Int ::= "notMaxUInt208" [alias]
  syntax Int ::= "notMaxUInt192" [alias]
  syntax Int ::= "notMaxUInt160" [alias]
  syntax Int ::= "notMaxUInt128" [alias]
  syntax Int ::= "minUInt96" [macro]
  syntax Int ::= "minUInt88" [macro]
  syntax Int ::= "minUInt80" [macro]
  syntax Int ::= "minUInt8" [macro]
  syntax Int ::= "minUInt72" [macro]
  syntax Int ::= "minUInt64" [macro]
  syntax Int ::= "minUInt56" [macro]
  syntax Int ::= "minUInt48" [macro]
  syntax Int ::= "minUInt40" [macro]
  syntax Int ::= "minUInt32" [macro]
  syntax Int ::= "minUInt256" [macro]
  syntax Int ::= "minUInt248" [macro]
  syntax Int ::= "minUInt240" [macro]
  syntax Int ::= "minUInt24" [macro]
  syntax Int ::= "minUInt232" [macro]
  syntax Int ::= "minUInt224" [macro]
  syntax Int ::= "minUInt216" [macro]
  syntax Int ::= "minUInt208" [macro]
  syntax Int ::= "minUInt200" [macro]
  syntax Int ::= "minUInt192" [macro]
  syntax Int ::= "minUInt184" [macro]
  syntax Int ::= "minUInt176" [macro]
  syntax Int ::= "minUInt168" [macro]
  syntax Int ::= "minUInt160" [macro]
  syntax Int ::= "minUInt16" [macro]
  syntax Int ::= "minUInt152" [macro]
  syntax Int ::= "minUInt144" [macro]
  syntax Int ::= "minUInt136" [macro]
  syntax Int ::= "minUInt128" [macro]
  syntax Int ::= "minUInt120" [macro]
  syntax Int ::= "minUInt112" [macro]
  syntax Int ::= "minUInt104" [macro]
  syntax Int ::= "minUFixed128x10" [macro]
  syntax Int ::= "minSInt256" [alias]
  syntax Int ::= "minSInt128Word" [alias]
  syntax Int ::= "minSInt128" [alias]
  syntax Int ::= "minSFixed128x10" [alias]
  syntax Int ::= "maxUInt96" [alias]
  syntax Int ::= "maxUInt88" [alias]
  syntax Int ::= "maxUInt80" [alias]
  syntax Int ::= "maxUInt8" [alias]
  syntax Int ::= "maxUInt72" [alias]
  syntax Int ::= "maxUInt64" [alias]
  syntax Int ::= "maxUInt56" [alias]
  syntax Int ::= "maxUInt48" [alias]
  syntax Int ::= "maxUInt40" [alias]
  syntax Int ::= "maxUInt32" [alias]
  syntax Int ::= "maxUInt256" [alias]
  syntax Int ::= "maxUInt248" [alias]
  syntax Int ::= "maxUInt240" [alias]
  syntax Int ::= "maxUInt24" [alias]
  syntax Int ::= "maxUInt232" [alias]
  syntax Int ::= "maxUInt224" [alias]
  syntax Int ::= "maxUInt216" [alias]
  syntax Int ::= "maxUInt208" [alias]
  syntax Int ::= "maxUInt200" [alias]
  syntax Int ::= "maxUInt192" [alias]
  syntax Int ::= "maxUInt184" [alias]
  syntax Int ::= "maxUInt176" [alias]
  syntax Int ::= "maxUInt168" [alias]
  syntax Int ::= "maxUInt160" [alias]
  syntax Int ::= "maxUInt16" [alias]
  syntax Int ::= "maxUInt152" [alias]
  syntax Int ::= "maxUInt144" [alias]
  syntax Int ::= "maxUInt136" [alias]
  syntax Int ::= "maxUInt128" [alias]
  syntax Int ::= "maxUInt120" [alias]
  syntax Int ::= "maxUInt112" [alias]
  syntax Int ::= "maxUInt104" [alias]
  syntax Int ::= "maxUFixed128x10" [alias]
  syntax Int ::= "maxSInt256" [alias]
  syntax Int ::= "maxSInt128" [alias]
  syntax Int ::= "maxSFixed128x10" [alias]
  syntax Int ::= "maxBlockNum" [macro]
  syntax Int ::= "eth" [macro]
  syntax Int ::= "chop" "(" Int ")" [function, klabel(chop), smtlib(chop), total]
  syntax Bool ::= "#rangeUInt" "(" Int "," Int ")" [alias, klabel(#rangeUInt)]
  syntax Bool ::= "#rangeUFixed" "(" Int "," Int "," Int ")" [alias, klabel(#rangeUFixed)]
  syntax Bool ::= "#rangeSmall" "(" Int ")" [alias, klabel(#rangeSmall)]
  syntax Bool ::= "#rangeSInt" "(" Int "," Int ")" [alias, klabel(#rangeSInt)]
  syntax Bool ::= "#rangeSFixed" "(" Int "," Int "," Int ")" [alias, klabel(#rangeSFixed)]
  syntax Bool ::= "#rangeNonce" "(" Int ")" [alias, klabel(#rangeNonce)]
  syntax Bool ::= "#rangeBytes" "(" Int "," Int ")" [alias, klabel(#rangeBytes)]
  syntax Bool ::= "#rangeBool" "(" Int ")" [alias, klabel(#rangeBool)]
  syntax Bool ::= "#rangeBlockNum" "(" Int ")" [alias, klabel(#rangeBlockNum)]
  syntax Bool ::= "#rangeAddress" "(" Int ")" [alias, klabel(#rangeAddress)]
  syntax Bool ::= "#range" "(" Int "<=" Int "<=" Int ")" [macro]
  syntax Bool ::= "#range" "(" Int "<=" Int "<" Int ")" [macro]
  syntax Bool ::= "#range" "(" Int "<" Int "<=" Int ")" [macro]
  syntax Bool ::= "#range" "(" Int "<" Int "<" Int ")" [macro]
  rule `pow96_WORD_Int`(.KList)=>#token("79228162514264337593543950336","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(75,10,75,49)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow8_WORD_Int`(.KList)=>#token("256","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(86,10,86,23)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow88_WORD_Int`(.KList)=>#token("309485009821345068724781056","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(76,10,76,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow80_WORD_Int`(.KList)=>#token("1208925819614629174706176","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(77,10,77,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow72_WORD_Int`(.KList)=>#token("4722366482869645213696","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(78,10,78,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow64_WORD_Int`(.KList)=>#token("18446744073709551616","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(79,10,79,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow56_WORD_Int`(.KList)=>#token("72057594037927936","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(80,10,80,37)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow48_WORD_Int`(.KList)=>#token("281474976710656","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(81,10,81,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow40_WORD_Int`(.KList)=>#token("1099511627776","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(82,10,82,33)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow32_WORD_Int`(.KList)=>#token("4294967296","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(83,10,83,30)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow256_WORD_Int`(.KList)=>#token("115792089237316195423570985008687907853269984665640564039457584007913129639936","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(54,10,54,98)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow255_WORD_Int`(.KList)=>#token("57896044618658097711785492504343953926634992332820282019728792003956564819968","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(55,10,55,97)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow24_WORD_Int`(.KList)=>#token("16777216","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(84,10,84,28)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow248_WORD_Int`(.KList)=>#token("452312848583266388373324160190187140051835877600158453279131187530910662656","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(56,10,56,95)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow240_WORD_Int`(.KList)=>#token("1766847064778384329583297500742918515827483896875618958121606201292619776","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(57,10,57,93)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow232_WORD_Int`(.KList)=>#token("6901746346790563787434755862277025452451108972170386555162524223799296","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(58,10,58,90)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow224_WORD_Int`(.KList)=>#token("26959946667150639794667015087019630673637144422540572481103610249216","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(59,10,59,88)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow216_WORD_Int`(.KList)=>#token("105312291668557186697918027683670432318895095400549111254310977536","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(60,10,60,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow208_WORD_Int`(.KList)=>#token("411376139330301510538742295639337626245683966408394965837152256","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(61,10,61,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow200_WORD_Int`(.KList)=>#token("1606938044258990275541962092341162602522202993782792835301376","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(62,10,62,81)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow192_WORD_Int`(.KList)=>#token("6277101735386680763835789423207666416102355444464034512896","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(63,10,63,78)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow184_WORD_Int`(.KList)=>#token("24519928653854221733733552434404946937899825954937634816","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(64,10,64,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow176_WORD_Int`(.KList)=>#token("95780971304118053647396689196894323976171195136475136","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(65,10,65,73)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow16_WORD_Int`(.KList)=>#token("65536","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(85,10,85,25)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow168_WORD_Int`(.KList)=>#token("374144419156711147060143317175368453031918731001856","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(66,10,66,71)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow160_WORD_Int`(.KList)=>#token("1461501637330902918203684832716283019655932542976","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(67,10,67,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow152_WORD_Int`(.KList)=>#token("5708990770823839524233143877797980545530986496","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(68,10,68,66)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow144_WORD_Int`(.KList)=>#token("22300745198530623141535718272648361505980416","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(69,10,69,64)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow136_WORD_Int`(.KList)=>#token("87112285931760246646623899502532662132736","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(70,10,70,61)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow128_WORD_Int`(.KList)=>#token("340282366920938463463374607431768211456","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(71,10,71,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow120_WORD_Int`(.KList)=>#token("1329227995784915872903807060280344576","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(72,10,72,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow112_WORD_Int`(.KList)=>#token("5192296858534827628530496329220096","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(73,10,73,54)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `pow104_WORD_Int`(.KList)=>#token("20282409603651670423947251286016","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(74,10,74,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `notMaxUInt96_WORD_Int`(.KList)=>#token("115792089237316195423570985008687907853269984665561335876943319670319585689600","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(254,10,254,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `notMaxUInt5_WORD_Int`(.KList)=>#token("115792089237316195423570985008687907853269984665640564039457584007913129639904","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(253,10,253,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `notMaxUInt224_WORD_Int`(.KList)=>#token("115792089210356248756420345214020892766250353992003419616917011526809519390720","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(259,10,259,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `notMaxUInt208_WORD_Int`(.KList)=>#token("115792089237315784047431654707177369110974345328014318355491175612947292487680","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(258,10,258,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `notMaxUInt192_WORD_Int`(.KList)=>#token("115792089237316195417293883273301227089434195242432897623355228563449095127040","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(257,10,257,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `notMaxUInt160_WORD_Int`(.KList)=>#token("115792089237316195423570985007226406215939081747436879206741300988257197096960","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(256,10,256,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `notMaxUInt128_WORD_Int`(.KList)=>#token("115792089237316195423570985008687907852929702298719625575994209400481361428480","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(255,10,255,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt96_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(199,10,199,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt8_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(177,10,177,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt88_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(197,10,197,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt80_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(195,10,195,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt72_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(193,10,193,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt64_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(191,10,191,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt56_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(189,10,189,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt48_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(187,10,187,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt40_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(185,10,185,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt32_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(183,10,183,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt256_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(239,10,239,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt24_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(181,10,181,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt248_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(237,10,237,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt240_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(235,10,235,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt232_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(233,10,233,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt224_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(231,10,231,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt216_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(229,10,229,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt208_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(227,10,227,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt200_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(225,10,225,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt192_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(223,10,223,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt184_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(221,10,221,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt176_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(219,10,219,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt16_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(179,10,179,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt168_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(217,10,217,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt160_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(215,10,215,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt152_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(213,10,213,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt144_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(211,10,211,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt136_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(209,10,209,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt128_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(207,10,207,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt120_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(205,10,205,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt112_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(203,10,203,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUInt104_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(201,10,201,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minUFixed128x10_WORD_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(242,10,242,31)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minSInt256_WORD_Int`(.KList)=>#token("-57896044618658097711785492504343953926634992332820282019728792003956564819968","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(174,10,174,107)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minSInt128_WORD_Int`(.KList)=>#token("-170141183460469231731687303715884105728","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(169,10,169,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minSInt128Word_WORD_Int`(.KList)=>#token("115792089237316195423570985008687907853099843482180094807725896704197245534208","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(170,10,170,108)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minSFixed128x10_WORD_Int`(.KList)=>#token("-1701411834604692317316873037158841057280000000000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(172,10,172,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt96_WORD_Int`(.KList)=>#token("79228162514264337593543950335","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(200,10,200,59)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt8_WORD_Int`(.KList)=>#token("255","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(178,10,178,33)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt88_WORD_Int`(.KList)=>#token("309485009821345068724781055","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(198,10,198,57)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt80_WORD_Int`(.KList)=>#token("1208925819614629174706175","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(196,10,196,55)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt72_WORD_Int`(.KList)=>#token("4722366482869645213695","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(194,10,194,52)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt64_WORD_Int`(.KList)=>#token("18446744073709551615","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(192,10,192,50)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt56_WORD_Int`(.KList)=>#token("72057594037927935","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(190,10,190,47)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt48_WORD_Int`(.KList)=>#token("281474976710655","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(188,10,188,45)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt40_WORD_Int`(.KList)=>#token("1099511627775","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(186,10,186,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt32_WORD_Int`(.KList)=>#token("4294967295","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(184,10,184,40)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt256_WORD_Int`(.KList)=>#token("115792089237316195423570985008687907853269984665640564039457584007913129639935","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(240,10,240,108)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt24_WORD_Int`(.KList)=>#token("16777215","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(182,10,182,38)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt248_WORD_Int`(.KList)=>#token("452312848583266388373324160190187140051835877600158453279131187530910662655","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(238,10,238,105)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt240_WORD_Int`(.KList)=>#token("1766847064778384329583297500742918515827483896875618958121606201292619775","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(236,10,236,103)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt232_WORD_Int`(.KList)=>#token("6901746346790563787434755862277025452451108972170386555162524223799295","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(234,10,234,100)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt224_WORD_Int`(.KList)=>#token("26959946667150639794667015087019630673637144422540572481103610249215","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(232,10,232,98)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt216_WORD_Int`(.KList)=>#token("105312291668557186697918027683670432318895095400549111254310977535","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(230,10,230,96)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt208_WORD_Int`(.KList)=>#token("411376139330301510538742295639337626245683966408394965837152255","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(228,10,228,93)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt200_WORD_Int`(.KList)=>#token("1606938044258990275541962092341162602522202993782792835301375","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(226,10,226,91)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt192_WORD_Int`(.KList)=>#token("6277101735386680763835789423207666416102355444464034512895","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(224,10,224,88)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt184_WORD_Int`(.KList)=>#token("24519928653854221733733552434404946937899825954937634815","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(222,10,222,86)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt176_WORD_Int`(.KList)=>#token("95780971304118053647396689196894323976171195136475135","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(220,10,220,83)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt16_WORD_Int`(.KList)=>#token("65535","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(180,10,180,35)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt168_WORD_Int`(.KList)=>#token("374144419156711147060143317175368453031918731001855","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(218,10,218,81)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt160_WORD_Int`(.KList)=>#token("1461501637330902918203684832716283019655932542975","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(216,10,216,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt152_WORD_Int`(.KList)=>#token("5708990770823839524233143877797980545530986495","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(214,10,214,76)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt144_WORD_Int`(.KList)=>#token("22300745198530623141535718272648361505980415","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(212,10,212,74)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt136_WORD_Int`(.KList)=>#token("87112285931760246646623899502532662132735","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(210,10,210,71)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt128_WORD_Int`(.KList)=>#token("340282366920938463463374607431768211455","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(208,10,208,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt120_WORD_Int`(.KList)=>#token("1329227995784915872903807060280344575","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(206,10,206,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt112_WORD_Int`(.KList)=>#token("5192296858534827628530496329220095","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(204,10,204,64)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUInt104_WORD_Int`(.KList)=>#token("20282409603651670423947251286015","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(202,10,202,62)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxUFixed128x10_WORD_Int`(.KList)=>#token("3402823669209384634633746074317682114550000000000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(243,10,243,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxSInt256_WORD_Int`(.KList)=>#token("57896044618658097711785492504343953926634992332820282019728792003956564819967","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(175,10,175,107)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxSInt128_WORD_Int`(.KList)=>#token("170141183460469231731687303715884105727","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(171,10,171,69)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxSFixed128x10_WORD_Int`(.KList)=>#token("1701411834604692317316873037158841057270000000000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(173,10,173,79)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `maxBlockNum_WORD_Int`(.KList)=>#token("57896044618658097711785492504343953926634992332820282019728792003956564819967","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(265,10,265,102)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `eth_WORD_Int`(.KList)=>#token("1000000000000000000","Int") requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(264,10,264,44)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `chop(_)_WORD_Int_Int`(#SemanticCastToInt(I))=>`_modInt_`(#SemanticCastToInt(I),`pow256_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [concrete, org.kframework.attributes.Location(Location(345,10,345,43)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), smt-lemma]
  rule `_>>Byte__WORD_Int_Int_Int`(#SemanticCastToInt(N),#SemanticCastToInt(M))=>`_>>Int_`(#SemanticCastToInt(N),`_*Int_`(#token("8","Int"),#SemanticCastToInt(M))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(355,10,355,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<<Byte__WORD_Int_Int_Int`(#SemanticCastToInt(N),#SemanticCastToInt(M))=>`_<<Int_`(#SemanticCastToInt(N),`_*Int_`(#token("8","Int"),#SemanticCastToInt(M))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(354,10,354,42)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("96","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt96_WORD_Int`(.KList),#SemanticCastToInt(X),`pow96_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(299,10,299,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("88","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt88_WORD_Int`(.KList),#SemanticCastToInt(X),`pow88_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(298,10,298,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("80","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt80_WORD_Int`(.KList),#SemanticCastToInt(X),`pow80_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(297,10,297,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("8","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt8_WORD_Int`(.KList),#SemanticCastToInt(X),`pow8_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(288,10,288,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("72","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt72_WORD_Int`(.KList),#SemanticCastToInt(X),`pow72_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(296,10,296,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("64","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt64_WORD_Int`(.KList),#SemanticCastToInt(X),`pow64_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(295,10,295,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("56","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt56_WORD_Int`(.KList),#SemanticCastToInt(X),`pow56_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(294,10,294,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("48","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt48_WORD_Int`(.KList),#SemanticCastToInt(X),`pow48_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(293,10,293,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("40","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt40_WORD_Int`(.KList),#SemanticCastToInt(X),`pow40_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(292,10,292,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("32","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt32_WORD_Int`(.KList),#SemanticCastToInt(X),`pow32_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(291,10,291,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt256_WORD_Int`(.KList),#SemanticCastToInt(X),`pow256_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(319,10,319,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("248","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt248_WORD_Int`(.KList),#SemanticCastToInt(X),`pow248_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(318,10,318,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("240","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt240_WORD_Int`(.KList),#SemanticCastToInt(X),`pow240_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(317,10,317,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("24","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt24_WORD_Int`(.KList),#SemanticCastToInt(X),`pow24_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(290,10,290,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("232","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt232_WORD_Int`(.KList),#SemanticCastToInt(X),`pow232_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(316,10,316,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("224","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt224_WORD_Int`(.KList),#SemanticCastToInt(X),`pow224_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(315,10,315,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("216","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt216_WORD_Int`(.KList),#SemanticCastToInt(X),`pow216_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(314,10,314,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("208","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt208_WORD_Int`(.KList),#SemanticCastToInt(X),`pow208_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(313,10,313,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("200","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt200_WORD_Int`(.KList),#SemanticCastToInt(X),`pow200_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(312,10,312,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("192","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt192_WORD_Int`(.KList),#SemanticCastToInt(X),`pow192_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(311,10,311,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("184","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt184_WORD_Int`(.KList),#SemanticCastToInt(X),`pow184_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(310,10,310,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("176","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt176_WORD_Int`(.KList),#SemanticCastToInt(X),`pow176_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(309,10,309,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("168","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt168_WORD_Int`(.KList),#SemanticCastToInt(X),`pow168_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(308,10,308,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("160","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt160_WORD_Int`(.KList),#SemanticCastToInt(X),`pow160_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(307,10,307,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("16","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt16_WORD_Int`(.KList),#SemanticCastToInt(X),`pow16_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(289,10,289,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("152","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt152_WORD_Int`(.KList),#SemanticCastToInt(X),`pow152_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(306,10,306,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("144","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt144_WORD_Int`(.KList),#SemanticCastToInt(X),`pow144_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(305,10,305,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("136","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt136_WORD_Int`(.KList),#SemanticCastToInt(X),`pow136_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(304,10,304,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("128","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt128_WORD_Int`(.KList),#SemanticCastToInt(X),`pow128_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(303,10,303,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("120","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt120_WORD_Int`(.KList),#SemanticCastToInt(X),`pow120_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(302,10,302,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("112","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt112_WORD_Int`(.KList),#SemanticCastToInt(X),`pow112_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(301,10,301,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUInt(_,_)_WORD_Bool_Int_Int`(#token("104","Int"),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt104_WORD_Int`(.KList),#SemanticCastToInt(X),`pow104_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(300,10,300,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeUFixed(_,_,_)_WORD_Bool_Int_Int_Int`(#token("128","Int"),#token("10","Int"),#SemanticCastToInt(X))=>`#range(_<=_<=_)_WORD_Bool_Int_Int_Int`(`minUFixed128x10_WORD_Int`(.KList),#SemanticCastToInt(X),`maxUFixed128x10_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(322,10,322,95)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeSmall(_)_WORD_Bool_Int`(#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(#token("0","Int"),#SemanticCastToInt(X),#token("10","Int")) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(326,10,326,95)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeSInt(_,_)_WORD_Bool_Int_Int`(#token("256","Int"),#SemanticCastToInt(X))=>`#range(_<=_<=_)_WORD_Bool_Int_Int_Int`(`minSInt256_WORD_Int`(.KList),#SemanticCastToInt(X),`maxSInt256_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(286,10,286,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeSInt(_,_)_WORD_Bool_Int_Int`(#token("128","Int"),#SemanticCastToInt(X))=>`#range(_<=_<=_)_WORD_Bool_Int_Int_Int`(`minSInt128_WORD_Int`(.KList),#SemanticCastToInt(X),`maxSInt128_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(285,10,285,94)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeSFixed(_,_,_)_WORD_Bool_Int_Int_Int`(#token("128","Int"),#token("10","Int"),#SemanticCastToInt(X))=>`#range(_<=_<=_)_WORD_Bool_Int_Int_Int`(`minSFixed128x10_WORD_Int`(.KList),#SemanticCastToInt(X),`maxSFixed128x10_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(321,10,321,95)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeNonce(_)_WORD_Bool_Int`(#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(#token("0","Int"),#SemanticCastToInt(X),`maxUInt64_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(325,10,325,95)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeBytes(_,_)_WORD_Bool_Int_Int`(#SemanticCastToInt(N),#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(#token("0","Int"),#SemanticCastToInt(X),`_<<Byte__WORD_Int_Int_Int`(#token("1","Int"),#SemanticCastToInt(N))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(324,10,324,95)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeBool(_)_WORD_Bool_Int`(#SemanticCastToInt(X))=>`_orBool_`(`_==Int_`(#SemanticCastToInt(X),#token("0","Int")),`_==Int_`(#SemanticCastToInt(X),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(283,10,283,70)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeBlockNum(_)_WORD_Bool_Int`(#SemanticCastToInt(X))=>`#range(_<=_<=_)_WORD_Bool_Int_Int_Int`(#token("0","Int"),#SemanticCastToInt(X),`maxBlockNum_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(327,10,327,95)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#rangeAddress(_)_WORD_Bool_Int`(#SemanticCastToInt(X))=>`#range(_<=_<_)_WORD_Bool_Int_Int_Int`(`minUInt160_WORD_Int`(.KList),#SemanticCastToInt(X),`pow160_WORD_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(323,10,323,95)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#range(_<_<_)_WORD_Bool_Int_Int_Int`(#SemanticCastToInt(LB),#SemanticCastToInt(X),#SemanticCastToInt(UB))=>`_andBool_`(`_<Int_`(#SemanticCastToInt(LB),#SemanticCastToInt(X)),`_<Int_`(#SemanticCastToInt(X),#SemanticCastToInt(UB))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(334,10,334,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#range(_<_<=_)_WORD_Bool_Int_Int_Int`(#SemanticCastToInt(LB),#SemanticCastToInt(X),#SemanticCastToInt(UB))=>`_andBool_`(`_<Int_`(#SemanticCastToInt(LB),#SemanticCastToInt(X)),`_<=Int_`(#SemanticCastToInt(X),#SemanticCastToInt(UB))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(335,10,335,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#range(_<=_<_)_WORD_Bool_Int_Int_Int`(#SemanticCastToInt(LB),#SemanticCastToInt(X),#SemanticCastToInt(UB))=>`_andBool_`(`_<=Int_`(#SemanticCastToInt(LB),#SemanticCastToInt(X)),`_<Int_`(#SemanticCastToInt(X),#SemanticCastToInt(UB))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(336,10,336,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#range(_<=_<=_)_WORD_Bool_Int_Int_Int`(#SemanticCastToInt(LB),#SemanticCastToInt(X),#SemanticCastToInt(UB))=>`_andBool_`(`_<=Int_`(#SemanticCastToInt(LB),#SemanticCastToInt(X)),`_<=Int_`(#SemanticCastToInt(X),#SemanticCastToInt(UB))) requires #token("true","Bool") ensures #token("true","Bool") [org.kframework.attributes.Location(Location(337,10,337,67)), org.kframework.attributes.Source(Source(/home/ifrostizz/rv/evm-semantics/.build/usr/lib/kevm/include/kframework/word.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule