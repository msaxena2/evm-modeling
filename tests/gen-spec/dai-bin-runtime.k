requires "edsl.md"

module DAI-BIN-RUNTIME
    imports public EDSL
    
    syntax Contract ::= DaiContract 
    
    syntax DaiContract ::= "Dai" [klabel(contract_Dai), symbol()]
    
    syntax DaiStorage ::= "wards" "[" Int "]" 
    
    syntax DaiStorage ::= "totalSupply" 
    
    syntax DaiStorage ::= "balanceOf" "[" Int "]" 
    
    syntax DaiStorage ::= "allowance" "[" Int "]" "[" Int "]" 
    
    syntax DaiStorage ::= "nonces" "[" Int "]" 
    
    syntax Int ::= DaiContract "." DaiStorage [klabel(storage_Dai), alias()]
    
    rule  ( Dai.wards[V0] => #hashedLocation("Solidity", 0 +Int 0, V0) )
      
    
    rule  ( Dai.totalSupply => 0 +Int 1 )
      
    
    rule  ( Dai.balanceOf[V0] => #hashedLocation("Solidity", 0 +Int 2, V0) )
      
    
    rule  ( Dai.allowance[V0][V1] => #hashedLocation("Solidity", #hashedLocation("Solidity", 0 +Int 3, V0), V1) )
      
    
    rule  ( Dai.nonces[V0] => #hashedLocation("Solidity", 0 +Int 4, V0) )
      
    
    syntax ByteArray ::= DaiContract "." DaiFunction [klabel(function_Dai), symbol(), function()]
    
    syntax DaiFunction ::= "DOMAIN_SEPARATOR" "(" ")" 
    
    syntax DaiFunction ::= "PERMIT_TYPEHASH" "(" ")" 
    
    syntax DaiFunction ::= "allowance" "(" Int "," Int ")" 
    
    syntax DaiFunction ::= "approve" "(" Int "," Int ")" 
    
    syntax DaiFunction ::= "balanceOf" "(" Int ")" 
    
    syntax DaiFunction ::= "burn" "(" Int "," Int ")" 
    
    syntax DaiFunction ::= "decimals" "(" ")" 
    
    syntax DaiFunction ::= "decreaseAllowance" "(" Int "," Int ")" 
    
    syntax DaiFunction ::= "deny" "(" Int ")" 
    
    syntax DaiFunction ::= "deploymentChainId" "(" ")" 
    
    syntax DaiFunction ::= "increaseAllowance" "(" Int "," Int ")" 
    
    syntax DaiFunction ::= "mint" "(" Int "," Int ")" 
    
    syntax DaiFunction ::= "name" "(" ")" 
    
    syntax DaiFunction ::= "nonces" "(" Int ")" 
    
    syntax DaiFunction ::= "permit" "(" Int "," Int "," Int "," Int "," Int "," Int "," Int ")" 
    
    syntax DaiFunction ::= "rely" "(" Int ")" 
    
    syntax DaiFunction ::= "symbol" "(" ")" 
    
    syntax DaiFunction ::= "totalSupply" "(" ")" 
    
    syntax DaiFunction ::= "transfer" "(" Int "," Int ")" 
    
    syntax DaiFunction ::= "transferFrom" "(" Int "," Int "," Int ")" 
    
    syntax DaiFunction ::= "version" "(" ")" 
    
    syntax DaiFunction ::= "wards" "(" Int ")" 
    
    rule  ( Dai.DOMAIN_SEPARATOR() => #abiCallData("DOMAIN_SEPARATOR", .TypedArgs) )
      
    
    rule  ( Dai.PERMIT_TYPEHASH() => #abiCallData("PERMIT_TYPEHASH", .TypedArgs) )
      
    
    rule  ( Dai.allowance(V0, V1) => #abiCallData("allowance", #address( V0 ), #address( V1 )) )
       ensures ( #rangeAddress(V0)
       andBool ( #rangeAddress(V1)
               ))
      
    
    rule  ( Dai.approve(SPENDER, VALUE) => #abiCallData("approve", #address( SPENDER ), #uint256( VALUE )) )
       ensures ( #rangeAddress(SPENDER)
       andBool ( #rangeUInt(256, VALUE)
               ))
      
    
    rule  ( Dai.balanceOf(V0) => #abiCallData("balanceOf", #address( V0 )) )
       ensures #rangeAddress(V0)
      
    
    rule  ( Dai.burn(FROM, VALUE) => #abiCallData("burn", #address( FROM ), #uint256( VALUE )) )
       ensures ( #rangeAddress(FROM)
       andBool ( #rangeUInt(256, VALUE)
               ))
      
    
    rule  ( Dai.decimals() => #abiCallData("decimals", .TypedArgs) )
      
    
    rule  ( Dai.decreaseAllowance(SPENDER, SUBTRACTEDVALUE) => #abiCallData("decreaseAllowance", #address( SPENDER ), #uint256( SUBTRACTEDVALUE )) )
       ensures ( #rangeAddress(SPENDER)
       andBool ( #rangeUInt(256, SUBTRACTEDVALUE)
               ))
      
    
    rule  ( Dai.deny(USR) => #abiCallData("deny", #address( USR )) )
       ensures #rangeAddress(USR)
      
    
    rule  ( Dai.deploymentChainId() => #abiCallData("deploymentChainId", .TypedArgs) )
      
    
    rule  ( Dai.increaseAllowance(SPENDER, ADDEDVALUE) => #abiCallData("increaseAllowance", #address( SPENDER ), #uint256( ADDEDVALUE )) )
       ensures ( #rangeAddress(SPENDER)
       andBool ( #rangeUInt(256, ADDEDVALUE)
               ))
      
    
    rule  ( Dai.mint(TO, VALUE) => #abiCallData("mint", #address( TO ), #uint256( VALUE )) )
       ensures ( #rangeAddress(TO)
       andBool ( #rangeUInt(256, VALUE)
               ))
      
    
    rule  ( Dai.name() => #abiCallData("name", .TypedArgs) )
      
    
    rule  ( Dai.nonces(V0) => #abiCallData("nonces", #address( V0 )) )
       ensures #rangeAddress(V0)
      
    
    rule  ( Dai.permit(OWNER, SPENDER, VALUE, DEADLINE, V, R, S) => #abiCallData("permit", #address( OWNER ), #address( SPENDER ), #uint256( VALUE ), #uint256( DEADLINE ), #uint8( V ), #bytes32( R ), #bytes32( S )) )
       ensures ( #rangeAddress(OWNER)
       andBool ( #rangeAddress(SPENDER)
       andBool ( #rangeUInt(256, VALUE)
       andBool ( #rangeUInt(256, DEADLINE)
       andBool ( #rangeUInt(8, V)
       andBool ( #rangeUInt(256, R)
       andBool ( #rangeUInt(256, S)
               )))))))
      
    
    rule  ( Dai.rely(USR) => #abiCallData("rely", #address( USR )) )
       ensures #rangeAddress(USR)
      
    
    rule  ( Dai.symbol() => #abiCallData("symbol", .TypedArgs) )
      
    
    rule  ( Dai.totalSupply() => #abiCallData("totalSupply", .TypedArgs) )
      
    
    rule  ( Dai.transfer(TO, VALUE) => #abiCallData("transfer", #address( TO ), #uint256( VALUE )) )
       ensures ( #rangeAddress(TO)
       andBool ( #rangeUInt(256, VALUE)
               ))
      
    
    rule  ( Dai.transferFrom(FROM, TO, VALUE) => #abiCallData("transferFrom", #address( FROM ), #address( TO ), #uint256( VALUE )) )
       ensures ( #rangeAddress(FROM)
       andBool ( #rangeAddress(TO)
       andBool ( #rangeUInt(256, VALUE)
               )))
      
    
    rule  ( Dai.version() => #abiCallData("version", .TypedArgs) )
      
    
    rule  ( Dai.wards(V0) => #abiCallData("wards", #address( V0 )) )
       ensures #rangeAddress(V0)
      
    
    rule  ( #binRuntime(Dai) => #parseByteStack( "0x608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b8578063a457c2d71161007c578063a457c2d714610379578063a9059cbb146103a9578063bf353dbb146103d9578063cd0d009614610409578063d505accf14610427578063dd62ed3e1461044357610142565b806370a08231146102c35780637ecebe00146102f357806395d89b41146103235780639c52a7f1146103415780639dc29fac1461035d57610142565b8063313ce5671161010a578063313ce567146102015780633644e5151461021f578063395093511461023d57806340c10f191461026d57806354fd4d501461028957806365fae35e146102a757610142565b806306fdde0314610147578063095ea7b31461016557806318160ddd1461019557806323b872dd146101b357806330adf81f146101e3575b600080fd5b61014f610473565b60405161015c9190611c9f565b60405180910390f35b61017f600480360381019061017a9190611d5a565b6104ac565b60405161018c9190611db5565b60405180910390f35b61019d61059e565b6040516101aa9190611ddf565b60405180910390f35b6101cd60048036038101906101c89190611dfa565b6105a4565b6040516101da9190611db5565b60405180910390f35b6101eb61097c565b6040516101f89190611e66565b60405180910390f35b6102096109a0565b6040516102169190611e9d565b60405180910390f35b6102276109a5565b6040516102349190611e66565b60405180910390f35b61025760048036038101906102529190611d5a565b610a03565b6040516102649190611db5565b60405180910390f35b61028760048036038101906102829190611d5a565b610b81565b005b610291610dad565b60405161029e9190611c9f565b60405180910390f35b6102c160048036038101906102bc9190611eb8565b610de6565b005b6102dd60048036038101906102d89190611eb8565b610ef1565b6040516102ea9190611ddf565b60405180910390f35b61030d60048036038101906103089190611eb8565b610f09565b60405161031a9190611ddf565b60405180910390f35b61032b610f21565b6040516103389190611c9f565b60405180910390f35b61035b60048036038101906103569190611eb8565b610f5a565b005b61037760048036038101906103729190611d5a565b611065565b005b610393600480360381019061038e9190611d5a565b611399565b6040516103a09190611db5565b60405180910390f35b6103c360048036038101906103be9190611d5a565b611554565b6040516103d09190611db5565b60405180910390f35b6103f360048036038101906103ee9190611eb8565b611787565b6040516104009190611ddf565b60405180910390f35b61041161179f565b60405161041e9190611ddf565b60405180910390f35b610441600480360381019061043c9190611f3d565b6117c3565b005b61045d60048036038101906104589190611fdf565b611b11565b60405161046a9190611ddf565b60405180910390f35b6040518060400160405280600e81526020017f44616920537461626c65636f696e00000000000000000000000000000000000081525081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161058c9190611ddf565b60405180910390a36001905092915050565b60015481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561060e57503073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b61064d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106449061206b565b60405180910390fd5b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cb906120d7565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610878576000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461087657838110156107f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e990612143565b60405180910390fd5b838103600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b828103600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516109689190611ddf565b60405180910390a360019150509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60007f000000000000000000000000000000000000000000000000000000000000000046146109dc576109d746611b36565b6109fe565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b60008082600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a8e9190612192565b905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610b6e9190611ddf565b60405180910390a3600191505092915050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610c02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf990612234565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015610c6b57503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b610caa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca19061206b565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600154610d3d9190612192565b6001819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610da19190611ddf565b60405180910390a35050565b6040518060400160405280600181526020017f320000000000000000000000000000000000000000000000000000000000000081525081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610e67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5e90612234565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a6060405160405180910390a250565b60026020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600381526020017f444149000000000000000000000000000000000000000000000000000000000081525081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610fdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd290612234565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b60405160405180910390a250565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156110ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e3906120d7565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611167575060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156112dd576000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146112db5782811015611257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124e90612143565b60405180910390fd5b828103600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b818103600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160015403600181905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161138c9190611ddf565b60405180910390a3505050565b600080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561145e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145590612143565b60405180910390fd5b828103905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516115419190611ddf565b60405180910390a3600191505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115be57503073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b6115fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f49061206b565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015611684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167b906120d7565b60405180910390fd5b828103600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516117749190611ddf565b60405180910390a3600191505092915050565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b83421115611806576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117fd906122a0565b60405180910390fd5b6000600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055905060007f0000000000000000000000000000000000000000000000000000000000000000461461188f5761188a46611b36565b6118b1565b7f00000000000000000000000000000000000000000000000000000000000000005b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a868b6040516020016118ec969594939291906122cf565b604051602081830303815290604052805190602001206040516020016119139291906123a8565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16141580156119e157506001818686866040516000815260200160405260405161198694939291906123df565b6020604051602081039080840390855afa1580156119a8573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16145b611a20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a1790612470565b60405180910390fd5b86600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92589604051611afe9190611ddf565b60405180910390a3505050505050505050565b6003602052816000526040600020602052806000526040600020600091509150505481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600e81526020017f44616920537461626c65636f696e000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3200000000000000000000000000000000000000000000000000000000000000815250805190602001208430604051602001611be9959493929190612490565b604051602081830303815290604052805190602001209050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c40578082015181840152602081019050611c25565b83811115611c4f576000848401525b50505050565b6000601f19601f8301169050919050565b6000611c7182611c06565b611c7b8185611c11565b9350611c8b818560208601611c22565b611c9481611c55565b840191505092915050565b60006020820190508181036000830152611cb98184611c66565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cf182611cc6565b9050919050565b611d0181611ce6565b8114611d0c57600080fd5b50565b600081359050611d1e81611cf8565b92915050565b6000819050919050565b611d3781611d24565b8114611d4257600080fd5b50565b600081359050611d5481611d2e565b92915050565b60008060408385031215611d7157611d70611cc1565b5b6000611d7f85828601611d0f565b9250506020611d9085828601611d45565b9150509250929050565b60008115159050919050565b611daf81611d9a565b82525050565b6000602082019050611dca6000830184611da6565b92915050565b611dd981611d24565b82525050565b6000602082019050611df46000830184611dd0565b92915050565b600080600060608486031215611e1357611e12611cc1565b5b6000611e2186828701611d0f565b9350506020611e3286828701611d0f565b9250506040611e4386828701611d45565b9150509250925092565b6000819050919050565b611e6081611e4d565b82525050565b6000602082019050611e7b6000830184611e57565b92915050565b600060ff82169050919050565b611e9781611e81565b82525050565b6000602082019050611eb26000830184611e8e565b92915050565b600060208284031215611ece57611ecd611cc1565b5b6000611edc84828501611d0f565b91505092915050565b611eee81611e81565b8114611ef957600080fd5b50565b600081359050611f0b81611ee5565b92915050565b611f1a81611e4d565b8114611f2557600080fd5b50565b600081359050611f3781611f11565b92915050565b600080600080600080600060e0888a031215611f5c57611f5b611cc1565b5b6000611f6a8a828b01611d0f565b9750506020611f7b8a828b01611d0f565b9650506040611f8c8a828b01611d45565b9550506060611f9d8a828b01611d45565b9450506080611fae8a828b01611efc565b93505060a0611fbf8a828b01611f28565b92505060c0611fd08a828b01611f28565b91505092959891949750929550565b60008060408385031215611ff657611ff5611cc1565b5b600061200485828601611d0f565b925050602061201585828601611d0f565b9150509250929050565b7f4461692f696e76616c69642d6164647265737300000000000000000000000000600082015250565b6000612055601383611c11565b91506120608261201f565b602082019050919050565b6000602082019050818103600083015261208481612048565b9050919050565b7f4461692f696e73756666696369656e742d62616c616e63650000000000000000600082015250565b60006120c1601883611c11565b91506120cc8261208b565b602082019050919050565b600060208201905081810360008301526120f0816120b4565b9050919050565b7f4461692f696e73756666696369656e742d616c6c6f77616e6365000000000000600082015250565b600061212d601a83611c11565b9150612138826120f7565b602082019050919050565b6000602082019050818103600083015261215c81612120565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061219d82611d24565b91506121a883611d24565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121dd576121dc612163565b5b828201905092915050565b7f4461692f6e6f742d617574686f72697a65640000000000000000000000000000600082015250565b600061221e601283611c11565b9150612229826121e8565b602082019050919050565b6000602082019050818103600083015261224d81612211565b9050919050565b7f4461692f7065726d69742d657870697265640000000000000000000000000000600082015250565b600061228a601283611c11565b915061229582612254565b602082019050919050565b600060208201905081810360008301526122b98161227d565b9050919050565b6122c981611ce6565b82525050565b600060c0820190506122e46000830189611e57565b6122f160208301886122c0565b6122fe60408301876122c0565b61230b6060830186611dd0565b6123186080830185611dd0565b61232560a0830184611dd0565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000612371600283612330565b915061237c8261233b565b600282019050919050565b6000819050919050565b6123a261239d82611e4d565b612387565b82525050565b60006123b382612364565b91506123bf8285612391565b6020820191506123cf8284612391565b6020820191508190509392505050565b60006080820190506123f46000830187611e57565b6124016020830186611e8e565b61240e6040830185611e57565b61241b6060830184611e57565b95945050505050565b7f4461692f696e76616c69642d7065726d69740000000000000000000000000000600082015250565b600061245a601283611c11565b915061246582612424565b602082019050919050565b600060208201905081810360008301526124898161244d565b9050919050565b600060a0820190506124a56000830188611e57565b6124b26020830187611e57565b6124bf6040830186611e57565b6124cc6060830185611dd0565b6124d960808301846122c0565b969550505050505056fea2646970667358221220ab1444f2f50306260ac16331e226e811d0eb05769b5fb67eb59109c92ca5991f64736f6c637828302e382e31332d646576656c6f702e323032322e342e32362b636f6d6d69742e61626161356330650059" ) )
      
    
    rule  ( selector("DOMAIN_SEPARATOR") => 910484757 )
      
    
    rule  ( selector("PERMIT_TYPEHASH") => 816707615 )
      
    
    rule  ( selector("allowance") => 3714247998 )
      
    
    rule  ( selector("approve") => 157198259 )
      
    
    rule  ( selector("balanceOf") => 1889567281 )
      
    
    rule  ( selector("burn") => 2646777772 )
      
    
    rule  ( selector("decimals") => 826074471 )
      
    
    rule  ( selector("decreaseAllowance") => 2757214935 )
      
    
    rule  ( selector("deny") => 2622662641 )
      
    
    rule  ( selector("deploymentChainId") => 3440181398 )
      
    
    rule  ( selector("increaseAllowance") => 961581905 )
      
    
    rule  ( selector("mint") => 1086394137 )
      
    
    rule  ( selector("name") => 117300739 )
      
    
    rule  ( selector("nonces") => 2127478272 )
      
    
    rule  ( selector("permit") => 3573918927 )
      
    
    rule  ( selector("rely") => 1710941022 )
      
    
    rule  ( selector("symbol") => 2514000705 )
      
    
    rule  ( selector("totalSupply") => 404098525 )
      
    
    rule  ( selector("transfer") => 2835717307 )
      
    
    rule  ( selector("transferFrom") => 599290589 )
      
    
    rule  ( selector("version") => 1425886544 )
      
    
    rule  ( selector("wards") => 3207937467 )
      

endmodule

