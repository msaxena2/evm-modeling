requires "edsl.md"

module DAIJOIN-BIN-RUNTIME
    imports public EDSL
    
    syntax Contract ::= DaiJoinContract 
    
    syntax DaiJoinContract ::= "DaiJoin" [klabel(contract_DaiJoin), symbol()]
    
    syntax ByteArray ::= DaiJoinContract "." DaiJoinFunction [klabel(function_DaiJoin), symbol(), function()]
    
    syntax DaiJoinFunction ::= "dai" "(" ")" 
    
    syntax DaiJoinFunction ::= "exit" "(" Int "," Int ")" 
    
    syntax DaiJoinFunction ::= "join" "(" Int "," Int ")" 
    
    syntax DaiJoinFunction ::= "vat" "(" ")" 
    
    rule  ( DaiJoin.dai() => #abiCallData("dai", .TypedArgs) )
      
    
    rule  ( DaiJoin.exit(USR, WAD) => #abiCallData("exit", #address( USR ), #uint256( WAD )) )
       ensures ( #rangeAddress(USR)
       andBool ( #rangeUInt(256, WAD)
               ))
      
    
    rule  ( DaiJoin.join(USR, WAD) => #abiCallData("join", #address( USR ), #uint256( WAD )) )
       ensures ( #rangeAddress(USR)
       andBool ( #rangeUInt(256, WAD)
               ))
      
    
    rule  ( DaiJoin.vat() => #abiCallData("vat", .TypedArgs) )
      
    
    rule  ( #binRuntime(DaiJoin) => #parseByteStack( "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806336569e77146100515780633b4da69f1461006f578063ef693bed1461008b578063f4b9fa75146100a7575b600080fd5b6100596100c5565b6040516100669190610496565b60405180910390f35b6100896004803603810190610084919061052a565b6100e9565b005b6100a560048036038101906100a0919061052a565b61026e565b005b6100af6103f3565b6040516100bc919061058b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb35783b3084846b033b2e3c9fd0803ce800000061013f91906105d5565b6040518463ffffffff1660e01b815260040161015d9392919061064d565b600060405180830381600087803b15801561017757600080fd5b505af115801561018b573d6000803e3d6000fd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff1660e01b81526004016101ea929190610684565b600060405180830381600087803b15801561020457600080fd5b505af1158015610218573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff167fb4e09949657f21548b58afe74e7b86cd2295da5ff1598ae1e5faecb1cf19ca958260405161026291906106ad565b60405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb35783b3330846b033b2e3c9fd0803ce80000006102c491906105d5565b6040518463ffffffff1660e01b81526004016102e29392919061064d565b600060405180830381600087803b1580156102fc57600080fd5b505af1158015610310573d6000803e3d6000fd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b815260040161036f929190610684565b600060405180830381600087803b15801561038957600080fd5b505af115801561039d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff167f22d324652c93739755cf4581508b60875ebdd78c20c0cff5cf8e23452b299631826040516103e791906106ad565b60405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061045c61045761045284610417565b610437565b610417565b9050919050565b600061046e82610441565b9050919050565b600061048082610463565b9050919050565b61049081610475565b82525050565b60006020820190506104ab6000830184610487565b92915050565b600080fd5b60006104c182610417565b9050919050565b6104d1816104b6565b81146104dc57600080fd5b50565b6000813590506104ee816104c8565b92915050565b6000819050919050565b610507816104f4565b811461051257600080fd5b50565b600081359050610524816104fe565b92915050565b60008060408385031215610541576105406104b1565b5b600061054f858286016104df565b925050602061056085828601610515565b9150509250929050565b600061057582610463565b9050919050565b6105858161056a565b82525050565b60006020820190506105a0600083018461057c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105e0826104f4565b91506105eb836104f4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610624576106236105a6565b5b828202905092915050565b610638816104b6565b82525050565b610647816104f4565b82525050565b6000606082019050610662600083018661062f565b61066f602083018561062f565b61067c604083018461063e565b949350505050565b6000604082019050610699600083018561062f565b6106a6602083018461063e565b9392505050565b60006020820190506106c2600083018461063e565b9291505056fea26469706673582212207b8a9fc1f19860358a203982cabb532fca1c27a93eda8cae8f91c7c40715973d64736f6c637828302e382e31332d646576656c6f702e323032322e342e32362b636f6d6d69742e61626161356330650059" ) )
      
    
    rule  ( selector("dai") => 4105828981 )
      
    
    rule  ( selector("exit") => 4016651245 )
      
    
    rule  ( selector("join") => 994944671 )
      
    
    rule  ( selector("vat") => 911646327 )
      

endmodule

