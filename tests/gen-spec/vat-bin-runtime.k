requires "edsl.md"

module VAT-BIN-RUNTIME
    imports public BIN-RUNTIME
    
    syntax Contract ::= VatContract 
    
    syntax VatContract ::= "Vat" [klabel(contract_Vat), symbol()]
    
    syntax VatStorage ::= "wards" "[" Int "]" 
    
    syntax VatStorage ::= "can" "[" Int "]" "[" Int "]" 
    
    syntax VatStorage ::= "ilks" "[" Int "]" "." "Art" 
    
    syntax VatStorage ::= "ilks" "[" Int "]" "." "rate" 
    
    syntax VatStorage ::= "ilks" "[" Int "]" "." "spot" 
    
    syntax VatStorage ::= "ilks" "[" Int "]" "." "line" 
    
    syntax VatStorage ::= "ilks" "[" Int "]" "." "dust" 
    
    syntax VatStorage ::= "urns" "[" Int "]" "[" Int "]" "." "ink" 
    
    syntax VatStorage ::= "urns" "[" Int "]" "[" Int "]" "." "art" 
    
    syntax VatStorage ::= "gem" "[" Int "]" "[" Int "]" 
    
    syntax VatStorage ::= "dai" "[" Int "]" 
    
    syntax VatStorage ::= "sin" "[" Int "]" 
    
    syntax VatStorage ::= "debt" 
    
    syntax VatStorage ::= "vice" 
    
    syntax VatStorage ::= "Line" 
    
    syntax VatStorage ::= "live" 
    
    syntax Int ::= VatContract "." VatStorage [klabel(storage_Vat), alias()]
    
    rule  ( Vat.wards[V0] => #hashedLocation("Solidity", 0 +Int 0, V0) )
      
    
    rule  ( Vat.can[V0][V1] => #hashedLocation("Solidity", #hashedLocation("Solidity", 0 +Int 1, V0), V1) )
      
    
    rule  ( Vat.ilks[V0].Art => #hashedLocation("Solidity", 0 +Int 2, V0) +Int 0 )
      
    
    rule  ( Vat.ilks[V0].rate => #hashedLocation("Solidity", 0 +Int 2, V0) +Int 1 )
      
    
    rule  ( Vat.ilks[V0].spot => #hashedLocation("Solidity", 0 +Int 2, V0) +Int 2 )
      
    
    rule  ( Vat.ilks[V0].line => #hashedLocation("Solidity", 0 +Int 2, V0) +Int 3 )
      
    
    rule  ( Vat.ilks[V0].dust => #hashedLocation("Solidity", 0 +Int 2, V0) +Int 4 )
      
    
    rule  ( Vat.urns[V0][V1].ink => #hashedLocation("Solidity", #hashedLocation("Solidity", 0 +Int 3, V0), V1) +Int 0 )
      
    
    rule  ( Vat.urns[V0][V1].art => #hashedLocation("Solidity", #hashedLocation("Solidity", 0 +Int 3, V0), V1) +Int 1 )
      
    
    rule  ( Vat.gem[V0][V1] => #hashedLocation("Solidity", #hashedLocation("Solidity", 0 +Int 4, V0), V1) )
      
    
    rule  ( Vat.dai[V0] => #hashedLocation("Solidity", 0 +Int 5, V0) )
      
    
    rule  ( Vat.sin[V0] => #hashedLocation("Solidity", 0 +Int 6, V0) )
      
    
    rule  ( Vat.debt => 0 +Int 7 )
      
    
    rule  ( Vat.vice => 0 +Int 8 )
      
    
    rule  ( Vat.Line => 0 +Int 9 )
      
    
    rule  ( Vat.live => 0 +Int 10 )
      
    
    syntax ByteArray ::= VatContract "." VatFunction [klabel(function_Vat), symbol(), function()]
    
    syntax VatFunction ::= "Art" "(" Int ")" 
    
    syntax VatFunction ::= "Line" "(" ")" 
    
    syntax VatFunction ::= "art" "(" Int "," Int ")" 
    
    syntax VatFunction ::= "cage" "(" ")" 
    
    syntax VatFunction ::= "can" "(" Int "," Int ")" 
    
    syntax VatFunction ::= "dai" "(" Int ")" 
    
    syntax VatFunction ::= "debt" "(" ")" 
    
    syntax VatFunction ::= "deny" "(" Int ")" 
    
    syntax VatFunction ::= "dust" "(" Int ")" 
    
    syntax VatFunction ::= "file" "(" Int "," Int "," Int ")" 
    
    syntax VatFunction ::= "file" "(" Int "," Int ")" 
    
    syntax VatFunction ::= "flux" "(" Int "," Int "," Int "," Int ")" 
    
    syntax VatFunction ::= "fold" "(" Int "," Int "," Int ")" 
    
    syntax VatFunction ::= "fork" "(" Int "," Int "," Int "," Int "," Int ")" 
    
    syntax VatFunction ::= "frob" "(" Int "," Int "," Int "," Int "," Int "," Int ")" 
    
    syntax VatFunction ::= "gem" "(" Int "," Int ")" 
    
    syntax VatFunction ::= "grab" "(" Int "," Int "," Int "," Int "," Int "," Int ")" 
    
    syntax VatFunction ::= "heal" "(" Int ")" 
    
    syntax VatFunction ::= "hope" "(" Int ")" 
    
    syntax VatFunction ::= "ilks" "(" Int ")" 
    
    syntax VatFunction ::= "init" "(" Int ")" 
    
    syntax VatFunction ::= "ink" "(" Int "," Int ")" 
    
    syntax VatFunction ::= "line" "(" Int ")" 
    
    syntax VatFunction ::= "live" "(" ")" 
    
    syntax VatFunction ::= "move" "(" Int "," Int "," Int ")" 
    
    syntax VatFunction ::= "nope" "(" Int ")" 
    
    syntax VatFunction ::= "rate" "(" Int ")" 
    
    syntax VatFunction ::= "rely" "(" Int ")" 
    
    syntax VatFunction ::= "sin" "(" Int ")" 
    
    syntax VatFunction ::= "slip" "(" Int "," Int "," Int ")" 
    
    syntax VatFunction ::= "spot" "(" Int ")" 
    
    syntax VatFunction ::= "suck" "(" Int "," Int "," Int ")" 
    
    syntax VatFunction ::= "urns" "(" Int "," Int ")" 
    
    syntax VatFunction ::= "vice" "(" ")" 
    
    syntax VatFunction ::= "wards" "(" Int ")" 
    
    rule  ( Vat.Art(ILK) => #abiCallData("Art", #bytes32( ILK )) )
       ensures #rangeUInt(256, ILK)
      
    
    rule  ( Vat.Line() => #abiCallData("Line", .TypedArgs) )
      
    
    rule  ( Vat.art(ILK, URN) => #abiCallData("art", #bytes32( ILK ), #address( URN )) )
       ensures ( #rangeUInt(256, ILK)
       andBool ( #rangeAddress(URN)
               ))
      
    
    rule  ( Vat.cage() => #abiCallData("cage", .TypedArgs) )
      
    
    rule  ( Vat.can(V0, V1) => #abiCallData("can", #address( V0 ), #address( V1 )) )
       ensures ( #rangeAddress(V0)
       andBool ( #rangeAddress(V1)
               ))
      
    
    rule  ( Vat.dai(V0) => #abiCallData("dai", #address( V0 )) )
       ensures #rangeAddress(V0)
      
    
    rule  ( Vat.debt() => #abiCallData("debt", .TypedArgs) )
      
    
    rule  ( Vat.deny(USR) => #abiCallData("deny", #address( USR )) )
       ensures #rangeAddress(USR)
      
    
    rule  ( Vat.dust(ILK) => #abiCallData("dust", #bytes32( ILK )) )
       ensures #rangeUInt(256, ILK)
      
    
    rule  ( Vat.file(ILK, WHAT, DATA) => #abiCallData("file", #bytes32( ILK ), #bytes32( WHAT ), #uint256( DATA )) )
       ensures ( #rangeUInt(256, ILK)
       andBool ( #rangeUInt(256, WHAT)
       andBool ( #rangeUInt(256, DATA)
               )))
      
    
    rule  ( Vat.file(WHAT, DATA) => #abiCallData("file", #bytes32( WHAT ), #uint256( DATA )) )
       ensures ( #rangeUInt(256, WHAT)
       andBool ( #rangeUInt(256, DATA)
               ))
      
    
    rule  ( Vat.flux(ILK, SRC, DST, WAD) => #abiCallData("flux", #bytes32( ILK ), #address( SRC ), #address( DST ), #uint256( WAD )) )
       ensures ( #rangeUInt(256, ILK)
       andBool ( #rangeAddress(SRC)
       andBool ( #rangeAddress(DST)
       andBool ( #rangeUInt(256, WAD)
               ))))
      
    
    rule  ( Vat.fold(I, U, RATE_) => #abiCallData("fold", #bytes32( I ), #address( U ), #int256( RATE_ )) )
       ensures ( #rangeUInt(256, I)
       andBool ( #rangeAddress(U)
       andBool ( #rangeSInt(256, RATE_)
               )))
      
    
    rule  ( Vat.fork(ILK, SRC, DST, DINK, DART) => #abiCallData("fork", #bytes32( ILK ), #address( SRC ), #address( DST ), #int256( DINK ), #int256( DART )) )
       ensures ( #rangeUInt(256, ILK)
       andBool ( #rangeAddress(SRC)
       andBool ( #rangeAddress(DST)
       andBool ( #rangeSInt(256, DINK)
       andBool ( #rangeSInt(256, DART)
               )))))
      
    
    rule  ( Vat.frob(I, U, V, W, DINK, DART) => #abiCallData("frob", #bytes32( I ), #address( U ), #address( V ), #address( W ), #int256( DINK ), #int256( DART )) )
       ensures ( #rangeUInt(256, I)
       andBool ( #rangeAddress(U)
       andBool ( #rangeAddress(V)
       andBool ( #rangeAddress(W)
       andBool ( #rangeSInt(256, DINK)
       andBool ( #rangeSInt(256, DART)
               ))))))
      
    
    rule  ( Vat.gem(V0, V1) => #abiCallData("gem", #bytes32( V0 ), #address( V1 )) )
       ensures ( #rangeUInt(256, V0)
       andBool ( #rangeAddress(V1)
               ))
      
    
    rule  ( Vat.grab(I, U, V, W, DINK, DART) => #abiCallData("grab", #bytes32( I ), #address( U ), #address( V ), #address( W ), #int256( DINK ), #int256( DART )) )
       ensures ( #rangeUInt(256, I)
       andBool ( #rangeAddress(U)
       andBool ( #rangeAddress(V)
       andBool ( #rangeAddress(W)
       andBool ( #rangeSInt(256, DINK)
       andBool ( #rangeSInt(256, DART)
               ))))))
      
    
    rule  ( Vat.heal(RAD) => #abiCallData("heal", #uint256( RAD )) )
       ensures #rangeUInt(256, RAD)
      
    
    rule  ( Vat.hope(USR) => #abiCallData("hope", #address( USR )) )
       ensures #rangeAddress(USR)
      
    
    rule  ( Vat.ilks(V0) => #abiCallData("ilks", #bytes32( V0 )) )
       ensures #rangeUInt(256, V0)
      
    
    rule  ( Vat.init(ILK) => #abiCallData("init", #bytes32( ILK )) )
       ensures #rangeUInt(256, ILK)
      
    
    rule  ( Vat.ink(ILK, URN) => #abiCallData("ink", #bytes32( ILK ), #address( URN )) )
       ensures ( #rangeUInt(256, ILK)
       andBool ( #rangeAddress(URN)
               ))
      
    
    rule  ( Vat.line(ILK) => #abiCallData("line", #bytes32( ILK )) )
       ensures #rangeUInt(256, ILK)
      
    
    rule  ( Vat.live() => #abiCallData("live", .TypedArgs) )
      
    
    rule  ( Vat.move(SRC, DST, RAD) => #abiCallData("move", #address( SRC ), #address( DST ), #uint256( RAD )) )
       ensures ( #rangeAddress(SRC)
       andBool ( #rangeAddress(DST)
       andBool ( #rangeUInt(256, RAD)
               )))
      
    
    rule  ( Vat.nope(USR) => #abiCallData("nope", #address( USR )) )
       ensures #rangeAddress(USR)
      
    
    rule  ( Vat.rate(ILK) => #abiCallData("rate", #bytes32( ILK )) )
       ensures #rangeUInt(256, ILK)
      
    
    rule  ( Vat.rely(USR) => #abiCallData("rely", #address( USR )) )
       ensures #rangeAddress(USR)
      
    
    rule  ( Vat.sin(V0) => #abiCallData("sin", #address( V0 )) )
       ensures #rangeAddress(V0)
      
    
    rule  ( Vat.slip(ILK, USR, WAD) => #abiCallData("slip", #bytes32( ILK ), #address( USR ), #int256( WAD )) )
       ensures ( #rangeUInt(256, ILK)
       andBool ( #rangeAddress(USR)
       andBool ( #rangeSInt(256, WAD)
               )))
      
    
    rule  ( Vat.spot(ILK) => #abiCallData("spot", #bytes32( ILK )) )
       ensures #rangeUInt(256, ILK)
      
    
    rule  ( Vat.suck(U, V, RAD) => #abiCallData("suck", #address( U ), #address( V ), #uint256( RAD )) )
       ensures ( #rangeAddress(U)
       andBool ( #rangeAddress(V)
       andBool ( #rangeUInt(256, RAD)
               )))
      
    
    rule  ( Vat.urns(V0, V1) => #abiCallData("urns", #bytes32( V0 ), #address( V1 )) )
       ensures ( #rangeUInt(256, V0)
       andBool ( #rangeAddress(V1)
               ))
      
    
    rule  ( Vat.vice() => #abiCallData("vice", .TypedArgs) )
      
    
    rule  ( Vat.wards(V0) => #abiCallData("wards", #address( V0 )) )
       ensures #rangeAddress(V0)
      
    
    rule  ( #binRuntime(Vat) => #parseByteStack( "0x608060405234801561001057600080fd5b50600436106102115760003560e01c80637cdd3fde11610125578063bf353dbb116100ad578063ee2070241161007c578063ee20702414610635578063f059212a14610665578063f24e23eb14610695578063f37ac61c146106b1578063ffe567e8146106cd57610211565b8063bf353dbb14610585578063d9638d36146105b5578063dc4d20fa146105e9578063e1340a3d1461060557610211565b8063a3b22fc4116100f4578063a3b22fc4146104e3578063b24a30fe146104ff578063b65337df1461052f578063babe8a3f1461054b578063bb35783b1461056957610211565b80637cdd3fde14610471578063870c616d1461048d578063957aa58c146104a95780639c52a7f1146104c757610211565b80634538c4eb116101a857806365fae35e1161017757806365fae35e146103e357806369245009146103ff5780636c25b3461461040957806376088703146104395780637bab3f401461045557610211565b80634538c4eb1461033757806348c85c3914610367578063498dec33146103975780636111be2e146103c757610211565b806329ae8114116101e457806329ae8114146102b15780632d61a355146102cd57806331fb38b5146102eb5780633b6631951461031b57610211565b80630dca59c1146102165780631a0b287e14610234578063214414d5146102505780632424be5c14610280575b600080fd5b61021e6106fd565b60405161022b9190612cce565b60405180910390f35b61024e60048036038101906102499190612d50565b610703565b005b61026a60048036038101906102659190612e01565b610919565b6040516102779190612cce565b60405180910390f35b61029a60048036038101906102959190612e01565b61093e565b6040516102a8929190612e41565b60405180910390f35b6102cb60048036038101906102c69190612e6a565b61096f565b005b6102d5610adf565b6040516102e29190612cce565b60405180910390f35b61030560048036038101906103009190612e01565b610ae5565b6040516103129190612cce565b60405180910390f35b61033560048036038101906103309190612eaa565b610b43565b005b610351600480360381019061034c9190612ed7565b610c74565b60405161035e9190612cce565b60405180910390f35b610381600480360381019061037c9190612eaa565b610c99565b60405161038e9190612cce565b60405180910390f35b6103b160048036038101906103ac9190612eaa565b610cb9565b6040516103be9190612cce565b60405180910390f35b6103e160048036038101906103dc9190612f17565b610cd9565b005b6103fd60048036038101906103f89190612f7e565b610eee565b005b61040761103e565b005b610423600480360381019061041e9190612f7e565b6110f5565b6040516104309190612cce565b60405180910390f35b610453600480360381019061044e9190612fe1565b61110d565b005b61046f600480360381019061046a9190612fe1565b611784565b005b61048b6004803603810190610486919061306e565b611a7a565b005b6104a760048036038101906104a291906130c1565b611bfd565b005b6104b1611f6d565b6040516104be9190612cce565b60405180910390f35b6104e160048036038101906104dc9190612f7e565b611f73565b005b6104fd60048036038101906104f89190612f7e565b6120c3565b005b61051960048036038101906105149190612eaa565b6121a1565b6040516105269190612cce565b60405180910390f35b6105496004803603810190610544919061306e565b6121c1565b005b6105536123c4565b6040516105609190612cce565b60405180910390f35b610583600480360381019061057e919061313c565b6123ca565b005b61059f600480360381019061059a9190612f7e565b612599565b6040516105ac9190612cce565b60405180910390f35b6105cf60048036038101906105ca9190612eaa565b6125b1565b6040516105e095949392919061318f565b60405180910390f35b61060360048036038101906105fe9190612f7e565b6125e7565b005b61061f600480360381019061061a9190612eaa565b6126c6565b60405161062c9190612cce565b60405180910390f35b61064f600480360381019061064a9190612eaa565b6126e6565b60405161065c9190612cce565b60405180910390f35b61067f600480360381019061067a9190612f7e565b612706565b60405161068c9190612cce565b60405180910390f35b6106af60048036038101906106aa919061313c565b61271e565b005b6106cb60048036038101906106c691906131e2565b61294d565b005b6106e760048036038101906106e29190612e01565b612ae8565b6040516106f49190612cce565b60405180910390f35b60075481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610784576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077b9061326c565b60405180910390fd5b6001600a54146107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c0906132d8565b60405180910390fd5b7f73706f74000000000000000000000000000000000000000000000000000000008203610810578060026000858152602001908152602001600020600201819055506108db565b7f6c696e65000000000000000000000000000000000000000000000000000000008203610857578060026000858152602001908152602001600020600301819055506108da565b7f6475737400000000000000000000000000000000000000000000000000000000820361089e578060026000858152602001908152602001600020600401819055506108d9565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d090613344565b60405180910390fd5b5b5b81837f851aa1caf4888170ad8875449d18f0f512fd6deb2a6571ea1a41fb9f95acbcd18360405161090c9190612cce565b60405180910390a3505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b6003602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146109f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e79061326c565b60405180910390fd5b6001600a5414610a35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2c906132d8565b60405180910390fd5b7f4c696e65000000000000000000000000000000000000000000000000000000008203610a685780600981905550610aa3565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9a90613344565b60405180910390fd5b817fe986e40cc8c151830d4f61050f4fb2e4add8567caad2d5f5496f9158e91fe4c782604051610ad39190612cce565b60405180910390a25050565b60085481565b60006003600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905092915050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610bc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbb9061326c565b60405180910390fd5b6000600260008381526020019081526020016000206001015414610c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c14906133b0565b60405180910390fd5b6b033b2e3c9fd0803ce80000006002600083815260200190815260200160002060010181905550807feeb45f27c5b399a603237b10d4803743d494bfc24c3a004cadb716c41033a55560405160405180910390a250565b6001602052816000526040600020602052806000526040600020600091509150505481565b600060026000838152602001908152602001600020600201549050919050565b600060026000838152602001908152602001600020600401549050919050565b610ce38333612b46565b610d22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d199061341c565b60405180910390fd5b806004600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7e919061346b565b6004600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806004600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e2e919061349f565b6004600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f5718eae79ffb8b6c98c497e5029a903705cf6a33a17aaab32de7fe198d8d8a0d84604051610ee09190612cce565b60405180910390a450505050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610f6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f669061326c565b60405180910390fd5b6001600a5414610fb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fab906132d8565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a6060405160405180910390a250565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146110bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b69061326c565b60405180910390fd5b6000600a819055507f2308ed18a14e800c39b86eb6ea43270105955ca385b603b64eca89f98ae8fbda60405160405180910390a1565b60056020528060005260406000206000915090505481565b6001600a5414611152576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611149906132d8565b60405180910390fd5b60006003600088815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000600260008981526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152505090506000816020015103611260576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125790613541565b60405180910390fd5b61126e826000015185612c06565b826000018181525050611285826020015184612c06565b82602001818152505061129c816000015184612c06565b8160000181815250506000836112b58360200151612c45565b6112bf9190613561565b90506000836020015183602001516112d79190613678565b90506112e560075483612c06565b600781905550611323600086131561131e85606001518660200151876000015161130f9190613678565b11156009546007541115612c5c565b612c69565b611362576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113599061371e565b60405180910390fd5b61139361137760008713156000891215612c5c565b8460400151866000015161138b9190613678565b831115612c69565b6113d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c99061378a565b60405180910390fd5b6113f66113e760008713156000891215612c5c565b6113f18b33612b46565b612c69565b611435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142c906137f6565b60405180910390fd5b61144c60008713156114478a33612b46565b612c69565b61148b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148290613862565b60405180910390fd5b6114a2600086121561149d8933612b46565b612c69565b6114e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d8906138ce565b60405180910390fd5b6114f960008560200151148460800151831015612c69565b611538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152f9061393a565b60405180910390fd5b611592600460008c815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205487612c76565b600460008c815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061162f600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483612c06565b600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083600360008c815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505082600260008c815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050508873ffffffffffffffffffffffffffffffffffffffff168a7fe37707842c8387f7c3c357f1d6c5bf57084e681573bdda024fae70cf0ecde80e8a8a8a8a6040516117709493929190613978565b60405180910390a350505050505050505050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117fc9061326c565b60405180910390fd5b60006003600088815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600060026000898152602001908152602001600020905061187e826000015485612c06565b8260000181905550611894826001015484612c06565b82600101819055506118aa816000015484612c06565b81600001819055506000836118c28360010154612c45565b6118cc9190613561565b9050611928600460008b815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205486612c76565b600460008b815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506119c5600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482612c76565b600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a1460085482612c76565b6008819055508773ffffffffffffffffffffffffffffffffffffffff16897f1b2837fd40844c96cf39e52acaae7902fb74257fe20b1b7df5458b97d896c63689898989604051611a679493929190613978565b60405180910390a3505050505050505050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611afb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af29061326c565b60405180910390fd5b611b556004600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482612c06565b6004600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16837f0d5f62756a04d37a9bb68fd20b97c7c6a03e96ab87385a99f99c2463157dba4e83604051611bf091906139bd565b60405180910390a3505050565b60006003600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006003600088815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000600260008981526020019081526020016000209050611cca836000015486612c76565b8360000181905550611ce0836001015485612c76565b8360010181905550611cf6826000015486612c06565b8260000181905550611d0c826001015485612c06565b8260010181905550600081600101548460010154611d2a9190613678565b9050600082600101548460010154611d429190613678565b9050611d60611d518a33612b46565b611d5b8a33612b46565b612c5c565b611d9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d969061341c565b60405180910390fd5b82600201548560000154611db39190613678565b821115611df5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dec90613a24565b60405180910390fd5b82600201548460000154611e099190613678565b811115611e4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4290613a90565b60405180910390fd5b611e6383600401548310156000876001015414612c69565b611ea2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9990613afc565b60405180910390fd5b611eba83600401548210156000866001015414612c69565b611ef9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ef090613b68565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168b7f4b67161d2a4293b296b2f023c52ea4214353fa4f03e58973572faa00097dbd1e8a8a604051611f59929190613b88565b60405180910390a450505050505050505050565b600a5481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611ff4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611feb9061326c565b60405180910390fd5b6001600a5414612039576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612030906132d8565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b60405160405180910390a250565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167faa731fc3330498a56e191236785be109218ed38365faa8c33965e6de3b78ee4c60405160405180910390a350565b600060026000838152602001908152602001600020600301549050919050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414612242576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122399061326c565b60405180910390fd5b6001600a5414612287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161227e906132d8565b60405180910390fd5b60006002600085815260200190815260200160002090506122ac816001015483612c06565b81600101819055506000826122c48360000154612c45565b6122ce9190613561565b9050612319600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482612c06565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061236860075482612c06565b6007819055508373ffffffffffffffffffffffffffffffffffffffff16857f8e03d1ac49b6d4e90dd1c4e641ecc5ca76b7c07a487690b6897c0e5e374b19d2856040516123b591906139bd565b60405180910390a35050505050565b60095481565b6123d48333612b46565b612413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240a9061341c565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461245e919061346b565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546124ec919061349f565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fdeb3a6837278f6e9914a507e4d73f08e841d8fca434fb97d4307b3b0d3d6b1058360405161258c9190612cce565b60405180910390a3505050565b60006020528060005260406000206000915090505481565b60026020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154905085565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f181131ad57ffc99f2486240a094384037710b935bcd941b626ca2856316bb2c560405160405180910390a350565b600060026000838152602001908152602001600020600001549050919050565b600060026000838152602001908152602001600020600101549050919050565b60066020528060005260406000206000915090505481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461279f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127969061326c565b60405180910390fd5b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127ea919061349f565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612878919061349f565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806008546128c9919061349f565b600881905550806007546128dd919061349f565b6007819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f02d16dda43fd89f02e33ce23ecf0251cdc426807cc72ae74d37e8d3681dae7e5836040516129409190612cce565b60405180910390a3505050565b600033905081600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461299d919061346b565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a2b919061346b565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600854612a7c919061346b565b60088190555081600754612a90919061346b565b6007819055503373ffffffffffffffffffffffffffffffffffffffff167ff45656a54542e115023bb56558fa8a669119d7b2cc53bbc6c11b6ffc3b36e96583604051612adc9190612cce565b60405180910390a25050565b60006003600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905092915050565b6000612bfe8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161460018060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414612c69565b905092915050565b60008183019050600082121580612c1d5750828111155b612c2657600080fd5b600082131580612c365750828110155b612c3f57600080fd5b92915050565b600080829150811215612c5757600080fd5b919050565b6000818316905092915050565b6000818317905092915050565b60008183039050600082131580612c8d5750828111155b612c9657600080fd5b600082121580612ca65750828110155b612caf57600080fd5b92915050565b6000819050919050565b612cc881612cb5565b82525050565b6000602082019050612ce36000830184612cbf565b92915050565b600080fd5b6000819050919050565b612d0181612cee565b8114612d0c57600080fd5b50565b600081359050612d1e81612cf8565b92915050565b612d2d81612cb5565b8114612d3857600080fd5b50565b600081359050612d4a81612d24565b92915050565b600080600060608486031215612d6957612d68612ce9565b5b6000612d7786828701612d0f565b9350506020612d8886828701612d0f565b9250506040612d9986828701612d3b565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612dce82612da3565b9050919050565b612dde81612dc3565b8114612de957600080fd5b50565b600081359050612dfb81612dd5565b92915050565b60008060408385031215612e1857612e17612ce9565b5b6000612e2685828601612d0f565b9250506020612e3785828601612dec565b9150509250929050565b6000604082019050612e566000830185612cbf565b612e636020830184612cbf565b9392505050565b60008060408385031215612e8157612e80612ce9565b5b6000612e8f85828601612d0f565b9250506020612ea085828601612d3b565b9150509250929050565b600060208284031215612ec057612ebf612ce9565b5b6000612ece84828501612d0f565b91505092915050565b60008060408385031215612eee57612eed612ce9565b5b6000612efc85828601612dec565b9250506020612f0d85828601612dec565b9150509250929050565b60008060008060808587031215612f3157612f30612ce9565b5b6000612f3f87828801612d0f565b9450506020612f5087828801612dec565b9350506040612f6187828801612dec565b9250506060612f7287828801612d3b565b91505092959194509250565b600060208284031215612f9457612f93612ce9565b5b6000612fa284828501612dec565b91505092915050565b6000819050919050565b612fbe81612fab565b8114612fc957600080fd5b50565b600081359050612fdb81612fb5565b92915050565b60008060008060008060c08789031215612ffe57612ffd612ce9565b5b600061300c89828a01612d0f565b965050602061301d89828a01612dec565b955050604061302e89828a01612dec565b945050606061303f89828a01612dec565b935050608061305089828a01612fcc565b92505060a061306189828a01612fcc565b9150509295509295509295565b60008060006060848603121561308757613086612ce9565b5b600061309586828701612d0f565b93505060206130a686828701612dec565b92505060406130b786828701612fcc565b9150509250925092565b600080600080600060a086880312156130dd576130dc612ce9565b5b60006130eb88828901612d0f565b95505060206130fc88828901612dec565b945050604061310d88828901612dec565b935050606061311e88828901612fcc565b925050608061312f88828901612fcc565b9150509295509295909350565b60008060006060848603121561315557613154612ce9565b5b600061316386828701612dec565b935050602061317486828701612dec565b925050604061318586828701612d3b565b9150509250925092565b600060a0820190506131a46000830188612cbf565b6131b16020830187612cbf565b6131be6040830186612cbf565b6131cb6060830185612cbf565b6131d86080830184612cbf565b9695505050505050565b6000602082840312156131f8576131f7612ce9565b5b600061320684828501612d3b565b91505092915050565b600082825260208201905092915050565b7f5661742f6e6f742d617574686f72697a65640000000000000000000000000000600082015250565b600061325660128361320f565b915061326182613220565b602082019050919050565b6000602082019050818103600083015261328581613249565b9050919050565b7f5661742f6e6f742d6c6976650000000000000000000000000000000000000000600082015250565b60006132c2600c8361320f565b91506132cd8261328c565b602082019050919050565b600060208201905081810360008301526132f1816132b5565b9050919050565b7f5661742f66696c652d756e7265636f676e697a65642d706172616d0000000000600082015250565b600061332e601b8361320f565b9150613339826132f8565b602082019050919050565b6000602082019050818103600083015261335d81613321565b9050919050565b7f5661742f696c6b2d616c72656164792d696e6974000000000000000000000000600082015250565b600061339a60148361320f565b91506133a582613364565b602082019050919050565b600060208201905081810360008301526133c98161338d565b9050919050565b7f5661742f6e6f742d616c6c6f7765640000000000000000000000000000000000600082015250565b6000613406600f8361320f565b9150613411826133d0565b602082019050919050565b60006020820190508181036000830152613435816133f9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061347682612cb5565b915061348183612cb5565b9250828210156134945761349361343c565b5b828203905092915050565b60006134aa82612cb5565b91506134b583612cb5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156134ea576134e961343c565b5b828201905092915050565b7f5661742f696c6b2d6e6f742d696e697400000000000000000000000000000000600082015250565b600061352b60108361320f565b9150613536826134f5565b602082019050919050565b6000602082019050818103600083015261355a8161351e565b9050919050565b600061356c82612fab565b915061357783612fab565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156135b6576135b561343c565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156135f3576135f261343c565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156136305761362f61343c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561366d5761366c61343c565b5b828202905092915050565b600061368382612cb5565b915061368e83612cb5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156136c7576136c661343c565b5b828202905092915050565b7f5661742f6365696c696e672d6578636565646564000000000000000000000000600082015250565b600061370860148361320f565b9150613713826136d2565b602082019050919050565b60006020820190508181036000830152613737816136fb565b9050919050565b7f5661742f6e6f742d736166650000000000000000000000000000000000000000600082015250565b6000613774600c8361320f565b915061377f8261373e565b602082019050919050565b600060208201905081810360008301526137a381613767565b9050919050565b7f5661742f6e6f742d616c6c6f7765642d75000000000000000000000000000000600082015250565b60006137e060118361320f565b91506137eb826137aa565b602082019050919050565b6000602082019050818103600083015261380f816137d3565b9050919050565b7f5661742f6e6f742d616c6c6f7765642d76000000000000000000000000000000600082015250565b600061384c60118361320f565b915061385782613816565b602082019050919050565b6000602082019050818103600083015261387b8161383f565b9050919050565b7f5661742f6e6f742d616c6c6f7765642d77000000000000000000000000000000600082015250565b60006138b860118361320f565b91506138c382613882565b602082019050919050565b600060208201905081810360008301526138e7816138ab565b9050919050565b7f5661742f64757374000000000000000000000000000000000000000000000000600082015250565b600061392460088361320f565b915061392f826138ee565b602082019050919050565b6000602082019050818103600083015261395381613917565b9050919050565b61396381612dc3565b82525050565b61397281612fab565b82525050565b600060808201905061398d600083018761395a565b61399a602083018661395a565b6139a76040830185613969565b6139b46060830184613969565b95945050505050565b60006020820190506139d26000830184613969565b92915050565b7f5661742f6e6f742d736166652d73726300000000000000000000000000000000600082015250565b6000613a0e60108361320f565b9150613a19826139d8565b602082019050919050565b60006020820190508181036000830152613a3d81613a01565b9050919050565b7f5661742f6e6f742d736166652d64737400000000000000000000000000000000600082015250565b6000613a7a60108361320f565b9150613a8582613a44565b602082019050919050565b60006020820190508181036000830152613aa981613a6d565b9050919050565b7f5661742f647573742d7372630000000000000000000000000000000000000000600082015250565b6000613ae6600c8361320f565b9150613af182613ab0565b602082019050919050565b60006020820190508181036000830152613b1581613ad9565b9050919050565b7f5661742f647573742d6473740000000000000000000000000000000000000000600082015250565b6000613b52600c8361320f565b9150613b5d82613b1c565b602082019050919050565b60006020820190508181036000830152613b8181613b45565b9050919050565b6000604082019050613b9d6000830185613969565b613baa6020830184613969565b939250505056fea26469706673582212205ca5d19affb79e5662e20adbb45b390f6f80fba11de968736bafb790f187111064736f6c637828302e382e31332d646576656c6f702e323032322e342e32362b636f6d6d69742e61626161356330650059" ) )
      
    
    rule  ( selector("Art") => 3778284093 )
      
    
    rule  ( selector("Line") => 3133049407 )
      
    
    rule  ( selector("art") => 838547637 )
      
    
    rule  ( selector("cage") => 1763987465 )
      
    
    rule  ( selector("can") => 1161348331 )
      
    
    rule  ( selector("dai") => 1814410054 )
      
    
    rule  ( selector("debt") => 231365057 )
      
    
    rule  ( selector("deny") => 2622662641 )
      
    
    rule  ( selector("dust") => 1234037811 )
      
    
    rule  ( selector("file") => 436938878 )
      
    
    rule  ( selector("file") => 699302164 )
      
    
    rule  ( selector("flux") => 1628552750 )
      
    
    rule  ( selector("fold") => 3058907103 )
      
    
    rule  ( selector("fork") => 2265735533 )
      
    
    rule  ( selector("frob") => 1980270339 )
      
    
    rule  ( selector("gem") => 558109909 )
      
    
    rule  ( selector("grab") => 2074820416 )
      
    
    rule  ( selector("heal") => 4084909596 )
      
    
    rule  ( selector("hope") => 2746363844 )
      
    
    rule  ( selector("ilks") => 3647180086 )
      
    
    rule  ( selector("init") => 996553109 )
      
    
    rule  ( selector("ink") => 4293224424 )
      
    
    rule  ( selector("line") => 2991206654 )
      
    
    rule  ( selector("live") => 2507842956 )
      
    
    rule  ( selector("move") => 3140843579 )
      
    
    rule  ( selector("nope") => 3696042234 )
      
    
    rule  ( selector("rate") => 3995103268 )
      
    
    rule  ( selector("rely") => 1710941022 )
      
    
    rule  ( selector("sin") => 4032373034 )
      
    
    rule  ( selector("slip") => 2094874590 )
      
    
    rule  ( selector("spot") => 1221090361 )
      
    
    rule  ( selector("suck") => 4065207275 )
      
    
    rule  ( selector("urns") => 606387804 )
      
    
    rule  ( selector("vice") => 761373525 )
      
    
    rule  ( selector("wards") => 3207937467 )
      

endmodule

