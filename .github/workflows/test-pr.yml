name: 'Test PR'
on:
  pull_request:
    branches:
      - 'master'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  version-bump:
    name: 'Version Bump'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out code, setup git/poetry'
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.JENKINS_GITHUB_PAT }}
          # fetch-depth 0 means deep clone the repo
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - run: |
          git config user.name devops
          git config user.email devops@runtimeverification.com
          curl -sSL https://install.python-poetry.org | python3 - --version 1.3.2
          poetry --version
      - name: 'Update Version'
        run: |
          og_version=$(git show origin/${GITHUB_BASE_REF}:package/version)
          ./package/version.sh bump ${og_version}
          ./package/version.sh sub
          git add --update && git commit --message "Set Version: $(cat package/version)" || true
      - name: 'Sync Poetry'
        run: |
          cd kevm-pyk
          poetry update
          cd ..
          git add kevm-pyk/poetry.lock && git commit --message 'kevm-pyk/: sync poetry files' || true
      - name: 'Install Nix'
        uses: cachix/install-nix-action@v19
        with:
          install_url: https://releases.nixos.org/nix/nix-2.13.3/install
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: 'Install Cachix'
        uses: cachix/cachix-action@v12
        with:
          name: k-framework
          authToken: ${{ secrets.CACHIX_PUBLIC_TOKEN }}
          skipPush: true
      - name: 'Update nix flake inputs'
        run: |
          nix flake update
          git add flake.nix flake.lock && git commit -m 'flake.{nix,lock}: update Nix derivations' || true
      - name: 'Push updates'
        run: git push origin HEAD:${GITHUB_HEAD_REF}
