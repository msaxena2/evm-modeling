name: 'Update Foundry prove'
on: push
jobs:
  update-output:
    name: 'Update Foundry expected output'
    runs-on: [self-hosted, linux, huge]
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.JENKINS_GITHUB_PAT }}
          ref: ${{ github.events.inputs.branch }}
      - name: Git Submodule Update
        run: |
          git submodule update --init --recursive
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          tag: kevm-update-output-${{ github.sha }}
      - name: 'Build devShell'
        env: 
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_PUBLIC_TOKEN }}
        run: cachix watch-exec k-framework -- nix build --extra-experimental-features 'nix-command flakes' .#devShell.x86_64-linux.inputDerivation --no-link
      - name: 'Build blockchain-k-plugin-deps'
        run: docker exec -u user kevm-update-output-${GITHUB_SHA} /bin/bash -c 'make plugin-deps'
      - name: 'Build kevm-pyk'
        run: docker exec -u user kevm-update-output-${GITHUB_SHA} /bin/bash -c 'make poetry'
      - name: 'Build Foundry'
        run: docker exec -u user kevm-update-output-${GITHUB_SHA} /bin/bash -c 'make build-foundry -j2'
      - name: 'Foundry Prove Update'
        run: docker exec -u user kevm-update-output-${GITHUB_SHA} /bin/bash -c 'make test-integration TEST_ARGS+="-n8 -k test_foundry_prove --update-expected-output"'
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 kevm-update-output-${GITHUB_SHA}
      - name: 'Push updates'
        run: git push
